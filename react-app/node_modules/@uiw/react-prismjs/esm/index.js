import _extends from "@babel/runtime/helpers/extends";
import _asyncToGenerator from "@babel/runtime/helpers/asyncToGenerator";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["prefixCls", "className", "language", "source", "children"];
import React, { useEffect } from 'react';
import PropTypes from 'prop-types';
import Prism from 'prismjs';
import "./style/index.css";
import { jsx as _jsx } from "react/jsx-runtime";
export default function ReactPrismjs(props) {
  if (props === void 0) {
    props = {};
  }

  var codeRef = /*#__PURE__*/React.createRef();

  var {
    prefixCls,
    className,
    language,
    source,
    children
  } = props,
      others = _objectWithoutPropertiesLoose(props, _excluded);

  var langCls = language ? "language-" + language : '';

  function highlight() {
    return _highlight.apply(this, arguments);
  }

  function _highlight() {
    _highlight = _asyncToGenerator(function* () {
      if (codeRef.current) {
        Prism.highlightElement(codeRef.current);
      }
    });
    return _highlight.apply(this, arguments);
  }

  useEffect(() => {
    highlight(); // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [language, source]);
  return /*#__PURE__*/_jsx("pre", _extends({
    className: prefixCls + " " + (className || '') + " " + langCls
  }, others, {
    children: /*#__PURE__*/_jsx("code", {
      className: langCls,
      ref: codeRef,
      children: source || children
    })
  }));
}
ReactPrismjs.defaultProps = {
  prefixCls: 'w-prismjs',
  code: ''
};
ReactPrismjs.propTypes = {
  prefixCls: PropTypes.string,
  language: PropTypes.string,
  code: PropTypes.string
};
//# sourceMappingURL=index.js.map