{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = globals.performance && typeof globals.performance.now === 'function';\nexport class StopWatch {\n  constructor(highResolution) {\n    this._highResolution = hasPerformanceNow && highResolution;\n    this._startTime = this._now();\n    this._stopTime = -1;\n  }\n  static create() {\n    let highResolution = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return new StopWatch(highResolution);\n  }\n  stop() {\n    this._stopTime = this._now();\n  }\n  elapsed() {\n    if (this._stopTime !== -1) {\n      return this._stopTime - this._startTime;\n    }\n    return this._now() - this._startTime;\n  }\n  _now() {\n    return this._highResolution ? globals.performance.now() : Date.now();\n  }\n}","map":{"version":3,"names":["globals","hasPerformanceNow","performance","now","StopWatch","constructor","highResolution","_highResolution","_startTime","_now","_stopTime","create","stop","elapsed","Date"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/common/stopwatch.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,eAAe;AACvC,MAAMC,iBAAiB,GAAID,OAAO,CAACE,WAAW,IAAI,OAAOF,OAAO,CAACE,WAAW,CAACC,GAAG,KAAK,UAAW;AAChG,OAAO,MAAMC,SAAS,CAAC;EACnBC,WAAW,CAACC,cAAc,EAAE;IACxB,IAAI,CAACC,eAAe,GAAGN,iBAAiB,IAAIK,cAAc;IAC1D,IAAI,CAACE,UAAU,GAAG,IAAI,CAACC,IAAI,EAAE;IAC7B,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;EACvB;EACA,OAAOC,MAAM,GAAwB;IAAA,IAAvBL,cAAc,uEAAG,IAAI;IAC/B,OAAO,IAAIF,SAAS,CAACE,cAAc,CAAC;EACxC;EACAM,IAAI,GAAG;IACH,IAAI,CAACF,SAAS,GAAG,IAAI,CAACD,IAAI,EAAE;EAChC;EACAI,OAAO,GAAG;IACN,IAAI,IAAI,CAACH,SAAS,KAAK,CAAC,CAAC,EAAE;MACvB,OAAO,IAAI,CAACA,SAAS,GAAG,IAAI,CAACF,UAAU;IAC3C;IACA,OAAO,IAAI,CAACC,IAAI,EAAE,GAAG,IAAI,CAACD,UAAU;EACxC;EACAC,IAAI,GAAG;IACH,OAAO,IAAI,CAACF,eAAe,GAAGP,OAAO,CAACE,WAAW,CAACC,GAAG,EAAE,GAAGW,IAAI,CAACX,GAAG,EAAE;EACxE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}