{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isArray, isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  if (obj instanceof RegExp) {\n    // See https://github.com/microsoft/TypeScript/issues/10990\n    return obj;\n  }\n  const result = Array.isArray(obj) ? [] : {};\n  Object.keys(obj).forEach(key => {\n    if (obj[key] && typeof obj[key] === 'object') {\n      result[key] = deepClone(obj[key]);\n    } else {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\nexport function deepFreeze(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  const stack = [obj];\n  while (stack.length > 0) {\n    const obj = stack.shift();\n    Object.freeze(obj);\n    for (const key in obj) {\n      if (_hasOwnProperty.call(obj, key)) {\n        const prop = obj[key];\n        if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n          stack.push(prop);\n        }\n      }\n    }\n  }\n  return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n  return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n  if (isUndefinedOrNull(obj)) {\n    return obj;\n  }\n  const changed = changer(obj);\n  if (typeof changed !== 'undefined') {\n    return changed;\n  }\n  if (isArray(obj)) {\n    const r1 = [];\n    for (const e of obj) {\n      r1.push(_cloneAndChange(e, changer, seen));\n    }\n    return r1;\n  }\n  if (isObject(obj)) {\n    if (seen.has(obj)) {\n      throw new Error('Cannot clone recursive data-structure');\n    }\n    seen.add(obj);\n    const r2 = {};\n    for (const i2 in obj) {\n      if (_hasOwnProperty.call(obj, i2)) {\n        r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n      }\n    }\n    seen.delete(obj);\n    return r2;\n  }\n  return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source) {\n  let overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (!isObject(destination)) {\n    return source;\n  }\n  if (isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (key in destination) {\n        if (overwrite) {\n          if (isObject(destination[key]) && isObject(source[key])) {\n            mixin(destination[key], source[key], overwrite);\n          } else {\n            destination[key] = source[key];\n          }\n        }\n      } else {\n        destination[key] = source[key];\n      }\n    });\n  }\n  return destination;\n}\nexport function equals(one, other) {\n  if (one === other) {\n    return true;\n  }\n  if (one === null || one === undefined || other === null || other === undefined) {\n    return false;\n  }\n  if (typeof one !== typeof other) {\n    return false;\n  }\n  if (typeof one !== 'object') {\n    return false;\n  }\n  if (Array.isArray(one) !== Array.isArray(other)) {\n    return false;\n  }\n  let i;\n  let key;\n  if (Array.isArray(one)) {\n    if (one.length !== other.length) {\n      return false;\n    }\n    for (i = 0; i < one.length; i++) {\n      if (!equals(one[i], other[i])) {\n        return false;\n      }\n    }\n  } else {\n    const oneKeys = [];\n    for (key in one) {\n      oneKeys.push(key);\n    }\n    oneKeys.sort();\n    const otherKeys = [];\n    for (key in other) {\n      otherKeys.push(key);\n    }\n    otherKeys.sort();\n    if (!equals(oneKeys, otherKeys)) {\n      return false;\n    }\n    for (i = 0; i < oneKeys.length; i++) {\n      if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}","map":{"version":3,"names":["isArray","isTypedArray","isObject","isUndefinedOrNull","deepClone","obj","RegExp","result","Array","Object","keys","forEach","key","deepFreeze","stack","length","shift","freeze","_hasOwnProperty","call","prop","isFrozen","push","prototype","hasOwnProperty","cloneAndChange","changer","_cloneAndChange","Set","seen","changed","r1","e","has","Error","add","r2","i2","delete","mixin","destination","source","overwrite","equals","one","other","undefined","i","oneKeys","sort","otherKeys"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/common/objects.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isArray, isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        // See https://github.com/microsoft/TypeScript/issues/10990\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach((key) => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            result[key] = deepClone(obj[key]);\n        }\n        else {\n            result[key] = obj[key];\n        }\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}