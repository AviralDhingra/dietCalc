{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as dom from '../../../browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { ActionBar } from '../../../browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../browser/ui/button/button.js';\nimport { CountBadge } from '../../../browser/ui/countBadge/countBadge.js';\nimport { renderLabelWithIcons } from '../../../browser/ui/iconLabel/iconLabels.js';\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\nimport { Action } from '../../../common/actions.js';\nimport { equals } from '../../../common/arrays.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { CancellationToken } from '../../../common/cancellation.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIOS } from '../../../common/platform.js';\nimport Severity from '../../../common/severity.js';\nimport { withNullAsUndefined } from '../../../common/types.js';\nimport { getIconClass } from './quickInputUtils.js';\nimport { ItemActivation, NO_KEY_MODS, QuickInputHideReason } from '../common/quickInput.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../../nls.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickInputList, QuickInputListFocus } from './quickInputList.js';\nconst $ = dom.$;\nconst backButton = {\n  iconClass: Codicon.quickInputBack.classNames,\n  tooltip: localize('quickInput.back', \"Back\"),\n  handle: -1 // TODO\n};\n\nclass QuickInput extends Disposable {\n  constructor(ui) {\n    super();\n    this.ui = ui;\n    this.visible = false;\n    this._enabled = true;\n    this._busy = false;\n    this._ignoreFocusOut = false;\n    this._buttons = [];\n    this.noValidationMessage = QuickInput.noPromptMessage;\n    this._severity = Severity.Ignore;\n    this.buttonsUpdated = false;\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.onDidHideEmitter = this._register(new Emitter());\n    this.onDisposeEmitter = this._register(new Emitter());\n    this.visibleDisposables = this._register(new DisposableStore());\n    this.onDidHide = this.onDidHideEmitter.event;\n  }\n  get title() {\n    return this._title;\n  }\n  set title(title) {\n    this._title = title;\n    this.update();\n  }\n  get description() {\n    return this._description;\n  }\n  set description(description) {\n    this._description = description;\n    this.update();\n  }\n  get step() {\n    return this._steps;\n  }\n  set step(step) {\n    this._steps = step;\n    this.update();\n  }\n  get totalSteps() {\n    return this._totalSteps;\n  }\n  set totalSteps(totalSteps) {\n    this._totalSteps = totalSteps;\n    this.update();\n  }\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(enabled) {\n    this._enabled = enabled;\n    this.update();\n  }\n  get contextKey() {\n    return this._contextKey;\n  }\n  set contextKey(contextKey) {\n    this._contextKey = contextKey;\n    this.update();\n  }\n  get busy() {\n    return this._busy;\n  }\n  set busy(busy) {\n    this._busy = busy;\n    this.update();\n  }\n  get ignoreFocusOut() {\n    return this._ignoreFocusOut;\n  }\n  set ignoreFocusOut(ignoreFocusOut) {\n    const shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n    this._ignoreFocusOut = ignoreFocusOut && !isIOS;\n    if (shouldUpdate) {\n      this.update();\n    }\n  }\n  get buttons() {\n    return this._buttons;\n  }\n  set buttons(buttons) {\n    this._buttons = buttons;\n    this.buttonsUpdated = true;\n    this.update();\n  }\n  get validationMessage() {\n    return this._validationMessage;\n  }\n  set validationMessage(validationMessage) {\n    this._validationMessage = validationMessage;\n    this.update();\n  }\n  get severity() {\n    return this._severity;\n  }\n  set severity(severity) {\n    this._severity = severity;\n    this.update();\n  }\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\n      if (this.buttons.indexOf(button) !== -1) {\n        this.onDidTriggerButtonEmitter.fire(button);\n      }\n    }));\n    this.ui.show(this);\n    // update properties in the controller that get reset in the ui.show() call\n    this.visible = true;\n    // This ensures the message/prompt gets rendered\n    this._lastValidationMessage = undefined;\n    // This ensures the input box has the right severity applied\n    this._lastSeverity = undefined;\n    if (this.buttons.length) {\n      // if there are buttons, the ui.show() clears them out of the UI so we should\n      // rerender them.\n      this.buttonsUpdated = true;\n    }\n    this.update();\n  }\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.ui.hide();\n  }\n  didHide() {\n    let reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : QuickInputHideReason.Other;\n    this.visible = false;\n    this.visibleDisposables.clear();\n    this.onDidHideEmitter.fire({\n      reason\n    });\n  }\n  update() {\n    if (!this.visible) {\n      return;\n    }\n    const title = this.getTitle();\n    if (title && this.ui.title.textContent !== title) {\n      this.ui.title.textContent = title;\n    } else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n      this.ui.title.innerText = '\\u00a0';\n    }\n    const description = this.getDescription();\n    if (this.ui.description1.textContent !== description) {\n      this.ui.description1.textContent = description;\n    }\n    if (this.ui.description2.textContent !== description) {\n      this.ui.description2.textContent = description;\n    }\n    if (this.busy && !this.busyDelay) {\n      this.busyDelay = new TimeoutTimer();\n      this.busyDelay.setIfNotSet(() => {\n        if (this.visible) {\n          this.ui.progressBar.infinite();\n        }\n      }, 800);\n    }\n    if (!this.busy && this.busyDelay) {\n      this.ui.progressBar.stop();\n      this.busyDelay.cancel();\n      this.busyDelay = undefined;\n    }\n    if (this.buttonsUpdated) {\n      this.buttonsUpdated = false;\n      this.ui.leftActionBar.clear();\n      const leftButtons = this.buttons.filter(button => button === backButton);\n      this.ui.leftActionBar.push(leftButtons.map((button, index) => {\n        const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n          this.onDidTriggerButtonEmitter.fire(button);\n        }));\n        action.tooltip = button.tooltip || '';\n        return action;\n      }), {\n        icon: true,\n        label: false\n      });\n      this.ui.rightActionBar.clear();\n      const rightButtons = this.buttons.filter(button => button !== backButton);\n      this.ui.rightActionBar.push(rightButtons.map((button, index) => {\n        const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n          this.onDidTriggerButtonEmitter.fire(button);\n        }));\n        action.tooltip = button.tooltip || '';\n        return action;\n      }), {\n        icon: true,\n        label: false\n      });\n    }\n    this.ui.ignoreFocusOut = this.ignoreFocusOut;\n    this.ui.setEnabled(this.enabled);\n    this.ui.setContextKey(this.contextKey);\n    const validationMessage = this.validationMessage || this.noValidationMessage;\n    if (this._lastValidationMessage !== validationMessage) {\n      this._lastValidationMessage = validationMessage;\n      dom.reset(this.ui.message, ...renderLabelWithIcons(validationMessage));\n    }\n    if (this._lastSeverity !== this.severity) {\n      this._lastSeverity = this.severity;\n      this.showMessageDecoration(this.severity);\n    }\n  }\n  getTitle() {\n    if (this.title && this.step) {\n      return `${this.title} (${this.getSteps()})`;\n    }\n    if (this.title) {\n      return this.title;\n    }\n    if (this.step) {\n      return this.getSteps();\n    }\n    return '';\n  }\n  getDescription() {\n    return this.description || '';\n  }\n  getSteps() {\n    if (this.step && this.totalSteps) {\n      return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n    }\n    if (this.step) {\n      return String(this.step);\n    }\n    return '';\n  }\n  showMessageDecoration(severity) {\n    this.ui.inputBox.showDecoration(severity);\n    if (severity !== Severity.Ignore) {\n      const styles = this.ui.inputBox.stylesForType(severity);\n      this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\n      this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\n      this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\n      this.ui.message.style.marginBottom = '-2px';\n    } else {\n      this.ui.message.style.color = '';\n      this.ui.message.style.backgroundColor = '';\n      this.ui.message.style.border = '';\n      this.ui.message.style.marginBottom = '';\n    }\n  }\n  dispose() {\n    this.hide();\n    this.onDisposeEmitter.fire();\n    super.dispose();\n  }\n}\nQuickInput.noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\");\nclass QuickPick extends QuickInput {\n  constructor() {\n    super(...arguments);\n    this._value = '';\n    this.onDidChangeValueEmitter = this._register(new Emitter());\n    this.onWillAcceptEmitter = this._register(new Emitter());\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this._items = [];\n    this.itemsUpdated = false;\n    this._canSelectMany = false;\n    this._canAcceptInBackground = false;\n    this._matchOnDescription = false;\n    this._matchOnDetail = false;\n    this._matchOnLabel = true;\n    this._matchOnLabelMode = 'fuzzy';\n    this._sortByLabel = true;\n    this._autoFocusOnList = true;\n    this._keepScrollPosition = false;\n    this._itemActivation = this.ui.isScreenReaderOptimized() ? ItemActivation.NONE /* https://github.com/microsoft/vscode/issues/57501 */ : ItemActivation.FIRST;\n    this._activeItems = [];\n    this.activeItemsUpdated = false;\n    this.activeItemsToConfirm = [];\n    this.onDidChangeActiveEmitter = this._register(new Emitter());\n    this._selectedItems = [];\n    this.selectedItemsUpdated = false;\n    this.selectedItemsToConfirm = [];\n    this.onDidChangeSelectionEmitter = this._register(new Emitter());\n    this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\n    this.valueSelectionUpdated = true;\n    this._ok = 'default';\n    this._customButton = false;\n    this.filterValue = value => value;\n    this.onDidChangeValue = this.onDidChangeValueEmitter.event;\n    this.onWillAccept = this.onWillAcceptEmitter.event;\n    this.onDidAccept = this.onDidAcceptEmitter.event;\n    this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\n    this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n    this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n  }\n  get quickNavigate() {\n    return this._quickNavigate;\n  }\n  set quickNavigate(quickNavigate) {\n    this._quickNavigate = quickNavigate;\n    this.update();\n  }\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this.doSetValue(value);\n  }\n  doSetValue(value, skipUpdate) {\n    if (this._value !== value) {\n      this._value = value;\n      if (!skipUpdate) {\n        this.update();\n      }\n      if (this.visible) {\n        const didFilter = this.ui.list.filter(this.filterValue(this._value));\n        if (didFilter) {\n          this.trySelectFirst();\n        }\n      }\n      this.onDidChangeValueEmitter.fire(this._value);\n    }\n  }\n  set ariaLabel(ariaLabel) {\n    this._ariaLabel = ariaLabel;\n    this.update();\n  }\n  get ariaLabel() {\n    return this._ariaLabel;\n  }\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(placeholder) {\n    this._placeholder = placeholder;\n    this.update();\n  }\n  get items() {\n    return this._items;\n  }\n  get scrollTop() {\n    return this.ui.list.scrollTop;\n  }\n  set scrollTop(scrollTop) {\n    this.ui.list.scrollTop = scrollTop;\n  }\n  set items(items) {\n    this._items = items;\n    this.itemsUpdated = true;\n    this.update();\n  }\n  get canSelectMany() {\n    return this._canSelectMany;\n  }\n  set canSelectMany(canSelectMany) {\n    this._canSelectMany = canSelectMany;\n    this.update();\n  }\n  get canAcceptInBackground() {\n    return this._canAcceptInBackground;\n  }\n  set canAcceptInBackground(canAcceptInBackground) {\n    this._canAcceptInBackground = canAcceptInBackground;\n  }\n  get matchOnDescription() {\n    return this._matchOnDescription;\n  }\n  set matchOnDescription(matchOnDescription) {\n    this._matchOnDescription = matchOnDescription;\n    this.update();\n  }\n  get matchOnDetail() {\n    return this._matchOnDetail;\n  }\n  set matchOnDetail(matchOnDetail) {\n    this._matchOnDetail = matchOnDetail;\n    this.update();\n  }\n  get matchOnLabel() {\n    return this._matchOnLabel;\n  }\n  set matchOnLabel(matchOnLabel) {\n    this._matchOnLabel = matchOnLabel;\n    this.update();\n  }\n  get matchOnLabelMode() {\n    return this._matchOnLabelMode;\n  }\n  set matchOnLabelMode(matchOnLabelMode) {\n    this._matchOnLabelMode = matchOnLabelMode;\n    this.update();\n  }\n  get sortByLabel() {\n    return this._sortByLabel;\n  }\n  set sortByLabel(sortByLabel) {\n    this._sortByLabel = sortByLabel;\n    this.update();\n  }\n  get autoFocusOnList() {\n    return this._autoFocusOnList;\n  }\n  set autoFocusOnList(autoFocusOnList) {\n    this._autoFocusOnList = autoFocusOnList;\n    this.update();\n  }\n  get keepScrollPosition() {\n    return this._keepScrollPosition;\n  }\n  set keepScrollPosition(keepScrollPosition) {\n    this._keepScrollPosition = keepScrollPosition;\n  }\n  get itemActivation() {\n    return this._itemActivation;\n  }\n  set itemActivation(itemActivation) {\n    this._itemActivation = itemActivation;\n  }\n  get activeItems() {\n    return this._activeItems;\n  }\n  set activeItems(activeItems) {\n    this._activeItems = activeItems;\n    this.activeItemsUpdated = true;\n    this.update();\n  }\n  get selectedItems() {\n    return this._selectedItems;\n  }\n  set selectedItems(selectedItems) {\n    this._selectedItems = selectedItems;\n    this.selectedItemsUpdated = true;\n    this.update();\n  }\n  get keyMods() {\n    if (this._quickNavigate) {\n      // Disable keyMods when quick navigate is enabled\n      // because in this model the interaction is purely\n      // keyboard driven and Ctrl/Alt are typically\n      // pressed and hold during this interaction.\n      return NO_KEY_MODS;\n    }\n    return this.ui.keyMods;\n  }\n  set valueSelection(valueSelection) {\n    this._valueSelection = valueSelection;\n    this.valueSelectionUpdated = true;\n    this.update();\n  }\n  get customButton() {\n    return this._customButton;\n  }\n  set customButton(showCustomButton) {\n    this._customButton = showCustomButton;\n    this.update();\n  }\n  get customLabel() {\n    return this._customButtonLabel;\n  }\n  set customLabel(label) {\n    this._customButtonLabel = label;\n    this.update();\n  }\n  get customHover() {\n    return this._customButtonHover;\n  }\n  set customHover(hover) {\n    this._customButtonHover = hover;\n    this.update();\n  }\n  get ok() {\n    return this._ok;\n  }\n  set ok(showOkButton) {\n    this._ok = showOkButton;\n    this.update();\n  }\n  get hideInput() {\n    return !!this._hideInput;\n  }\n  set hideInput(hideInput) {\n    this._hideInput = hideInput;\n    this.update();\n  }\n  trySelectFirst() {\n    if (this.autoFocusOnList) {\n      if (!this.canSelectMany) {\n        this.ui.list.focus(QuickInputListFocus.First);\n      }\n    }\n  }\n  show() {\n    if (!this.visible) {\n      this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n        this.doSetValue(value, true /* skip update since this originates from the UI */);\n      }));\n\n      this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\n        if (!this.autoFocusOnList) {\n          this.ui.list.clearFocus();\n        }\n      }));\n      this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown(event => {\n        switch (event.keyCode) {\n          case 18 /* KeyCode.DownArrow */:\n            this.ui.list.focus(QuickInputListFocus.Next);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 16 /* KeyCode.UpArrow */:\n            if (this.ui.list.getFocusedElements().length) {\n              this.ui.list.focus(QuickInputListFocus.Previous);\n            } else {\n              this.ui.list.focus(QuickInputListFocus.Last);\n            }\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 12 /* KeyCode.PageDown */:\n            this.ui.list.focus(QuickInputListFocus.NextPage);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 11 /* KeyCode.PageUp */:\n            this.ui.list.focus(QuickInputListFocus.PreviousPage);\n            if (this.canSelectMany) {\n              this.ui.list.domFocus();\n            }\n            dom.EventHelper.stop(event, true);\n            break;\n          case 17 /* KeyCode.RightArrow */:\n            if (!this._canAcceptInBackground) {\n              return; // needs to be enabled\n            }\n\n            if (!this.ui.inputBox.isSelectionAtEnd()) {\n              return; // ensure input box selection at end\n            }\n\n            if (this.activeItems[0]) {\n              this._selectedItems = [this.activeItems[0]];\n              this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n              this.handleAccept(true);\n            }\n            break;\n          case 14 /* KeyCode.Home */:\n            if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n              this.ui.list.focus(QuickInputListFocus.First);\n              dom.EventHelper.stop(event, true);\n            }\n            break;\n          case 13 /* KeyCode.End */:\n            if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n              this.ui.list.focus(QuickInputListFocus.Last);\n              dom.EventHelper.stop(event, true);\n            }\n            break;\n        }\n      }));\n      this.visibleDisposables.add(this.ui.onDidAccept(() => {\n        if (this.canSelectMany) {\n          // if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n          // `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n          // `.selectedItems` is up to date.\n          if (!this.ui.list.getCheckedElements().length) {\n            this._selectedItems = [];\n            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n          }\n        } else if (this.activeItems[0]) {\n          // For single-select, we set `selectedItems` to the item that was accepted.\n          this._selectedItems = [this.activeItems[0]];\n          this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n        }\n        this.handleAccept(false);\n      }));\n      this.visibleDisposables.add(this.ui.onDidCustom(() => {\n        this.onDidCustomEmitter.fire();\n      }));\n      this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\n        if (this.activeItemsUpdated) {\n          return; // Expect another event.\n        }\n\n        if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n          return;\n        }\n        this._activeItems = focusedItems;\n        this.onDidChangeActiveEmitter.fire(focusedItems);\n      }));\n      this.visibleDisposables.add(this.ui.list.onDidChangeSelection(_ref => {\n        let {\n          items: selectedItems,\n          event\n        } = _ref;\n        if (this.canSelectMany) {\n          if (selectedItems.length) {\n            this.ui.list.setSelectedElements([]);\n          }\n          return;\n        }\n        if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n          return;\n        }\n        this._selectedItems = selectedItems;\n        this.onDidChangeSelectionEmitter.fire(selectedItems);\n        if (selectedItems.length) {\n          this.handleAccept(event instanceof MouseEvent && event.button === 1 /* mouse middle click */);\n        }\n      }));\n\n      this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n        if (!this.canSelectMany) {\n          return;\n        }\n        if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n          return;\n        }\n        this._selectedItems = checkedItems;\n        this.onDidChangeSelectionEmitter.fire(checkedItems);\n      }));\n      this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\n      this.visibleDisposables.add(this.registerQuickNavigation());\n      this.valueSelectionUpdated = true;\n    }\n    super.show(); // TODO: Why have show() bubble up while update() trickles down? (Could move setComboboxAccessibility() here.)\n  }\n\n  handleAccept(inBackground) {\n    // Figure out veto via `onWillAccept` event\n    let veto = false;\n    this.onWillAcceptEmitter.fire({\n      veto: () => veto = true\n    });\n    // Continue with `onDidAccept` if no veto\n    if (!veto) {\n      this.onDidAcceptEmitter.fire({\n        inBackground\n      });\n    }\n  }\n  registerQuickNavigation() {\n    return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n      if (this.canSelectMany || !this._quickNavigate) {\n        return;\n      }\n      const keyboardEvent = new StandardKeyboardEvent(e);\n      const keyCode = keyboardEvent.keyCode;\n      // Select element when keys are pressed that signal it\n      const quickNavKeys = this._quickNavigate.keybindings;\n      const wasTriggerKeyPressed = quickNavKeys.some(k => {\n        const [firstPart, chordPart] = k.getParts();\n        if (chordPart) {\n          return false;\n        }\n        if (firstPart.shiftKey && keyCode === 4 /* KeyCode.Shift */) {\n          if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n            return false; // this is an optimistic check for the shift key being used to navigate back in quick input\n          }\n\n          return true;\n        }\n        if (firstPart.altKey && keyCode === 6 /* KeyCode.Alt */) {\n          return true;\n        }\n        if (firstPart.ctrlKey && keyCode === 5 /* KeyCode.Ctrl */) {\n          return true;\n        }\n        if (firstPart.metaKey && keyCode === 57 /* KeyCode.Meta */) {\n          return true;\n        }\n        return false;\n      });\n      if (wasTriggerKeyPressed) {\n        if (this.activeItems[0]) {\n          this._selectedItems = [this.activeItems[0]];\n          this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n          this.handleAccept(false);\n        }\n        // Unset quick navigate after press. It is only valid once\n        // and should not result in any behaviour change afterwards\n        // if the picker remains open because there was no active item\n        this._quickNavigate = undefined;\n      }\n    });\n  }\n  update() {\n    if (!this.visible) {\n      return;\n    }\n    // store the scrollTop before it is reset\n    const scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n    const hideInput = !!this._hideInput && this._items.length > 0;\n    this.ui.container.classList.toggle('hidden-input', hideInput && !this.description);\n    const visibilities = {\n      title: !!this.title || !!this.step || !!this.buttons.length,\n      description: !!this.description,\n      checkAll: this.canSelectMany && !this._hideCheckAll,\n      checkBox: this.canSelectMany,\n      inputBox: !hideInput,\n      progressBar: !hideInput,\n      visibleCount: true,\n      count: this.canSelectMany,\n      ok: this.ok === 'default' ? this.canSelectMany : this.ok,\n      list: true,\n      message: !!this.validationMessage,\n      customButton: this.customButton\n    };\n    this.ui.setVisibilities(visibilities);\n    super.update();\n    if (this.ui.inputBox.value !== this.value) {\n      this.ui.inputBox.value = this.value;\n    }\n    if (this.valueSelectionUpdated) {\n      this.valueSelectionUpdated = false;\n      this.ui.inputBox.select(this._valueSelection && {\n        start: this._valueSelection[0],\n        end: this._valueSelection[1]\n      });\n    }\n    if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n      this.ui.inputBox.placeholder = this.placeholder || '';\n    }\n    let ariaLabel = this.ariaLabel;\n    if (!ariaLabel) {\n      ariaLabel = this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n      // If we have a title, include it in the aria label.\n      if (this.title) {\n        ariaLabel += ` - ${this.title}`;\n      }\n    }\n    if (this.ui.inputBox.ariaLabel !== ariaLabel) {\n      this.ui.inputBox.ariaLabel = ariaLabel;\n    }\n    this.ui.list.matchOnDescription = this.matchOnDescription;\n    this.ui.list.matchOnDetail = this.matchOnDetail;\n    this.ui.list.matchOnLabel = this.matchOnLabel;\n    this.ui.list.matchOnLabelMode = this.matchOnLabelMode;\n    this.ui.list.sortByLabel = this.sortByLabel;\n    if (this.itemsUpdated) {\n      this.itemsUpdated = false;\n      this.ui.list.setElements(this.items);\n      this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n      this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\n      this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\n      this.ui.count.setCount(this.ui.list.getCheckedCount());\n      switch (this._itemActivation) {\n        case ItemActivation.NONE:\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        case ItemActivation.SECOND:\n          this.ui.list.focus(QuickInputListFocus.Second);\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        case ItemActivation.LAST:\n          this.ui.list.focus(QuickInputListFocus.Last);\n          this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n          break;\n        default:\n          this.trySelectFirst();\n          break;\n      }\n    }\n    if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n      if (this.canSelectMany) {\n        this.ui.list.clearFocus();\n      } else {\n        this.trySelectFirst();\n      }\n    }\n    if (this.activeItemsUpdated) {\n      this.activeItemsUpdated = false;\n      this.activeItemsToConfirm = this._activeItems;\n      this.ui.list.setFocusedElements(this.activeItems);\n      if (this.activeItemsToConfirm === this._activeItems) {\n        this.activeItemsToConfirm = null;\n      }\n    }\n    if (this.selectedItemsUpdated) {\n      this.selectedItemsUpdated = false;\n      this.selectedItemsToConfirm = this._selectedItems;\n      if (this.canSelectMany) {\n        this.ui.list.setCheckedElements(this.selectedItems);\n      } else {\n        this.ui.list.setSelectedElements(this.selectedItems);\n      }\n      if (this.selectedItemsToConfirm === this._selectedItems) {\n        this.selectedItemsToConfirm = null;\n      }\n    }\n    this.ui.customButton.label = this.customLabel || '';\n    this.ui.customButton.element.title = this.customHover || '';\n    this.ui.setComboboxAccessibility(true);\n    if (!visibilities.inputBox) {\n      // we need to move focus into the tree to detect keybindings\n      // properly when the input box is not visible (quick nav)\n      this.ui.list.domFocus();\n      // Focus the first element in the list if multiselect is enabled\n      if (this.canSelectMany) {\n        this.ui.list.focus(QuickInputListFocus.First);\n      }\n    }\n    // Set the scroll position to what it was before updating the items\n    if (this.keepScrollPosition) {\n      this.scrollTop = scrollTopBefore;\n    }\n  }\n}\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\nexport class QuickInputController extends Disposable {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.comboboxAccessibility = false;\n    this.enabled = true;\n    this.onDidAcceptEmitter = this._register(new Emitter());\n    this.onDidCustomEmitter = this._register(new Emitter());\n    this.onDidTriggerButtonEmitter = this._register(new Emitter());\n    this.keyMods = {\n      ctrlCmd: false,\n      alt: false\n    };\n    this.controller = null;\n    this.onShowEmitter = this._register(new Emitter());\n    this.onShow = this.onShowEmitter.event;\n    this.onHideEmitter = this._register(new Emitter());\n    this.onHide = this.onHideEmitter.event;\n    this.idPrefix = options.idPrefix;\n    this.parentElement = options.container;\n    this.styles = options.styles;\n    this.registerKeyModsListeners();\n  }\n  registerKeyModsListeners() {\n    const listener = e => {\n      this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n      this.keyMods.alt = e.altKey;\n    };\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\n    this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\n    this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\n  }\n  getUI() {\n    if (this.ui) {\n      return this.ui;\n    }\n    const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\n    container.tabIndex = -1;\n    container.style.display = 'none';\n    const styleSheet = dom.createStyleSheet(container);\n    const titleBar = dom.append(container, $('.quick-input-titlebar'));\n    const leftActionBar = this._register(new ActionBar(titleBar));\n    leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n    const title = dom.append(titleBar, $('.quick-input-title'));\n    const rightActionBar = this._register(new ActionBar(titleBar));\n    rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n    const description1 = dom.append(container, $('.quick-input-description'));\n    const headerContainer = dom.append(container, $('.quick-input-header'));\n    const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n    checkAll.type = 'checkbox';\n    checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n    this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n      const checked = checkAll.checked;\n      list.setAllVisibleChecked(checked);\n    }));\n    this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n      if (e.x || e.y) {\n        // Avoid 'click' triggered by 'space'...\n        inputBox.setFocus();\n      }\n    }));\n    const description2 = dom.append(headerContainer, $('.quick-input-description'));\n    const extraContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n    const filterContainer = dom.append(extraContainer, $('.quick-input-filter'));\n    const inputBox = this._register(new QuickInputBox(filterContainer));\n    inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n    const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n    visibleCountContainer.setAttribute('aria-live', 'polite');\n    visibleCountContainer.setAttribute('aria-atomic', 'true');\n    const visibleCount = new CountBadge(visibleCountContainer, {\n      countFormat: localize({\n        key: 'quickInput.visibleCount',\n        comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.']\n      }, \"{0} Results\")\n    });\n    const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n    countContainer.setAttribute('aria-live', 'polite');\n    const count = new CountBadge(countContainer, {\n      countFormat: localize({\n        key: 'quickInput.countSelected',\n        comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.']\n      }, \"{0} Selected\")\n    });\n    const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const ok = new Button(okContainer);\n    ok.label = localize('ok', \"OK\");\n    this._register(ok.onDidClick(e => {\n      this.onDidAcceptEmitter.fire();\n    }));\n    const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n    const customButton = new Button(customButtonContainer);\n    customButton.label = localize('custom', \"Custom\");\n    this._register(customButton.onDidClick(e => {\n      this.onDidCustomEmitter.fire();\n    }));\n    const message = dom.append(extraContainer, $(`#${this.idPrefix}message.quick-input-message`));\n    const list = this._register(new QuickInputList(container, this.idPrefix + 'list', this.options));\n    this._register(list.onChangedAllVisibleChecked(checked => {\n      checkAll.checked = checked;\n    }));\n    this._register(list.onChangedVisibleCount(c => {\n      visibleCount.setCount(c);\n    }));\n    this._register(list.onChangedCheckedCount(c => {\n      count.setCount(c);\n    }));\n    this._register(list.onLeave(() => {\n      // Defer to avoid the input field reacting to the triggering key.\n      setTimeout(() => {\n        inputBox.setFocus();\n        if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n          list.clearFocus();\n        }\n      }, 0);\n    }));\n    this._register(list.onDidChangeFocus(() => {\n      if (this.comboboxAccessibility) {\n        this.getUI().inputBox.setAttribute('aria-activedescendant', this.getUI().list.getActiveDescendant() || '');\n      }\n    }));\n    const progressBar = new ProgressBar(container);\n    progressBar.getContainer().classList.add('quick-input-progress');\n    const focusTracker = dom.trackFocus(container);\n    this._register(focusTracker);\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\n    }, true));\n    this._register(focusTracker.onDidBlur(() => {\n      if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n        this.hide(QuickInputHideReason.Blur);\n      }\n      this.previousFocusElement = undefined;\n    }));\n    this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n      inputBox.setFocus();\n    }));\n    this._register(dom.addDisposableListener(container, dom.EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n      switch (event.keyCode) {\n        case 3 /* KeyCode.Enter */:\n          dom.EventHelper.stop(e, true);\n          this.onDidAcceptEmitter.fire();\n          break;\n        case 9 /* KeyCode.Escape */:\n          dom.EventHelper.stop(e, true);\n          this.hide(QuickInputHideReason.Gesture);\n          break;\n        case 2 /* KeyCode.Tab */:\n          if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n            const selectors = ['.action-label.codicon'];\n            if (container.classList.contains('show-checkboxes')) {\n              selectors.push('input');\n            } else {\n              selectors.push('input[type=text]');\n            }\n            if (this.getUI().list.isDisplayed()) {\n              selectors.push('.monaco-list');\n            }\n            const stops = container.querySelectorAll(selectors.join(', '));\n            if (event.shiftKey && event.target === stops[0]) {\n              dom.EventHelper.stop(e, true);\n              stops[stops.length - 1].focus();\n            } else if (!event.shiftKey && event.target === stops[stops.length - 1]) {\n              dom.EventHelper.stop(e, true);\n              stops[0].focus();\n            }\n          }\n          break;\n      }\n    }));\n    this.ui = {\n      container,\n      styleSheet,\n      leftActionBar,\n      titleBar,\n      title,\n      description1,\n      description2,\n      rightActionBar,\n      checkAll,\n      filterContainer,\n      inputBox,\n      visibleCountContainer,\n      visibleCount,\n      countContainer,\n      count,\n      okContainer,\n      ok,\n      message,\n      customButtonContainer,\n      customButton,\n      list,\n      progressBar,\n      onDidAccept: this.onDidAcceptEmitter.event,\n      onDidCustom: this.onDidCustomEmitter.event,\n      onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n      ignoreFocusOut: false,\n      keyMods: this.keyMods,\n      isScreenReaderOptimized: () => this.options.isScreenReaderOptimized(),\n      show: controller => this.show(controller),\n      hide: () => this.hide(),\n      setVisibilities: visibilities => this.setVisibilities(visibilities),\n      setComboboxAccessibility: enabled => this.setComboboxAccessibility(enabled),\n      setEnabled: enabled => this.setEnabled(enabled),\n      setContextKey: contextKey => this.options.setContextKey(contextKey)\n    };\n    this.updateStyles();\n    return this.ui;\n  }\n  pick(picks) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let token = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : CancellationToken.None;\n    return new Promise((doResolve, reject) => {\n      let resolve = result => {\n        var _a;\n        resolve = doResolve;\n        (_a = options.onKeyMods) === null || _a === void 0 ? void 0 : _a.call(options, input.keyMods);\n        doResolve(result);\n      };\n      if (token.isCancellationRequested) {\n        resolve(undefined);\n        return;\n      }\n      const input = this.createQuickPick();\n      let activeItem;\n      const disposables = [input, input.onDidAccept(() => {\n        if (input.canSelectMany) {\n          resolve(input.selectedItems.slice());\n          input.hide();\n        } else {\n          const result = input.activeItems[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidChangeActive(items => {\n        const focused = items[0];\n        if (focused && options.onDidFocus) {\n          options.onDidFocus(focused);\n        }\n      }), input.onDidChangeSelection(items => {\n        if (!input.canSelectMany) {\n          const result = items[0];\n          if (result) {\n            resolve(result);\n            input.hide();\n          }\n        }\n      }), input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), {\n        removeItem: () => {\n          const index = input.items.indexOf(event.item);\n          if (index !== -1) {\n            const items = input.items.slice();\n            const removed = items.splice(index, 1);\n            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n            const keepScrollPositionBefore = input.keepScrollPosition;\n            input.keepScrollPosition = true;\n            input.items = items;\n            if (activeItems) {\n              input.activeItems = activeItems;\n            }\n            input.keepScrollPosition = keepScrollPositionBefore;\n          }\n        }\n      }))), input.onDidChangeValue(value => {\n        if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n          input.activeItems = [activeItem];\n        }\n      }), token.onCancellationRequested(() => {\n        input.hide();\n      }), input.onDidHide(() => {\n        dispose(disposables);\n        resolve(undefined);\n      })];\n      input.title = options.title;\n      input.canSelectMany = !!options.canPickMany;\n      input.placeholder = options.placeHolder;\n      input.ignoreFocusOut = !!options.ignoreFocusLost;\n      input.matchOnDescription = !!options.matchOnDescription;\n      input.matchOnDetail = !!options.matchOnDetail;\n      input.matchOnLabel = options.matchOnLabel === undefined || options.matchOnLabel; // default to true\n      input.autoFocusOnList = options.autoFocusOnList === undefined || options.autoFocusOnList; // default to true\n      input.quickNavigate = options.quickNavigate;\n      input.hideInput = !!options.hideInput;\n      input.contextKey = options.contextKey;\n      input.busy = true;\n      Promise.all([picks, options.activeItem]).then(_ref2 => {\n        let [items, _activeItem] = _ref2;\n        activeItem = _activeItem;\n        input.busy = false;\n        input.items = items;\n        if (input.canSelectMany) {\n          input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n        }\n        if (activeItem) {\n          input.activeItems = [activeItem];\n        }\n      });\n      input.show();\n      Promise.resolve(picks).then(undefined, err => {\n        reject(err);\n        input.hide();\n      });\n    });\n  }\n  createQuickPick() {\n    const ui = this.getUI();\n    return new QuickPick(ui);\n  }\n  show(controller) {\n    const ui = this.getUI();\n    this.onShowEmitter.fire();\n    const oldController = this.controller;\n    this.controller = controller;\n    if (oldController) {\n      oldController.didHide();\n    }\n    this.setEnabled(true);\n    ui.leftActionBar.clear();\n    ui.title.textContent = '';\n    ui.description1.textContent = '';\n    ui.description2.textContent = '';\n    ui.rightActionBar.clear();\n    ui.checkAll.checked = false;\n    // ui.inputBox.value = ''; Avoid triggering an event.\n    ui.inputBox.placeholder = '';\n    ui.inputBox.password = false;\n    ui.inputBox.showDecoration(Severity.Ignore);\n    ui.visibleCount.setCount(0);\n    ui.count.setCount(0);\n    dom.reset(ui.message);\n    ui.progressBar.stop();\n    ui.list.setElements([]);\n    ui.list.matchOnDescription = false;\n    ui.list.matchOnDetail = false;\n    ui.list.matchOnLabel = true;\n    ui.list.sortByLabel = true;\n    ui.ignoreFocusOut = false;\n    this.setComboboxAccessibility(false);\n    ui.inputBox.ariaLabel = '';\n    const backKeybindingLabel = this.options.backKeybindingLabel();\n    backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n    ui.container.style.display = '';\n    this.updateLayout();\n    ui.inputBox.setFocus();\n  }\n  setVisibilities(visibilities) {\n    const ui = this.getUI();\n    ui.title.style.display = visibilities.title ? '' : 'none';\n    ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n    ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n    ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n    ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n    ui.countContainer.style.display = visibilities.count ? '' : 'none';\n    ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n    ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n    ui.message.style.display = visibilities.message ? '' : 'none';\n    ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n    ui.list.display(!!visibilities.list);\n    ui.container.classList[visibilities.checkBox ? 'add' : 'remove']('show-checkboxes');\n    this.updateLayout(); // TODO\n  }\n\n  setComboboxAccessibility(enabled) {\n    if (enabled !== this.comboboxAccessibility) {\n      const ui = this.getUI();\n      this.comboboxAccessibility = enabled;\n      if (this.comboboxAccessibility) {\n        ui.inputBox.setAttribute('role', 'combobox');\n        ui.inputBox.setAttribute('aria-haspopup', 'true');\n        ui.inputBox.setAttribute('aria-autocomplete', 'list');\n        ui.inputBox.setAttribute('aria-activedescendant', ui.list.getActiveDescendant() || '');\n      } else {\n        ui.inputBox.removeAttribute('role');\n        ui.inputBox.removeAttribute('aria-haspopup');\n        ui.inputBox.removeAttribute('aria-autocomplete');\n        ui.inputBox.removeAttribute('aria-activedescendant');\n      }\n    }\n  }\n  setEnabled(enabled) {\n    if (enabled !== this.enabled) {\n      this.enabled = enabled;\n      for (const item of this.getUI().leftActionBar.viewItems) {\n        item.getAction().enabled = enabled;\n      }\n      for (const item of this.getUI().rightActionBar.viewItems) {\n        item.getAction().enabled = enabled;\n      }\n      this.getUI().checkAll.disabled = !enabled;\n      // this.getUI().inputBox.enabled = enabled; Avoid loosing focus.\n      this.getUI().ok.enabled = enabled;\n      this.getUI().list.enabled = enabled;\n    }\n  }\n  hide(reason) {\n    var _a;\n    const controller = this.controller;\n    if (controller) {\n      const focusChanged = !((_a = this.ui) === null || _a === void 0 ? void 0 : _a.container.contains(document.activeElement));\n      this.controller = null;\n      this.onHideEmitter.fire();\n      this.getUI().container.style.display = 'none';\n      if (!focusChanged) {\n        let currentElement = this.previousFocusElement;\n        while (currentElement && !currentElement.offsetParent) {\n          currentElement = withNullAsUndefined(currentElement.parentElement);\n        }\n        if (currentElement === null || currentElement === void 0 ? void 0 : currentElement.offsetParent) {\n          currentElement.focus();\n          this.previousFocusElement = undefined;\n        } else {\n          this.options.returnFocus();\n        }\n      }\n      controller.didHide(reason);\n    }\n  }\n  layout(dimension, titleBarOffset) {\n    this.dimension = dimension;\n    this.titleBarOffset = titleBarOffset;\n    this.updateLayout();\n  }\n  updateLayout() {\n    if (this.ui) {\n      this.ui.container.style.top = `${this.titleBarOffset}px`;\n      const style = this.ui.container.style;\n      const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\n      style.width = width + 'px';\n      style.marginLeft = '-' + width / 2 + 'px';\n      this.ui.inputBox.layout();\n      this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n    }\n  }\n  applyStyles(styles) {\n    this.styles = styles;\n    this.updateStyles();\n  }\n  updateStyles() {\n    if (this.ui) {\n      const {\n        quickInputTitleBackground,\n        quickInputBackground,\n        quickInputForeground,\n        contrastBorder,\n        widgetShadow\n      } = this.styles.widget;\n      this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ? quickInputTitleBackground.toString() : '';\n      this.ui.container.style.backgroundColor = quickInputBackground ? quickInputBackground.toString() : '';\n      this.ui.container.style.color = quickInputForeground ? quickInputForeground.toString() : '';\n      this.ui.container.style.border = contrastBorder ? `1px solid ${contrastBorder}` : '';\n      this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n      this.ui.inputBox.style(this.styles.inputBox);\n      this.ui.count.style(this.styles.countBadge);\n      this.ui.ok.style(this.styles.button);\n      this.ui.customButton.style(this.styles.button);\n      this.ui.progressBar.style(this.styles.progressBar);\n      this.ui.list.style(this.styles.list);\n      const content = [];\n      if (this.styles.list.pickerGroupBorder) {\n        content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.list.pickerGroupBorder}; }`);\n      }\n      if (this.styles.list.pickerGroupForeground) {\n        content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.list.pickerGroupForeground}; }`);\n      }\n      if (this.styles.keybindingLabel.keybindingLabelBackground || this.styles.keybindingLabel.keybindingLabelBorder || this.styles.keybindingLabel.keybindingLabelBottomBorder || this.styles.keybindingLabel.keybindingLabelShadow || this.styles.keybindingLabel.keybindingLabelForeground) {\n        content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n        if (this.styles.keybindingLabel.keybindingLabelBackground) {\n          content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelBorder) {\n          // Order matters here. `border-color` must come before `border-bottom-color`.\n          content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n          content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelShadow) {\n          content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n        }\n        if (this.styles.keybindingLabel.keybindingLabelForeground) {\n          content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n        }\n        content.push('}');\n      }\n      const newStyles = content.join('\\n');\n      if (newStyles !== this.ui.styleSheet.textContent) {\n        this.ui.styleSheet.textContent = newStyles;\n      }\n    }\n  }\n}\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","dom","StandardKeyboardEvent","ActionBar","Button","CountBadge","renderLabelWithIcons","ProgressBar","Action","equals","TimeoutTimer","CancellationToken","Codicon","Emitter","Disposable","DisposableStore","dispose","isIOS","Severity","withNullAsUndefined","getIconClass","ItemActivation","NO_KEY_MODS","QuickInputHideReason","localize","QuickInputBox","QuickInputList","QuickInputListFocus","$","backButton","iconClass","quickInputBack","classNames","tooltip","handle","QuickInput","constructor","ui","visible","_enabled","_busy","_ignoreFocusOut","_buttons","noValidationMessage","noPromptMessage","_severity","Ignore","buttonsUpdated","onDidTriggerButtonEmitter","_register","onDidHideEmitter","onDisposeEmitter","visibleDisposables","onDidHide","event","title","_title","update","description","_description","_steps","totalSteps","_totalSteps","enabled","contextKey","_contextKey","busy","ignoreFocusOut","shouldUpdate","buttons","validationMessage","_validationMessage","severity","show","add","onDidTriggerButton","button","indexOf","fire","_lastValidationMessage","undefined","_lastSeverity","length","hide","didHide","reason","Other","clear","getTitle","textContent","innerHTML","innerText","getDescription","description1","description2","busyDelay","setIfNotSet","progressBar","infinite","stop","cancel","leftActionBar","leftButtons","filter","push","map","index","action","iconPath","icon","label","rightActionBar","rightButtons","setEnabled","setContextKey","reset","message","showMessageDecoration","getSteps","String","inputBox","showDecoration","styles","stylesForType","style","color","foreground","backgroundColor","background","border","marginBottom","QuickPick","arguments","_value","onDidChangeValueEmitter","onWillAcceptEmitter","onDidAcceptEmitter","onDidCustomEmitter","_items","itemsUpdated","_canSelectMany","_canAcceptInBackground","_matchOnDescription","_matchOnDetail","_matchOnLabel","_matchOnLabelMode","_sortByLabel","_autoFocusOnList","_keepScrollPosition","_itemActivation","isScreenReaderOptimized","NONE","FIRST","_activeItems","activeItemsUpdated","activeItemsToConfirm","onDidChangeActiveEmitter","_selectedItems","selectedItemsUpdated","selectedItemsToConfirm","onDidChangeSelectionEmitter","onDidTriggerItemButtonEmitter","valueSelectionUpdated","_ok","_customButton","filterValue","onDidChangeValue","onWillAccept","onDidAccept","onDidChangeActive","onDidChangeSelection","onDidTriggerItemButton","quickNavigate","_quickNavigate","doSetValue","skipUpdate","didFilter","list","trySelectFirst","ariaLabel","_ariaLabel","placeholder","_placeholder","items","scrollTop","canSelectMany","canAcceptInBackground","matchOnDescription","matchOnDetail","matchOnLabel","matchOnLabelMode","sortByLabel","autoFocusOnList","keepScrollPosition","itemActivation","activeItems","selectedItems","keyMods","valueSelection","_valueSelection","customButton","showCustomButton","customLabel","_customButtonLabel","customHover","_customButtonHover","hover","ok","showOkButton","hideInput","_hideInput","focus","First","onDidChange","onMouseDown","clearFocus","onKeyDown","keyCode","Next","domFocus","EventHelper","getFocusedElements","Previous","Last","NextPage","PreviousPage","isSelectionAtEnd","handleAccept","ctrlKey","metaKey","shiftKey","altKey","getCheckedElements","onDidCustom","onDidChangeFocus","focusedItems","a","b","setSelectedElements","MouseEvent","onChangedCheckedElements","checkedItems","onButtonTriggered","registerQuickNavigation","inBackground","veto","addDisposableListener","container","EventType","KEY_UP","keyboardEvent","quickNavKeys","keybindings","wasTriggerKeyPressed","some","k","firstPart","chordPart","getParts","scrollTopBefore","classList","toggle","visibilities","checkAll","_hideCheckAll","checkBox","visibleCount","count","setVisibilities","select","start","end","DEFAULT_ARIA_LABEL","setElements","checked","getAllVisibleChecked","setCount","getVisibleCount","getCheckedCount","SECOND","Second","LAST","contains","setFocusedElements","setCheckedElements","element","setComboboxAccessibility","QuickInputController","options","comboboxAccessibility","ctrlCmd","alt","controller","onShowEmitter","onShow","onHideEmitter","onHide","idPrefix","parentElement","registerKeyModsListeners","listener","window","KEY_DOWN","MOUSE_DOWN","getUI","append","tabIndex","display","styleSheet","createStyleSheet","titleBar","domNode","headerContainer","type","setAttribute","addStandardDisposableListener","CHANGE","setAllVisibleChecked","CLICK","x","y","setFocus","extraContainer","filterContainer","visibleCountContainer","countFormat","key","comment","countContainer","okContainer","onDidClick","customButtonContainer","onChangedAllVisibleChecked","onChangedVisibleCount","c","onChangedCheckedCount","onLeave","setTimeout","getActiveDescendant","getContainer","focusTracker","trackFocus","FOCUS","previousFocusElement","relatedTarget","HTMLElement","onDidBlur","Blur","Gesture","selectors","isDisplayed","stops","querySelectorAll","join","target","updateStyles","pick","picks","token","None","doResolve","_a","onKeyMods","call","input","isCancellationRequested","createQuickPick","activeItem","disposables","slice","focused","onDidFocus","Object","assign","removeItem","item","removed","splice","keepScrollPositionBefore","onCancellationRequested","canPickMany","placeHolder","ignoreFocusLost","all","_activeItem","picked","err","oldController","password","backKeybindingLabel","updateLayout","removeAttribute","viewItems","getAction","disabled","focusChanged","document","activeElement","currentElement","offsetParent","returnFocus","layout","dimension","titleBarOffset","top","width","Math","min","MAX_WIDTH","marginLeft","height","applyStyles","quickInputTitleBackground","quickInputBackground","quickInputForeground","contrastBorder","widgetShadow","widget","toString","boxShadow","countBadge","content","pickerGroupBorder","pickerGroupForeground","keybindingLabel","keybindingLabelBackground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","keybindingLabelForeground","newStyles"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/parts/quickinput/browser/quickInput.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../browser/keyboardEvent.js';\nimport { ActionBar } from '../../../browser/ui/actionbar/actionbar.js';\nimport { Button } from '../../../browser/ui/button/button.js';\nimport { CountBadge } from '../../../browser/ui/countBadge/countBadge.js';\nimport { renderLabelWithIcons } from '../../../browser/ui/iconLabel/iconLabels.js';\nimport { ProgressBar } from '../../../browser/ui/progressbar/progressbar.js';\nimport { Action } from '../../../common/actions.js';\nimport { equals } from '../../../common/arrays.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { CancellationToken } from '../../../common/cancellation.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable, DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIOS } from '../../../common/platform.js';\nimport Severity from '../../../common/severity.js';\nimport { withNullAsUndefined } from '../../../common/types.js';\nimport { getIconClass } from './quickInputUtils.js';\nimport { ItemActivation, NO_KEY_MODS, QuickInputHideReason } from '../common/quickInput.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../../nls.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickInputList, QuickInputListFocus } from './quickInputList.js';\nconst $ = dom.$;\nconst backButton = {\n    iconClass: Codicon.quickInputBack.classNames,\n    tooltip: localize('quickInput.back', \"Back\"),\n    handle: -1 // TODO\n};\nclass QuickInput extends Disposable {\n    constructor(ui) {\n        super();\n        this.ui = ui;\n        this.visible = false;\n        this._enabled = true;\n        this._busy = false;\n        this._ignoreFocusOut = false;\n        this._buttons = [];\n        this.noValidationMessage = QuickInput.noPromptMessage;\n        this._severity = Severity.Ignore;\n        this.buttonsUpdated = false;\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.onDidHideEmitter = this._register(new Emitter());\n        this.onDisposeEmitter = this._register(new Emitter());\n        this.visibleDisposables = this._register(new DisposableStore());\n        this.onDidHide = this.onDidHideEmitter.event;\n    }\n    get title() {\n        return this._title;\n    }\n    set title(title) {\n        this._title = title;\n        this.update();\n    }\n    get description() {\n        return this._description;\n    }\n    set description(description) {\n        this._description = description;\n        this.update();\n    }\n    get step() {\n        return this._steps;\n    }\n    set step(step) {\n        this._steps = step;\n        this.update();\n    }\n    get totalSteps() {\n        return this._totalSteps;\n    }\n    set totalSteps(totalSteps) {\n        this._totalSteps = totalSteps;\n        this.update();\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        this.update();\n    }\n    get contextKey() {\n        return this._contextKey;\n    }\n    set contextKey(contextKey) {\n        this._contextKey = contextKey;\n        this.update();\n    }\n    get busy() {\n        return this._busy;\n    }\n    set busy(busy) {\n        this._busy = busy;\n        this.update();\n    }\n    get ignoreFocusOut() {\n        return this._ignoreFocusOut;\n    }\n    set ignoreFocusOut(ignoreFocusOut) {\n        const shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n        this._ignoreFocusOut = ignoreFocusOut && !isIOS;\n        if (shouldUpdate) {\n            this.update();\n        }\n    }\n    get buttons() {\n        return this._buttons;\n    }\n    set buttons(buttons) {\n        this._buttons = buttons;\n        this.buttonsUpdated = true;\n        this.update();\n    }\n    get validationMessage() {\n        return this._validationMessage;\n    }\n    set validationMessage(validationMessage) {\n        this._validationMessage = validationMessage;\n        this.update();\n    }\n    get severity() {\n        return this._severity;\n    }\n    set severity(severity) {\n        this._severity = severity;\n        this.update();\n    }\n    show() {\n        if (this.visible) {\n            return;\n        }\n        this.visibleDisposables.add(this.ui.onDidTriggerButton(button => {\n            if (this.buttons.indexOf(button) !== -1) {\n                this.onDidTriggerButtonEmitter.fire(button);\n            }\n        }));\n        this.ui.show(this);\n        // update properties in the controller that get reset in the ui.show() call\n        this.visible = true;\n        // This ensures the message/prompt gets rendered\n        this._lastValidationMessage = undefined;\n        // This ensures the input box has the right severity applied\n        this._lastSeverity = undefined;\n        if (this.buttons.length) {\n            // if there are buttons, the ui.show() clears them out of the UI so we should\n            // rerender them.\n            this.buttonsUpdated = true;\n        }\n        this.update();\n    }\n    hide() {\n        if (!this.visible) {\n            return;\n        }\n        this.ui.hide();\n    }\n    didHide(reason = QuickInputHideReason.Other) {\n        this.visible = false;\n        this.visibleDisposables.clear();\n        this.onDidHideEmitter.fire({ reason });\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        const title = this.getTitle();\n        if (title && this.ui.title.textContent !== title) {\n            this.ui.title.textContent = title;\n        }\n        else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n            this.ui.title.innerText = '\\u00a0';\n        }\n        const description = this.getDescription();\n        if (this.ui.description1.textContent !== description) {\n            this.ui.description1.textContent = description;\n        }\n        if (this.ui.description2.textContent !== description) {\n            this.ui.description2.textContent = description;\n        }\n        if (this.busy && !this.busyDelay) {\n            this.busyDelay = new TimeoutTimer();\n            this.busyDelay.setIfNotSet(() => {\n                if (this.visible) {\n                    this.ui.progressBar.infinite();\n                }\n            }, 800);\n        }\n        if (!this.busy && this.busyDelay) {\n            this.ui.progressBar.stop();\n            this.busyDelay.cancel();\n            this.busyDelay = undefined;\n        }\n        if (this.buttonsUpdated) {\n            this.buttonsUpdated = false;\n            this.ui.leftActionBar.clear();\n            const leftButtons = this.buttons.filter(button => button === backButton);\n            this.ui.leftActionBar.push(leftButtons.map((button, index) => {\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n                    this.onDidTriggerButtonEmitter.fire(button);\n                }));\n                action.tooltip = button.tooltip || '';\n                return action;\n            }), { icon: true, label: false });\n            this.ui.rightActionBar.clear();\n            const rightButtons = this.buttons.filter(button => button !== backButton);\n            this.ui.rightActionBar.push(rightButtons.map((button, index) => {\n                const action = new Action(`id-${index}`, '', button.iconClass || getIconClass(button.iconPath), true, () => __awaiter(this, void 0, void 0, function* () {\n                    this.onDidTriggerButtonEmitter.fire(button);\n                }));\n                action.tooltip = button.tooltip || '';\n                return action;\n            }), { icon: true, label: false });\n        }\n        this.ui.ignoreFocusOut = this.ignoreFocusOut;\n        this.ui.setEnabled(this.enabled);\n        this.ui.setContextKey(this.contextKey);\n        const validationMessage = this.validationMessage || this.noValidationMessage;\n        if (this._lastValidationMessage !== validationMessage) {\n            this._lastValidationMessage = validationMessage;\n            dom.reset(this.ui.message, ...renderLabelWithIcons(validationMessage));\n        }\n        if (this._lastSeverity !== this.severity) {\n            this._lastSeverity = this.severity;\n            this.showMessageDecoration(this.severity);\n        }\n    }\n    getTitle() {\n        if (this.title && this.step) {\n            return `${this.title} (${this.getSteps()})`;\n        }\n        if (this.title) {\n            return this.title;\n        }\n        if (this.step) {\n            return this.getSteps();\n        }\n        return '';\n    }\n    getDescription() {\n        return this.description || '';\n    }\n    getSteps() {\n        if (this.step && this.totalSteps) {\n            return localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n        }\n        if (this.step) {\n            return String(this.step);\n        }\n        return '';\n    }\n    showMessageDecoration(severity) {\n        this.ui.inputBox.showDecoration(severity);\n        if (severity !== Severity.Ignore) {\n            const styles = this.ui.inputBox.stylesForType(severity);\n            this.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\n            this.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\n            this.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\n            this.ui.message.style.marginBottom = '-2px';\n        }\n        else {\n            this.ui.message.style.color = '';\n            this.ui.message.style.backgroundColor = '';\n            this.ui.message.style.border = '';\n            this.ui.message.style.marginBottom = '';\n        }\n    }\n    dispose() {\n        this.hide();\n        this.onDisposeEmitter.fire();\n        super.dispose();\n    }\n}\nQuickInput.noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\");\nclass QuickPick extends QuickInput {\n    constructor() {\n        super(...arguments);\n        this._value = '';\n        this.onDidChangeValueEmitter = this._register(new Emitter());\n        this.onWillAcceptEmitter = this._register(new Emitter());\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this._items = [];\n        this.itemsUpdated = false;\n        this._canSelectMany = false;\n        this._canAcceptInBackground = false;\n        this._matchOnDescription = false;\n        this._matchOnDetail = false;\n        this._matchOnLabel = true;\n        this._matchOnLabelMode = 'fuzzy';\n        this._sortByLabel = true;\n        this._autoFocusOnList = true;\n        this._keepScrollPosition = false;\n        this._itemActivation = this.ui.isScreenReaderOptimized() ? ItemActivation.NONE /* https://github.com/microsoft/vscode/issues/57501 */ : ItemActivation.FIRST;\n        this._activeItems = [];\n        this.activeItemsUpdated = false;\n        this.activeItemsToConfirm = [];\n        this.onDidChangeActiveEmitter = this._register(new Emitter());\n        this._selectedItems = [];\n        this.selectedItemsUpdated = false;\n        this.selectedItemsToConfirm = [];\n        this.onDidChangeSelectionEmitter = this._register(new Emitter());\n        this.onDidTriggerItemButtonEmitter = this._register(new Emitter());\n        this.valueSelectionUpdated = true;\n        this._ok = 'default';\n        this._customButton = false;\n        this.filterValue = (value) => value;\n        this.onDidChangeValue = this.onDidChangeValueEmitter.event;\n        this.onWillAccept = this.onWillAcceptEmitter.event;\n        this.onDidAccept = this.onDidAcceptEmitter.event;\n        this.onDidChangeActive = this.onDidChangeActiveEmitter.event;\n        this.onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n        this.onDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n    }\n    get quickNavigate() {\n        return this._quickNavigate;\n    }\n    set quickNavigate(quickNavigate) {\n        this._quickNavigate = quickNavigate;\n        this.update();\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this.doSetValue(value);\n    }\n    doSetValue(value, skipUpdate) {\n        if (this._value !== value) {\n            this._value = value;\n            if (!skipUpdate) {\n                this.update();\n            }\n            if (this.visible) {\n                const didFilter = this.ui.list.filter(this.filterValue(this._value));\n                if (didFilter) {\n                    this.trySelectFirst();\n                }\n            }\n            this.onDidChangeValueEmitter.fire(this._value);\n        }\n    }\n    set ariaLabel(ariaLabel) {\n        this._ariaLabel = ariaLabel;\n        this.update();\n    }\n    get ariaLabel() {\n        return this._ariaLabel;\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(placeholder) {\n        this._placeholder = placeholder;\n        this.update();\n    }\n    get items() {\n        return this._items;\n    }\n    get scrollTop() {\n        return this.ui.list.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.ui.list.scrollTop = scrollTop;\n    }\n    set items(items) {\n        this._items = items;\n        this.itemsUpdated = true;\n        this.update();\n    }\n    get canSelectMany() {\n        return this._canSelectMany;\n    }\n    set canSelectMany(canSelectMany) {\n        this._canSelectMany = canSelectMany;\n        this.update();\n    }\n    get canAcceptInBackground() {\n        return this._canAcceptInBackground;\n    }\n    set canAcceptInBackground(canAcceptInBackground) {\n        this._canAcceptInBackground = canAcceptInBackground;\n    }\n    get matchOnDescription() {\n        return this._matchOnDescription;\n    }\n    set matchOnDescription(matchOnDescription) {\n        this._matchOnDescription = matchOnDescription;\n        this.update();\n    }\n    get matchOnDetail() {\n        return this._matchOnDetail;\n    }\n    set matchOnDetail(matchOnDetail) {\n        this._matchOnDetail = matchOnDetail;\n        this.update();\n    }\n    get matchOnLabel() {\n        return this._matchOnLabel;\n    }\n    set matchOnLabel(matchOnLabel) {\n        this._matchOnLabel = matchOnLabel;\n        this.update();\n    }\n    get matchOnLabelMode() {\n        return this._matchOnLabelMode;\n    }\n    set matchOnLabelMode(matchOnLabelMode) {\n        this._matchOnLabelMode = matchOnLabelMode;\n        this.update();\n    }\n    get sortByLabel() {\n        return this._sortByLabel;\n    }\n    set sortByLabel(sortByLabel) {\n        this._sortByLabel = sortByLabel;\n        this.update();\n    }\n    get autoFocusOnList() {\n        return this._autoFocusOnList;\n    }\n    set autoFocusOnList(autoFocusOnList) {\n        this._autoFocusOnList = autoFocusOnList;\n        this.update();\n    }\n    get keepScrollPosition() {\n        return this._keepScrollPosition;\n    }\n    set keepScrollPosition(keepScrollPosition) {\n        this._keepScrollPosition = keepScrollPosition;\n    }\n    get itemActivation() {\n        return this._itemActivation;\n    }\n    set itemActivation(itemActivation) {\n        this._itemActivation = itemActivation;\n    }\n    get activeItems() {\n        return this._activeItems;\n    }\n    set activeItems(activeItems) {\n        this._activeItems = activeItems;\n        this.activeItemsUpdated = true;\n        this.update();\n    }\n    get selectedItems() {\n        return this._selectedItems;\n    }\n    set selectedItems(selectedItems) {\n        this._selectedItems = selectedItems;\n        this.selectedItemsUpdated = true;\n        this.update();\n    }\n    get keyMods() {\n        if (this._quickNavigate) {\n            // Disable keyMods when quick navigate is enabled\n            // because in this model the interaction is purely\n            // keyboard driven and Ctrl/Alt are typically\n            // pressed and hold during this interaction.\n            return NO_KEY_MODS;\n        }\n        return this.ui.keyMods;\n    }\n    set valueSelection(valueSelection) {\n        this._valueSelection = valueSelection;\n        this.valueSelectionUpdated = true;\n        this.update();\n    }\n    get customButton() {\n        return this._customButton;\n    }\n    set customButton(showCustomButton) {\n        this._customButton = showCustomButton;\n        this.update();\n    }\n    get customLabel() {\n        return this._customButtonLabel;\n    }\n    set customLabel(label) {\n        this._customButtonLabel = label;\n        this.update();\n    }\n    get customHover() {\n        return this._customButtonHover;\n    }\n    set customHover(hover) {\n        this._customButtonHover = hover;\n        this.update();\n    }\n    get ok() {\n        return this._ok;\n    }\n    set ok(showOkButton) {\n        this._ok = showOkButton;\n        this.update();\n    }\n    get hideInput() {\n        return !!this._hideInput;\n    }\n    set hideInput(hideInput) {\n        this._hideInput = hideInput;\n        this.update();\n    }\n    trySelectFirst() {\n        if (this.autoFocusOnList) {\n            if (!this.canSelectMany) {\n                this.ui.list.focus(QuickInputListFocus.First);\n            }\n        }\n    }\n    show() {\n        if (!this.visible) {\n            this.visibleDisposables.add(this.ui.inputBox.onDidChange(value => {\n                this.doSetValue(value, true /* skip update since this originates from the UI */);\n            }));\n            this.visibleDisposables.add(this.ui.inputBox.onMouseDown(event => {\n                if (!this.autoFocusOnList) {\n                    this.ui.list.clearFocus();\n                }\n            }));\n            this.visibleDisposables.add((this._hideInput ? this.ui.list : this.ui.inputBox).onKeyDown((event) => {\n                switch (event.keyCode) {\n                    case 18 /* KeyCode.DownArrow */:\n                        this.ui.list.focus(QuickInputListFocus.Next);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 16 /* KeyCode.UpArrow */:\n                        if (this.ui.list.getFocusedElements().length) {\n                            this.ui.list.focus(QuickInputListFocus.Previous);\n                        }\n                        else {\n                            this.ui.list.focus(QuickInputListFocus.Last);\n                        }\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 12 /* KeyCode.PageDown */:\n                        this.ui.list.focus(QuickInputListFocus.NextPage);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 11 /* KeyCode.PageUp */:\n                        this.ui.list.focus(QuickInputListFocus.PreviousPage);\n                        if (this.canSelectMany) {\n                            this.ui.list.domFocus();\n                        }\n                        dom.EventHelper.stop(event, true);\n                        break;\n                    case 17 /* KeyCode.RightArrow */:\n                        if (!this._canAcceptInBackground) {\n                            return; // needs to be enabled\n                        }\n                        if (!this.ui.inputBox.isSelectionAtEnd()) {\n                            return; // ensure input box selection at end\n                        }\n                        if (this.activeItems[0]) {\n                            this._selectedItems = [this.activeItems[0]];\n                            this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                            this.handleAccept(true);\n                        }\n                        break;\n                    case 14 /* KeyCode.Home */:\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n                            this.ui.list.focus(QuickInputListFocus.First);\n                            dom.EventHelper.stop(event, true);\n                        }\n                        break;\n                    case 13 /* KeyCode.End */:\n                        if ((event.ctrlKey || event.metaKey) && !event.shiftKey && !event.altKey) {\n                            this.ui.list.focus(QuickInputListFocus.Last);\n                            dom.EventHelper.stop(event, true);\n                        }\n                        break;\n                }\n            }));\n            this.visibleDisposables.add(this.ui.onDidAccept(() => {\n                if (this.canSelectMany) {\n                    // if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n                    // `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n                    // `.selectedItems` is up to date.\n                    if (!this.ui.list.getCheckedElements().length) {\n                        this._selectedItems = [];\n                        this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                    }\n                }\n                else if (this.activeItems[0]) {\n                    // For single-select, we set `selectedItems` to the item that was accepted.\n                    this._selectedItems = [this.activeItems[0]];\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                }\n                this.handleAccept(false);\n            }));\n            this.visibleDisposables.add(this.ui.onDidCustom(() => {\n                this.onDidCustomEmitter.fire();\n            }));\n            this.visibleDisposables.add(this.ui.list.onDidChangeFocus(focusedItems => {\n                if (this.activeItemsUpdated) {\n                    return; // Expect another event.\n                }\n                if (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._activeItems = focusedItems;\n                this.onDidChangeActiveEmitter.fire(focusedItems);\n            }));\n            this.visibleDisposables.add(this.ui.list.onDidChangeSelection(({ items: selectedItems, event }) => {\n                if (this.canSelectMany) {\n                    if (selectedItems.length) {\n                        this.ui.list.setSelectedElements([]);\n                    }\n                    return;\n                }\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._selectedItems = selectedItems;\n                this.onDidChangeSelectionEmitter.fire(selectedItems);\n                if (selectedItems.length) {\n                    this.handleAccept(event instanceof MouseEvent && event.button === 1 /* mouse middle click */);\n                }\n            }));\n            this.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n                if (!this.canSelectMany) {\n                    return;\n                }\n                if (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n                    return;\n                }\n                this._selectedItems = checkedItems;\n                this.onDidChangeSelectionEmitter.fire(checkedItems);\n            }));\n            this.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event)));\n            this.visibleDisposables.add(this.registerQuickNavigation());\n            this.valueSelectionUpdated = true;\n        }\n        super.show(); // TODO: Why have show() bubble up while update() trickles down? (Could move setComboboxAccessibility() here.)\n    }\n    handleAccept(inBackground) {\n        // Figure out veto via `onWillAccept` event\n        let veto = false;\n        this.onWillAcceptEmitter.fire({ veto: () => veto = true });\n        // Continue with `onDidAccept` if no veto\n        if (!veto) {\n            this.onDidAcceptEmitter.fire({ inBackground });\n        }\n    }\n    registerQuickNavigation() {\n        return dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n            if (this.canSelectMany || !this._quickNavigate) {\n                return;\n            }\n            const keyboardEvent = new StandardKeyboardEvent(e);\n            const keyCode = keyboardEvent.keyCode;\n            // Select element when keys are pressed that signal it\n            const quickNavKeys = this._quickNavigate.keybindings;\n            const wasTriggerKeyPressed = quickNavKeys.some(k => {\n                const [firstPart, chordPart] = k.getParts();\n                if (chordPart) {\n                    return false;\n                }\n                if (firstPart.shiftKey && keyCode === 4 /* KeyCode.Shift */) {\n                    if (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n                        return false; // this is an optimistic check for the shift key being used to navigate back in quick input\n                    }\n                    return true;\n                }\n                if (firstPart.altKey && keyCode === 6 /* KeyCode.Alt */) {\n                    return true;\n                }\n                if (firstPart.ctrlKey && keyCode === 5 /* KeyCode.Ctrl */) {\n                    return true;\n                }\n                if (firstPart.metaKey && keyCode === 57 /* KeyCode.Meta */) {\n                    return true;\n                }\n                return false;\n            });\n            if (wasTriggerKeyPressed) {\n                if (this.activeItems[0]) {\n                    this._selectedItems = [this.activeItems[0]];\n                    this.onDidChangeSelectionEmitter.fire(this.selectedItems);\n                    this.handleAccept(false);\n                }\n                // Unset quick navigate after press. It is only valid once\n                // and should not result in any behaviour change afterwards\n                // if the picker remains open because there was no active item\n                this._quickNavigate = undefined;\n            }\n        });\n    }\n    update() {\n        if (!this.visible) {\n            return;\n        }\n        // store the scrollTop before it is reset\n        const scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n        const hideInput = !!this._hideInput && this._items.length > 0;\n        this.ui.container.classList.toggle('hidden-input', hideInput && !this.description);\n        const visibilities = {\n            title: !!this.title || !!this.step || !!this.buttons.length,\n            description: !!this.description,\n            checkAll: this.canSelectMany && !this._hideCheckAll,\n            checkBox: this.canSelectMany,\n            inputBox: !hideInput,\n            progressBar: !hideInput,\n            visibleCount: true,\n            count: this.canSelectMany,\n            ok: this.ok === 'default' ? this.canSelectMany : this.ok,\n            list: true,\n            message: !!this.validationMessage,\n            customButton: this.customButton\n        };\n        this.ui.setVisibilities(visibilities);\n        super.update();\n        if (this.ui.inputBox.value !== this.value) {\n            this.ui.inputBox.value = this.value;\n        }\n        if (this.valueSelectionUpdated) {\n            this.valueSelectionUpdated = false;\n            this.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\n        }\n        if (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n            this.ui.inputBox.placeholder = (this.placeholder || '');\n        }\n        let ariaLabel = this.ariaLabel;\n        if (!ariaLabel) {\n            ariaLabel = this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n            // If we have a title, include it in the aria label.\n            if (this.title) {\n                ariaLabel += ` - ${this.title}`;\n            }\n        }\n        if (this.ui.inputBox.ariaLabel !== ariaLabel) {\n            this.ui.inputBox.ariaLabel = ariaLabel;\n        }\n        this.ui.list.matchOnDescription = this.matchOnDescription;\n        this.ui.list.matchOnDetail = this.matchOnDetail;\n        this.ui.list.matchOnLabel = this.matchOnLabel;\n        this.ui.list.matchOnLabelMode = this.matchOnLabelMode;\n        this.ui.list.sortByLabel = this.sortByLabel;\n        if (this.itemsUpdated) {\n            this.itemsUpdated = false;\n            this.ui.list.setElements(this.items);\n            this.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n            this.ui.checkAll.checked = this.ui.list.getAllVisibleChecked();\n            this.ui.visibleCount.setCount(this.ui.list.getVisibleCount());\n            this.ui.count.setCount(this.ui.list.getCheckedCount());\n            switch (this._itemActivation) {\n                case ItemActivation.NONE:\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                case ItemActivation.SECOND:\n                    this.ui.list.focus(QuickInputListFocus.Second);\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                case ItemActivation.LAST:\n                    this.ui.list.focus(QuickInputListFocus.Last);\n                    this._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n                    break;\n                default:\n                    this.trySelectFirst();\n                    break;\n            }\n        }\n        if (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n            if (this.canSelectMany) {\n                this.ui.list.clearFocus();\n            }\n            else {\n                this.trySelectFirst();\n            }\n        }\n        if (this.activeItemsUpdated) {\n            this.activeItemsUpdated = false;\n            this.activeItemsToConfirm = this._activeItems;\n            this.ui.list.setFocusedElements(this.activeItems);\n            if (this.activeItemsToConfirm === this._activeItems) {\n                this.activeItemsToConfirm = null;\n            }\n        }\n        if (this.selectedItemsUpdated) {\n            this.selectedItemsUpdated = false;\n            this.selectedItemsToConfirm = this._selectedItems;\n            if (this.canSelectMany) {\n                this.ui.list.setCheckedElements(this.selectedItems);\n            }\n            else {\n                this.ui.list.setSelectedElements(this.selectedItems);\n            }\n            if (this.selectedItemsToConfirm === this._selectedItems) {\n                this.selectedItemsToConfirm = null;\n            }\n        }\n        this.ui.customButton.label = this.customLabel || '';\n        this.ui.customButton.element.title = this.customHover || '';\n        this.ui.setComboboxAccessibility(true);\n        if (!visibilities.inputBox) {\n            // we need to move focus into the tree to detect keybindings\n            // properly when the input box is not visible (quick nav)\n            this.ui.list.domFocus();\n            // Focus the first element in the list if multiselect is enabled\n            if (this.canSelectMany) {\n                this.ui.list.focus(QuickInputListFocus.First);\n            }\n        }\n        // Set the scroll position to what it was before updating the items\n        if (this.keepScrollPosition) {\n            this.scrollTop = scrollTopBefore;\n        }\n    }\n}\nQuickPick.DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\nexport class QuickInputController extends Disposable {\n    constructor(options) {\n        super();\n        this.options = options;\n        this.comboboxAccessibility = false;\n        this.enabled = true;\n        this.onDidAcceptEmitter = this._register(new Emitter());\n        this.onDidCustomEmitter = this._register(new Emitter());\n        this.onDidTriggerButtonEmitter = this._register(new Emitter());\n        this.keyMods = { ctrlCmd: false, alt: false };\n        this.controller = null;\n        this.onShowEmitter = this._register(new Emitter());\n        this.onShow = this.onShowEmitter.event;\n        this.onHideEmitter = this._register(new Emitter());\n        this.onHide = this.onHideEmitter.event;\n        this.idPrefix = options.idPrefix;\n        this.parentElement = options.container;\n        this.styles = options.styles;\n        this.registerKeyModsListeners();\n    }\n    registerKeyModsListeners() {\n        const listener = (e) => {\n            this.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n            this.keyMods.alt = e.altKey;\n        };\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_DOWN, listener, true));\n        this._register(dom.addDisposableListener(window, dom.EventType.KEY_UP, listener, true));\n        this._register(dom.addDisposableListener(window, dom.EventType.MOUSE_DOWN, listener, true));\n    }\n    getUI() {\n        if (this.ui) {\n            return this.ui;\n        }\n        const container = dom.append(this.parentElement, $('.quick-input-widget.show-file-icons'));\n        container.tabIndex = -1;\n        container.style.display = 'none';\n        const styleSheet = dom.createStyleSheet(container);\n        const titleBar = dom.append(container, $('.quick-input-titlebar'));\n        const leftActionBar = this._register(new ActionBar(titleBar));\n        leftActionBar.domNode.classList.add('quick-input-left-action-bar');\n        const title = dom.append(titleBar, $('.quick-input-title'));\n        const rightActionBar = this._register(new ActionBar(titleBar));\n        rightActionBar.domNode.classList.add('quick-input-right-action-bar');\n        const description1 = dom.append(container, $('.quick-input-description'));\n        const headerContainer = dom.append(container, $('.quick-input-header'));\n        const checkAll = dom.append(headerContainer, $('input.quick-input-check-all'));\n        checkAll.type = 'checkbox';\n        checkAll.setAttribute('aria-label', localize('quickInput.checkAll', \"Toggle all checkboxes\"));\n        this._register(dom.addStandardDisposableListener(checkAll, dom.EventType.CHANGE, e => {\n            const checked = checkAll.checked;\n            list.setAllVisibleChecked(checked);\n        }));\n        this._register(dom.addDisposableListener(checkAll, dom.EventType.CLICK, e => {\n            if (e.x || e.y) { // Avoid 'click' triggered by 'space'...\n                inputBox.setFocus();\n            }\n        }));\n        const description2 = dom.append(headerContainer, $('.quick-input-description'));\n        const extraContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n        const filterContainer = dom.append(extraContainer, $('.quick-input-filter'));\n        const inputBox = this._register(new QuickInputBox(filterContainer));\n        inputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n        const visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n        visibleCountContainer.setAttribute('aria-live', 'polite');\n        visibleCountContainer.setAttribute('aria-atomic', 'true');\n        const visibleCount = new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") });\n        const countContainer = dom.append(filterContainer, $('.quick-input-count'));\n        countContainer.setAttribute('aria-live', 'polite');\n        const count = new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") });\n        const okContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const ok = new Button(okContainer);\n        ok.label = localize('ok', \"OK\");\n        this._register(ok.onDidClick(e => {\n            this.onDidAcceptEmitter.fire();\n        }));\n        const customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n        const customButton = new Button(customButtonContainer);\n        customButton.label = localize('custom', \"Custom\");\n        this._register(customButton.onDidClick(e => {\n            this.onDidCustomEmitter.fire();\n        }));\n        const message = dom.append(extraContainer, $(`#${this.idPrefix}message.quick-input-message`));\n        const list = this._register(new QuickInputList(container, this.idPrefix + 'list', this.options));\n        this._register(list.onChangedAllVisibleChecked(checked => {\n            checkAll.checked = checked;\n        }));\n        this._register(list.onChangedVisibleCount(c => {\n            visibleCount.setCount(c);\n        }));\n        this._register(list.onChangedCheckedCount(c => {\n            count.setCount(c);\n        }));\n        this._register(list.onLeave(() => {\n            // Defer to avoid the input field reacting to the triggering key.\n            setTimeout(() => {\n                inputBox.setFocus();\n                if (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n                    list.clearFocus();\n                }\n            }, 0);\n        }));\n        this._register(list.onDidChangeFocus(() => {\n            if (this.comboboxAccessibility) {\n                this.getUI().inputBox.setAttribute('aria-activedescendant', this.getUI().list.getActiveDescendant() || '');\n            }\n        }));\n        const progressBar = new ProgressBar(container);\n        progressBar.getContainer().classList.add('quick-input-progress');\n        const focusTracker = dom.trackFocus(container);\n        this._register(focusTracker);\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n            this.previousFocusElement = e.relatedTarget instanceof HTMLElement ? e.relatedTarget : undefined;\n        }, true));\n        this._register(focusTracker.onDidBlur(() => {\n            if (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n                this.hide(QuickInputHideReason.Blur);\n            }\n            this.previousFocusElement = undefined;\n        }));\n        this._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e) => {\n            inputBox.setFocus();\n        }));\n        this._register(dom.addDisposableListener(container, dom.EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            switch (event.keyCode) {\n                case 3 /* KeyCode.Enter */:\n                    dom.EventHelper.stop(e, true);\n                    this.onDidAcceptEmitter.fire();\n                    break;\n                case 9 /* KeyCode.Escape */:\n                    dom.EventHelper.stop(e, true);\n                    this.hide(QuickInputHideReason.Gesture);\n                    break;\n                case 2 /* KeyCode.Tab */:\n                    if (!event.altKey && !event.ctrlKey && !event.metaKey) {\n                        const selectors = ['.action-label.codicon'];\n                        if (container.classList.contains('show-checkboxes')) {\n                            selectors.push('input');\n                        }\n                        else {\n                            selectors.push('input[type=text]');\n                        }\n                        if (this.getUI().list.isDisplayed()) {\n                            selectors.push('.monaco-list');\n                        }\n                        const stops = container.querySelectorAll(selectors.join(', '));\n                        if (event.shiftKey && event.target === stops[0]) {\n                            dom.EventHelper.stop(e, true);\n                            stops[stops.length - 1].focus();\n                        }\n                        else if (!event.shiftKey && event.target === stops[stops.length - 1]) {\n                            dom.EventHelper.stop(e, true);\n                            stops[0].focus();\n                        }\n                    }\n                    break;\n            }\n        }));\n        this.ui = {\n            container,\n            styleSheet,\n            leftActionBar,\n            titleBar,\n            title,\n            description1,\n            description2,\n            rightActionBar,\n            checkAll,\n            filterContainer,\n            inputBox,\n            visibleCountContainer,\n            visibleCount,\n            countContainer,\n            count,\n            okContainer,\n            ok,\n            message,\n            customButtonContainer,\n            customButton,\n            list,\n            progressBar,\n            onDidAccept: this.onDidAcceptEmitter.event,\n            onDidCustom: this.onDidCustomEmitter.event,\n            onDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n            ignoreFocusOut: false,\n            keyMods: this.keyMods,\n            isScreenReaderOptimized: () => this.options.isScreenReaderOptimized(),\n            show: controller => this.show(controller),\n            hide: () => this.hide(),\n            setVisibilities: visibilities => this.setVisibilities(visibilities),\n            setComboboxAccessibility: enabled => this.setComboboxAccessibility(enabled),\n            setEnabled: enabled => this.setEnabled(enabled),\n            setContextKey: contextKey => this.options.setContextKey(contextKey),\n        };\n        this.updateStyles();\n        return this.ui;\n    }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return new Promise((doResolve, reject) => {\n            let resolve = (result) => {\n                var _a;\n                resolve = doResolve;\n                (_a = options.onKeyMods) === null || _a === void 0 ? void 0 : _a.call(options, input.keyMods);\n                doResolve(result);\n            };\n            if (token.isCancellationRequested) {\n                resolve(undefined);\n                return;\n            }\n            const input = this.createQuickPick();\n            let activeItem;\n            const disposables = [\n                input,\n                input.onDidAccept(() => {\n                    if (input.canSelectMany) {\n                        resolve(input.selectedItems.slice());\n                        input.hide();\n                    }\n                    else {\n                        const result = input.activeItems[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidChangeActive(items => {\n                    const focused = items[0];\n                    if (focused && options.onDidFocus) {\n                        options.onDidFocus(focused);\n                    }\n                }),\n                input.onDidChangeSelection(items => {\n                    if (!input.canSelectMany) {\n                        const result = items[0];\n                        if (result) {\n                            resolve(result);\n                            input.hide();\n                        }\n                    }\n                }),\n                input.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton(Object.assign(Object.assign({}, event), { removeItem: () => {\n                        const index = input.items.indexOf(event.item);\n                        if (index !== -1) {\n                            const items = input.items.slice();\n                            const removed = items.splice(index, 1);\n                            const activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n                            const keepScrollPositionBefore = input.keepScrollPosition;\n                            input.keepScrollPosition = true;\n                            input.items = items;\n                            if (activeItems) {\n                                input.activeItems = activeItems;\n                            }\n                            input.keepScrollPosition = keepScrollPositionBefore;\n                        }\n                    } }))),\n                input.onDidChangeValue(value => {\n                    if (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n                        input.activeItems = [activeItem];\n                    }\n                }),\n                token.onCancellationRequested(() => {\n                    input.hide();\n                }),\n                input.onDidHide(() => {\n                    dispose(disposables);\n                    resolve(undefined);\n                }),\n            ];\n            input.title = options.title;\n            input.canSelectMany = !!options.canPickMany;\n            input.placeholder = options.placeHolder;\n            input.ignoreFocusOut = !!options.ignoreFocusLost;\n            input.matchOnDescription = !!options.matchOnDescription;\n            input.matchOnDetail = !!options.matchOnDetail;\n            input.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\n            input.autoFocusOnList = (options.autoFocusOnList === undefined) || options.autoFocusOnList; // default to true\n            input.quickNavigate = options.quickNavigate;\n            input.hideInput = !!options.hideInput;\n            input.contextKey = options.contextKey;\n            input.busy = true;\n            Promise.all([picks, options.activeItem])\n                .then(([items, _activeItem]) => {\n                activeItem = _activeItem;\n                input.busy = false;\n                input.items = items;\n                if (input.canSelectMany) {\n                    input.selectedItems = items.filter(item => item.type !== 'separator' && item.picked);\n                }\n                if (activeItem) {\n                    input.activeItems = [activeItem];\n                }\n            });\n            input.show();\n            Promise.resolve(picks).then(undefined, err => {\n                reject(err);\n                input.hide();\n            });\n        });\n    }\n    createQuickPick() {\n        const ui = this.getUI();\n        return new QuickPick(ui);\n    }\n    show(controller) {\n        const ui = this.getUI();\n        this.onShowEmitter.fire();\n        const oldController = this.controller;\n        this.controller = controller;\n        if (oldController) {\n            oldController.didHide();\n        }\n        this.setEnabled(true);\n        ui.leftActionBar.clear();\n        ui.title.textContent = '';\n        ui.description1.textContent = '';\n        ui.description2.textContent = '';\n        ui.rightActionBar.clear();\n        ui.checkAll.checked = false;\n        // ui.inputBox.value = ''; Avoid triggering an event.\n        ui.inputBox.placeholder = '';\n        ui.inputBox.password = false;\n        ui.inputBox.showDecoration(Severity.Ignore);\n        ui.visibleCount.setCount(0);\n        ui.count.setCount(0);\n        dom.reset(ui.message);\n        ui.progressBar.stop();\n        ui.list.setElements([]);\n        ui.list.matchOnDescription = false;\n        ui.list.matchOnDetail = false;\n        ui.list.matchOnLabel = true;\n        ui.list.sortByLabel = true;\n        ui.ignoreFocusOut = false;\n        this.setComboboxAccessibility(false);\n        ui.inputBox.ariaLabel = '';\n        const backKeybindingLabel = this.options.backKeybindingLabel();\n        backButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n        ui.container.style.display = '';\n        this.updateLayout();\n        ui.inputBox.setFocus();\n    }\n    setVisibilities(visibilities) {\n        const ui = this.getUI();\n        ui.title.style.display = visibilities.title ? '' : 'none';\n        ui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n        ui.checkAll.style.display = visibilities.checkAll ? '' : 'none';\n        ui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n        ui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n        ui.countContainer.style.display = visibilities.count ? '' : 'none';\n        ui.okContainer.style.display = visibilities.ok ? '' : 'none';\n        ui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n        ui.message.style.display = visibilities.message ? '' : 'none';\n        ui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n        ui.list.display(!!visibilities.list);\n        ui.container.classList[visibilities.checkBox ? 'add' : 'remove']('show-checkboxes');\n        this.updateLayout(); // TODO\n    }\n    setComboboxAccessibility(enabled) {\n        if (enabled !== this.comboboxAccessibility) {\n            const ui = this.getUI();\n            this.comboboxAccessibility = enabled;\n            if (this.comboboxAccessibility) {\n                ui.inputBox.setAttribute('role', 'combobox');\n                ui.inputBox.setAttribute('aria-haspopup', 'true');\n                ui.inputBox.setAttribute('aria-autocomplete', 'list');\n                ui.inputBox.setAttribute('aria-activedescendant', ui.list.getActiveDescendant() || '');\n            }\n            else {\n                ui.inputBox.removeAttribute('role');\n                ui.inputBox.removeAttribute('aria-haspopup');\n                ui.inputBox.removeAttribute('aria-autocomplete');\n                ui.inputBox.removeAttribute('aria-activedescendant');\n            }\n        }\n    }\n    setEnabled(enabled) {\n        if (enabled !== this.enabled) {\n            this.enabled = enabled;\n            for (const item of this.getUI().leftActionBar.viewItems) {\n                item.getAction().enabled = enabled;\n            }\n            for (const item of this.getUI().rightActionBar.viewItems) {\n                item.getAction().enabled = enabled;\n            }\n            this.getUI().checkAll.disabled = !enabled;\n            // this.getUI().inputBox.enabled = enabled; Avoid loosing focus.\n            this.getUI().ok.enabled = enabled;\n            this.getUI().list.enabled = enabled;\n        }\n    }\n    hide(reason) {\n        var _a;\n        const controller = this.controller;\n        if (controller) {\n            const focusChanged = !((_a = this.ui) === null || _a === void 0 ? void 0 : _a.container.contains(document.activeElement));\n            this.controller = null;\n            this.onHideEmitter.fire();\n            this.getUI().container.style.display = 'none';\n            if (!focusChanged) {\n                let currentElement = this.previousFocusElement;\n                while (currentElement && !currentElement.offsetParent) {\n                    currentElement = withNullAsUndefined(currentElement.parentElement);\n                }\n                if (currentElement === null || currentElement === void 0 ? void 0 : currentElement.offsetParent) {\n                    currentElement.focus();\n                    this.previousFocusElement = undefined;\n                }\n                else {\n                    this.options.returnFocus();\n                }\n            }\n            controller.didHide(reason);\n        }\n    }\n    layout(dimension, titleBarOffset) {\n        this.dimension = dimension;\n        this.titleBarOffset = titleBarOffset;\n        this.updateLayout();\n    }\n    updateLayout() {\n        if (this.ui) {\n            this.ui.container.style.top = `${this.titleBarOffset}px`;\n            const style = this.ui.container.style;\n            const width = Math.min(this.dimension.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\n            style.width = width + 'px';\n            style.marginLeft = '-' + (width / 2) + 'px';\n            this.ui.inputBox.layout();\n            this.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n        }\n    }\n    applyStyles(styles) {\n        this.styles = styles;\n        this.updateStyles();\n    }\n    updateStyles() {\n        if (this.ui) {\n            const { quickInputTitleBackground, quickInputBackground, quickInputForeground, contrastBorder, widgetShadow, } = this.styles.widget;\n            this.ui.titleBar.style.backgroundColor = quickInputTitleBackground ? quickInputTitleBackground.toString() : '';\n            this.ui.container.style.backgroundColor = quickInputBackground ? quickInputBackground.toString() : '';\n            this.ui.container.style.color = quickInputForeground ? quickInputForeground.toString() : '';\n            this.ui.container.style.border = contrastBorder ? `1px solid ${contrastBorder}` : '';\n            this.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n            this.ui.inputBox.style(this.styles.inputBox);\n            this.ui.count.style(this.styles.countBadge);\n            this.ui.ok.style(this.styles.button);\n            this.ui.customButton.style(this.styles.button);\n            this.ui.progressBar.style(this.styles.progressBar);\n            this.ui.list.style(this.styles.list);\n            const content = [];\n            if (this.styles.list.pickerGroupBorder) {\n                content.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.list.pickerGroupBorder}; }`);\n            }\n            if (this.styles.list.pickerGroupForeground) {\n                content.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.list.pickerGroupForeground}; }`);\n            }\n            if (this.styles.keybindingLabel.keybindingLabelBackground ||\n                this.styles.keybindingLabel.keybindingLabelBorder ||\n                this.styles.keybindingLabel.keybindingLabelBottomBorder ||\n                this.styles.keybindingLabel.keybindingLabelShadow ||\n                this.styles.keybindingLabel.keybindingLabelForeground) {\n                content.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n                if (this.styles.keybindingLabel.keybindingLabelBackground) {\n                    content.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBorder) {\n                    // Order matters here. `border-color` must come before `border-bottom-color`.\n                    content.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n                    content.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelShadow) {\n                    content.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n                }\n                if (this.styles.keybindingLabel.keybindingLabelForeground) {\n                    content.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n                }\n                content.push('}');\n            }\n            const newStyles = content.join('\\n');\n            if (newStyles !== this.ui.styleSheet.textContent) {\n                this.ui.styleSheet.textContent = newStyles;\n            }\n        }\n    }\n}\nQuickInputController.MAX_WIDTH = 600; // Max total width of quick input widget\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}