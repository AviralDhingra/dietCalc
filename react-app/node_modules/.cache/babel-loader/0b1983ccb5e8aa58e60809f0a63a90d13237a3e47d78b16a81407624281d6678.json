{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nclass TabFocusImpl {\n  constructor() {\n    this._tabFocus = false;\n    this._onDidChangeTabFocus = new Emitter();\n    this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n  }\n  getTabFocusMode() {\n    return this._tabFocus;\n  }\n  setTabFocusMode(tabFocusMode) {\n    if (this._tabFocus === tabFocusMode) {\n      return;\n    }\n    this._tabFocus = tabFocusMode;\n    this._onDidChangeTabFocus.fire(this._tabFocus);\n  }\n}\n/**\n * Control what pressing Tab does.\n * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n * Defaults to false.\n */\nexport const TabFocus = new TabFocusImpl();","map":{"version":3,"names":["Emitter","TabFocusImpl","constructor","_tabFocus","_onDidChangeTabFocus","onDidChangeTabFocus","event","getTabFocusMode","setTabFocusMode","tabFocusMode","fire","TabFocus"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/browser/config/tabFocus.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nclass TabFocusImpl {\n    constructor() {\n        this._tabFocus = false;\n        this._onDidChangeTabFocus = new Emitter();\n        this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n    }\n    getTabFocusMode() {\n        return this._tabFocus;\n    }\n    setTabFocusMode(tabFocusMode) {\n        if (this._tabFocus === tabFocusMode) {\n            return;\n        }\n        this._tabFocus = tabFocusMode;\n        this._onDidChangeTabFocus.fire(this._tabFocus);\n    }\n}\n/**\n * Control what pressing Tab does.\n * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n * Defaults to false.\n */\nexport const TabFocus = new TabFocusImpl();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,+BAA+B;AACvD,MAAMC,YAAY,CAAC;EACfC,WAAW,GAAG;IACV,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,oBAAoB,GAAG,IAAIJ,OAAO,EAAE;IACzC,IAAI,CAACK,mBAAmB,GAAG,IAAI,CAACD,oBAAoB,CAACE,KAAK;EAC9D;EACAC,eAAe,GAAG;IACd,OAAO,IAAI,CAACJ,SAAS;EACzB;EACAK,eAAe,CAACC,YAAY,EAAE;IAC1B,IAAI,IAAI,CAACN,SAAS,KAAKM,YAAY,EAAE;MACjC;IACJ;IACA,IAAI,CAACN,SAAS,GAAGM,YAAY;IAC7B,IAAI,CAACL,oBAAoB,CAACM,IAAI,CAAC,IAAI,CAACP,SAAS,CAAC;EAClD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMQ,QAAQ,GAAG,IAAIV,YAAY,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}