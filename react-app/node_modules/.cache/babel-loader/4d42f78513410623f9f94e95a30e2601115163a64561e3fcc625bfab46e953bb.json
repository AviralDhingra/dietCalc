{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append } from '../../dom.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\nimport { format } from '../../../common/strings.js';\nimport './countBadge.css';\nconst defaultOpts = {\n  badgeBackground: Color.fromHex('#4D4D4D'),\n  badgeForeground: Color.fromHex('#FFFFFF')\n};\nexport class CountBadge {\n  constructor(container, options) {\n    this.count = 0;\n    this.options = options || Object.create(null);\n    mixin(this.options, defaultOpts, false);\n    this.badgeBackground = this.options.badgeBackground;\n    this.badgeForeground = this.options.badgeForeground;\n    this.badgeBorder = this.options.badgeBorder;\n    this.element = append(container, $('.monaco-count-badge'));\n    this.countFormat = this.options.countFormat || '{0}';\n    this.titleFormat = this.options.titleFormat || '';\n    this.setCount(this.options.count || 0);\n  }\n  setCount(count) {\n    this.count = count;\n    this.render();\n  }\n  setTitleFormat(titleFormat) {\n    this.titleFormat = titleFormat;\n    this.render();\n  }\n  render() {\n    this.element.textContent = format(this.countFormat, this.count);\n    this.element.title = format(this.titleFormat, this.count);\n    this.applyStyles();\n  }\n  style(styles) {\n    this.badgeBackground = styles.badgeBackground;\n    this.badgeForeground = styles.badgeForeground;\n    this.badgeBorder = styles.badgeBorder;\n    this.applyStyles();\n  }\n  applyStyles() {\n    if (this.element) {\n      const background = this.badgeBackground ? this.badgeBackground.toString() : '';\n      const foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\n      const border = this.badgeBorder ? this.badgeBorder.toString() : '';\n      this.element.style.backgroundColor = background;\n      this.element.style.color = foreground;\n      this.element.style.borderWidth = border ? '1px' : '';\n      this.element.style.borderStyle = border ? 'solid' : '';\n      this.element.style.borderColor = border;\n    }\n  }\n}","map":{"version":3,"names":["$","append","Color","mixin","format","defaultOpts","badgeBackground","fromHex","badgeForeground","CountBadge","constructor","container","options","count","Object","create","badgeBorder","element","countFormat","titleFormat","setCount","render","setTitleFormat","textContent","title","applyStyles","style","styles","background","toString","foreground","border","backgroundColor","color","borderWidth","borderStyle","borderColor"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/browser/ui/countBadge/countBadge.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append } from '../../dom.js';\nimport { Color } from '../../../common/color.js';\nimport { mixin } from '../../../common/objects.js';\nimport { format } from '../../../common/strings.js';\nimport './countBadge.css';\nconst defaultOpts = {\n    badgeBackground: Color.fromHex('#4D4D4D'),\n    badgeForeground: Color.fromHex('#FFFFFF')\n};\nexport class CountBadge {\n    constructor(container, options) {\n        this.count = 0;\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOpts, false);\n        this.badgeBackground = this.options.badgeBackground;\n        this.badgeForeground = this.options.badgeForeground;\n        this.badgeBorder = this.options.badgeBorder;\n        this.element = append(container, $('.monaco-count-badge'));\n        this.countFormat = this.options.countFormat || '{0}';\n        this.titleFormat = this.options.titleFormat || '';\n        this.setCount(this.options.count || 0);\n    }\n    setCount(count) {\n        this.count = count;\n        this.render();\n    }\n    setTitleFormat(titleFormat) {\n        this.titleFormat = titleFormat;\n        this.render();\n    }\n    render() {\n        this.element.textContent = format(this.countFormat, this.count);\n        this.element.title = format(this.titleFormat, this.count);\n        this.applyStyles();\n    }\n    style(styles) {\n        this.badgeBackground = styles.badgeBackground;\n        this.badgeForeground = styles.badgeForeground;\n        this.badgeBorder = styles.badgeBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.element) {\n            const background = this.badgeBackground ? this.badgeBackground.toString() : '';\n            const foreground = this.badgeForeground ? this.badgeForeground.toString() : '';\n            const border = this.badgeBorder ? this.badgeBorder.toString() : '';\n            this.element.style.backgroundColor = background;\n            this.element.style.color = foreground;\n            this.element.style.borderWidth = border ? '1px' : '';\n            this.element.style.borderStyle = border ? 'solid' : '';\n            this.element.style.borderColor = border;\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,CAAC,EAAEC,MAAM,QAAQ,cAAc;AACxC,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,KAAK,QAAQ,4BAA4B;AAClD,SAASC,MAAM,QAAQ,4BAA4B;AACnD,OAAO,kBAAkB;AACzB,MAAMC,WAAW,GAAG;EAChBC,eAAe,EAAEJ,KAAK,CAACK,OAAO,CAAC,SAAS,CAAC;EACzCC,eAAe,EAAEN,KAAK,CAACK,OAAO,CAAC,SAAS;AAC5C,CAAC;AACD,OAAO,MAAME,UAAU,CAAC;EACpBC,WAAW,CAACC,SAAS,EAAEC,OAAO,EAAE;IAC5B,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACD,OAAO,GAAGA,OAAO,IAAIE,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC7CZ,KAAK,CAAC,IAAI,CAACS,OAAO,EAAEP,WAAW,EAAE,KAAK,CAAC;IACvC,IAAI,CAACC,eAAe,GAAG,IAAI,CAACM,OAAO,CAACN,eAAe;IACnD,IAAI,CAACE,eAAe,GAAG,IAAI,CAACI,OAAO,CAACJ,eAAe;IACnD,IAAI,CAACQ,WAAW,GAAG,IAAI,CAACJ,OAAO,CAACI,WAAW;IAC3C,IAAI,CAACC,OAAO,GAAGhB,MAAM,CAACU,SAAS,EAAEX,CAAC,CAAC,qBAAqB,CAAC,CAAC;IAC1D,IAAI,CAACkB,WAAW,GAAG,IAAI,CAACN,OAAO,CAACM,WAAW,IAAI,KAAK;IACpD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACP,OAAO,CAACO,WAAW,IAAI,EAAE;IACjD,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACR,OAAO,CAACC,KAAK,IAAI,CAAC,CAAC;EAC1C;EACAO,QAAQ,CAACP,KAAK,EAAE;IACZ,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACQ,MAAM,EAAE;EACjB;EACAC,cAAc,CAACH,WAAW,EAAE;IACxB,IAAI,CAACA,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,MAAM,EAAE;EACjB;EACAA,MAAM,GAAG;IACL,IAAI,CAACJ,OAAO,CAACM,WAAW,GAAGnB,MAAM,CAAC,IAAI,CAACc,WAAW,EAAE,IAAI,CAACL,KAAK,CAAC;IAC/D,IAAI,CAACI,OAAO,CAACO,KAAK,GAAGpB,MAAM,CAAC,IAAI,CAACe,WAAW,EAAE,IAAI,CAACN,KAAK,CAAC;IACzD,IAAI,CAACY,WAAW,EAAE;EACtB;EACAC,KAAK,CAACC,MAAM,EAAE;IACV,IAAI,CAACrB,eAAe,GAAGqB,MAAM,CAACrB,eAAe;IAC7C,IAAI,CAACE,eAAe,GAAGmB,MAAM,CAACnB,eAAe;IAC7C,IAAI,CAACQ,WAAW,GAAGW,MAAM,CAACX,WAAW;IACrC,IAAI,CAACS,WAAW,EAAE;EACtB;EACAA,WAAW,GAAG;IACV,IAAI,IAAI,CAACR,OAAO,EAAE;MACd,MAAMW,UAAU,GAAG,IAAI,CAACtB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACuB,QAAQ,EAAE,GAAG,EAAE;MAC9E,MAAMC,UAAU,GAAG,IAAI,CAACtB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACqB,QAAQ,EAAE,GAAG,EAAE;MAC9E,MAAME,MAAM,GAAG,IAAI,CAACf,WAAW,GAAG,IAAI,CAACA,WAAW,CAACa,QAAQ,EAAE,GAAG,EAAE;MAClE,IAAI,CAACZ,OAAO,CAACS,KAAK,CAACM,eAAe,GAAGJ,UAAU;MAC/C,IAAI,CAACX,OAAO,CAACS,KAAK,CAACO,KAAK,GAAGH,UAAU;MACrC,IAAI,CAACb,OAAO,CAACS,KAAK,CAACQ,WAAW,GAAGH,MAAM,GAAG,KAAK,GAAG,EAAE;MACpD,IAAI,CAACd,OAAO,CAACS,KAAK,CAACS,WAAW,GAAGJ,MAAM,GAAG,OAAO,GAAG,EAAE;MACtD,IAAI,CAACd,OAAO,CAACS,KAAK,CAACU,WAAW,GAAGL,MAAM;IAC3C;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}