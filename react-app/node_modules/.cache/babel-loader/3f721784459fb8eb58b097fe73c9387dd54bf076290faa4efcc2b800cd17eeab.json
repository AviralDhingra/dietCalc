{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../platform/theme/common/theme.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', {\n  dark: null,\n  light: null,\n  hcDark: null,\n  hcLight: null\n}, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', {\n  dark: '#282828',\n  light: '#eeeeee',\n  hcDark: '#f38518',\n  hcLight: contrastBorder\n}, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', {\n  dark: '#ffffff0b',\n  light: '#fdff0033',\n  hcDark: null,\n  hcLight: null\n}, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', {\n  dark: null,\n  light: null,\n  hcDark: activeContrastBorder,\n  hcLight: activeContrastBorder\n}, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', {\n  dark: editorFindMatchHighlight,\n  light: editorFindMatchHighlight,\n  hcDark: null,\n  hcLight: null\n}, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', {\n  dark: null,\n  light: null,\n  hcDark: activeContrastBorder,\n  hcLight: activeContrastBorder\n}, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\nexport const editorCursorForeground = registerColor('editorCursor.foreground', {\n  dark: '#AEAFAD',\n  light: Color.black,\n  hcDark: Color.white,\n  hcLight: '#0F4A85'\n}, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', {\n  dark: '#e3e4e229',\n  light: '#33333333',\n  hcDark: '#e3e4e229',\n  hcLight: '#CCCCCC'\n}, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorIndentGuides = registerColor('editorIndentGuide.background', {\n  dark: editorWhitespaces,\n  light: editorWhitespaces,\n  hcDark: editorWhitespaces,\n  hcLight: editorWhitespaces\n}, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\nexport const editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', {\n  dark: editorWhitespaces,\n  light: editorWhitespaces,\n  hcDark: editorWhitespaces,\n  hcLight: editorWhitespaces\n}, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', {\n  dark: '#858585',\n  light: '#237893',\n  hcDark: Color.white,\n  hcLight: '#292929'\n}, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', {\n  dark: '#c6c6c6',\n  light: '#0B216F',\n  hcDark: activeContrastBorder,\n  hcLight: activeContrastBorder\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', {\n  dark: deprecatedEditorActiveLineNumber,\n  light: deprecatedEditorActiveLineNumber,\n  hcDark: deprecatedEditorActiveLineNumber,\n  hcLight: deprecatedEditorActiveLineNumber\n}, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorRuler = registerColor('editorRuler.foreground', {\n  dark: '#5A5A5A',\n  light: Color.lightgrey,\n  hcDark: Color.white,\n  hcLight: '#292929'\n}, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', {\n  dark: '#999999',\n  light: '#919191',\n  hcDark: '#999999',\n  hcLight: '#292929'\n}, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', {\n  dark: '#0064001a',\n  light: '#0064001a',\n  hcDark: '#0064001a',\n  hcLight: '#0000'\n}, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', {\n  dark: '#888',\n  light: '#B9B9B9',\n  hcDark: contrastBorder,\n  hcLight: contrastBorder\n}, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', {\n  dark: '#7f7f7f4d',\n  light: '#7f7f7f4d',\n  hcDark: '#7f7f7f4d',\n  hcLight: '#666666'\n}, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler. Only used when the minimap is enabled and placed on the right side of the editor.'));\nexport const editorGutter = registerColor('editorGutter.background', {\n  dark: editorBackground,\n  light: editorBackground,\n  hcDark: editorBackground,\n  hcLight: editorBackground\n}, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', {\n  dark: null,\n  light: null,\n  hcDark: Color.fromHex('#fff').transparent(0.8),\n  hcLight: contrastBorder\n}, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', {\n  dark: Color.fromHex('#000a'),\n  light: Color.fromHex('#0007'),\n  hcDark: null,\n  hcLight: null\n}, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', {\n  dark: null,\n  light: null,\n  hcDark: Color.fromHex('#fff').transparent(0.8),\n  hcLight: Color.fromHex('#292929').transparent(0.8)\n}, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', {\n  dark: Color.fromHex('#ffffff56'),\n  light: Color.fromHex('#0007'),\n  hcDark: null,\n  hcLight: null\n}, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', {\n  dark: null,\n  light: null,\n  hcDark: null,\n  hcLight: null\n}, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', {\n  dark: rulerRangeDefault,\n  light: rulerRangeDefault,\n  hcDark: rulerRangeDefault,\n  hcLight: rulerRangeDefault\n}, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', {\n  dark: new Color(new RGBA(255, 18, 18, 0.7)),\n  light: new Color(new RGBA(255, 18, 18, 0.7)),\n  hcDark: new Color(new RGBA(255, 50, 50, 1)),\n  hcLight: '#B5200D'\n}, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', {\n  dark: editorWarningForeground,\n  light: editorWarningForeground,\n  hcDark: editorWarningBorder,\n  hcLight: editorWarningBorder\n}, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', {\n  dark: editorInfoForeground,\n  light: editorInfoForeground,\n  hcDark: editorInfoBorder,\n  hcLight: editorInfoBorder\n}, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', {\n  dark: '#FFD700',\n  light: '#0431FAFF',\n  hcDark: '#FFD700',\n  hcLight: '#0431FAFF'\n}, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', {\n  dark: '#DA70D6',\n  light: '#319331FF',\n  hcDark: '#DA70D6',\n  hcLight: '#319331FF'\n}, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', {\n  dark: '#179FFF',\n  light: '#7B3814FF',\n  hcDark: '#87CEFA',\n  hcLight: '#7B3814FF'\n}, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', {\n  dark: new Color(new RGBA(255, 18, 18, 0.8)),\n  light: new Color(new RGBA(255, 18, 18, 0.8)),\n  hcDark: new Color(new RGBA(255, 50, 50, 1)),\n  hcLight: ''\n}, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', {\n  dark: '#00000000',\n  light: '#00000000',\n  hcDark: '#00000000',\n  hcLight: '#00000000'\n}, nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', {\n  dark: '#BD9B03',\n  light: '#CEA33D',\n  hcDark: '#ff0000',\n  hcLight: ''\n}, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', {\n  dark: '#bd9b0326',\n  light: '#cea33d14',\n  hcDark: '#00000000',\n  hcLight: ''\n}, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n  const background = theme.getColor(editorBackground);\n  if (background) {\n    collector.addRule(`.monaco-editor, .monaco-editor-background { background-color: ${background}; }`);\n  }\n  const lineHighlight = theme.getColor(editorLineHighlight);\n  const imeBackground = lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background;\n  if (imeBackground) {\n    collector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n  }\n  const foreground = theme.getColor(editorForeground);\n  if (foreground) {\n    collector.addRule(`.monaco-editor, .monaco-editor .inputarea.ime-input { color: ${foreground}; }`);\n  }\n  const gutter = theme.getColor(editorGutter);\n  if (gutter) {\n    collector.addRule(`.monaco-editor .margin { background-color: ${gutter}; }`);\n  }\n  const rangeHighlight = theme.getColor(editorRangeHighlight);\n  if (rangeHighlight) {\n    collector.addRule(`.monaco-editor .rangeHighlight { background-color: ${rangeHighlight}; }`);\n  }\n  const rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\n  if (rangeHighlightBorder) {\n    collector.addRule(`.monaco-editor .rangeHighlight { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${rangeHighlightBorder}; }`);\n  }\n  const symbolHighlight = theme.getColor(editorSymbolHighlight);\n  if (symbolHighlight) {\n    collector.addRule(`.monaco-editor .symbolHighlight { background-color: ${symbolHighlight}; }`);\n  }\n  const symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\n  if (symbolHighlightBorder) {\n    collector.addRule(`.monaco-editor .symbolHighlight { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${symbolHighlightBorder}; }`);\n  }\n  const invisibles = theme.getColor(editorWhitespaces);\n  if (invisibles) {\n    collector.addRule(`.monaco-editor .mtkw { color: ${invisibles} !important; }`);\n    collector.addRule(`.monaco-editor .mtkz { color: ${invisibles} !important; }`);\n  }\n});","map":{"version":3,"names":["nls","Color","RGBA","activeContrastBorder","editorBackground","editorForeground","registerColor","editorWarningForeground","editorInfoForeground","editorWarningBorder","editorInfoBorder","contrastBorder","editorFindMatchHighlight","registerThemingParticipant","isHighContrast","editorLineHighlight","dark","light","hcDark","hcLight","localize","editorLineHighlightBorder","editorRangeHighlight","editorRangeHighlightBorder","editorSymbolHighlight","editorSymbolHighlightBorder","editorCursorForeground","black","white","editorCursorBackground","editorWhitespaces","editorIndentGuides","editorActiveIndentGuides","editorLineNumbers","deprecatedEditorActiveLineNumber","editorActiveLineNumber","editorRuler","lightgrey","editorCodeLensForeground","editorBracketMatchBackground","editorBracketMatchBorder","editorOverviewRulerBorder","editorOverviewRulerBackground","editorGutter","editorUnnecessaryCodeBorder","fromHex","transparent","editorUnnecessaryCodeOpacity","ghostTextBorder","ghostTextForeground","ghostTextBackground","rulerRangeDefault","overviewRulerRangeHighlight","overviewRulerError","overviewRulerWarning","overviewRulerInfo","editorBracketHighlightingForeground1","editorBracketHighlightingForeground2","editorBracketHighlightingForeground3","editorBracketHighlightingForeground4","editorBracketHighlightingForeground5","editorBracketHighlightingForeground6","editorBracketHighlightingUnexpectedBracketForeground","editorBracketPairGuideBackground1","editorBracketPairGuideBackground2","editorBracketPairGuideBackground3","editorBracketPairGuideBackground4","editorBracketPairGuideBackground5","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideActiveBackground6","editorUnicodeHighlightBorder","editorUnicodeHighlightBackground","theme","collector","background","getColor","addRule","lineHighlight","imeBackground","isTransparent","foreground","gutter","rangeHighlight","rangeHighlightBorder","type","symbolHighlight","symbolHighlightBorder","invisibles"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/common/core/editorColorRegistry.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, editorForeground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../platform/theme/common/theme.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hcDark: '#f38518', hcLight: contrastBorder }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hcDark: null, hcLight: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'), true);\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'), true);\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hcDark: '#e3e4e229', hcLight: '#CCCCCC' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorIndentGuides = registerColor('editorIndentGuide.background', { dark: editorWhitespaces, light: editorWhitespaces, hcDark: editorWhitespaces, hcLight: editorWhitespaces }, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'));\nexport const editorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', { dark: editorWhitespaces, light: editorWhitespaces, hcDark: editorWhitespaces, hcLight: editorWhitespaces }, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', { dark: deprecatedEditorActiveLineNumber, light: deprecatedEditorActiveLineNumber, hcDark: deprecatedEditorActiveLineNumber, hcLight: deprecatedEditorActiveLineNumber }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hcDark: '#999999', hcLight: '#292929' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hcDark: '#0064001a', hcLight: '#0000' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hcDark: '#7f7f7f4d', hcLight: '#666666' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler. Only used when the minimap is enabled and placed on the right side of the editor.'));\nexport const editorGutter = registerColor('editorGutter.background', { dark: editorBackground, light: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: contrastBorder }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: Color.fromHex('#292929').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', { dark: rulerRangeDefault, light: rulerRangeDefault, hcDark: rulerRangeDefault, hcLight: rulerRangeDefault }, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hcDark: '#FFD700', hcLight: '#0431FAFF' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hcDark: '#DA70D6', hcLight: '#319331FF' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hcDark: '#87CEFA', hcLight: '#7B3814FF' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '' }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', { dark: '#00000000', light: '#00000000', hcDark: '#00000000', hcLight: '#00000000' }, nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', { dark: '#BD9B03', light: '#CEA33D', hcDark: '#ff0000', hcLight: '' }, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', { dark: '#bd9b0326', light: '#cea33d14', hcDark: '#00000000', hcLight: '' }, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n    const background = theme.getColor(editorBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor, .monaco-editor-background { background-color: ${background}; }`);\n    }\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    const imeBackground = (lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background);\n    if (imeBackground) {\n        collector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n    }\n    const foreground = theme.getColor(editorForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor, .monaco-editor .inputarea.ime-input { color: ${foreground}; }`);\n    }\n    const gutter = theme.getColor(editorGutter);\n    if (gutter) {\n        collector.addRule(`.monaco-editor .margin { background-color: ${gutter}; }`);\n    }\n    const rangeHighlight = theme.getColor(editorRangeHighlight);\n    if (rangeHighlight) {\n        collector.addRule(`.monaco-editor .rangeHighlight { background-color: ${rangeHighlight}; }`);\n    }\n    const rangeHighlightBorder = theme.getColor(editorRangeHighlightBorder);\n    if (rangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .rangeHighlight { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${rangeHighlightBorder}; }`);\n    }\n    const symbolHighlight = theme.getColor(editorSymbolHighlight);\n    if (symbolHighlight) {\n        collector.addRule(`.monaco-editor .symbolHighlight { background-color: ${symbolHighlight}; }`);\n    }\n    const symbolHighlightBorder = theme.getColor(editorSymbolHighlightBorder);\n    if (symbolHighlightBorder) {\n        collector.addRule(`.monaco-editor .symbolHighlight { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${symbolHighlightBorder}; }`);\n    }\n    const invisibles = theme.getColor(editorWhitespaces);\n    if (invisibles) {\n        collector.addRule(`.monaco-editor .mtkw { color: ${invisibles} !important; }`);\n        collector.addRule(`.monaco-editor .mtkz { color: ${invisibles} !important; }`);\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}