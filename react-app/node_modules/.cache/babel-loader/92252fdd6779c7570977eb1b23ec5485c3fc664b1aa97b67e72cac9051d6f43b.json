{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n  const sandboxProcess = globals.vscode.process;\n  safeProcess = {\n    get platform() {\n      return sandboxProcess.platform;\n    },\n    get arch() {\n      return sandboxProcess.arch;\n    },\n    get env() {\n      return sandboxProcess.env;\n    },\n    cwd() {\n      return sandboxProcess.cwd();\n    }\n  };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n  safeProcess = {\n    get platform() {\n      return process.platform;\n    },\n    get arch() {\n      return process.arch;\n    },\n    get env() {\n      return process.env;\n    },\n    cwd() {\n      return process.env['VSCODE_CWD'] || process.cwd();\n    }\n  };\n}\n// Web environment\nelse {\n  safeProcess = {\n    // Supported\n    get platform() {\n      return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux';\n    },\n    get arch() {\n      return undefined; /* arch is undefined in web */\n    },\n\n    // Unsupported\n    get env() {\n      return {};\n    },\n    cwd() {\n      return '/';\n    }\n  };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;","map":{"version":3,"names":["globals","isMacintosh","isWindows","safeProcess","vscode","process","sandboxProcess","platform","arch","env","cwd","undefined"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/common/process.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,OAAO,EAAEC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AAC/D,IAAIC,WAAW;AACf;AACA,IAAI,OAAOH,OAAO,CAACI,MAAM,KAAK,WAAW,IAAI,OAAOJ,OAAO,CAACI,MAAM,CAACC,OAAO,KAAK,WAAW,EAAE;EACxF,MAAMC,cAAc,GAAGN,OAAO,CAACI,MAAM,CAACC,OAAO;EAC7CF,WAAW,GAAG;IACV,IAAII,QAAQ,GAAG;MAAE,OAAOD,cAAc,CAACC,QAAQ;IAAE,CAAC;IAClD,IAAIC,IAAI,GAAG;MAAE,OAAOF,cAAc,CAACE,IAAI;IAAE,CAAC;IAC1C,IAAIC,GAAG,GAAG;MAAE,OAAOH,cAAc,CAACG,GAAG;IAAE,CAAC;IACxCC,GAAG,GAAG;MAAE,OAAOJ,cAAc,CAACI,GAAG,EAAE;IAAE;EACzC,CAAC;AACL;AACA;AAAA,KACK,IAAI,OAAOL,OAAO,KAAK,WAAW,EAAE;EACrCF,WAAW,GAAG;IACV,IAAII,QAAQ,GAAG;MAAE,OAAOF,OAAO,CAACE,QAAQ;IAAE,CAAC;IAC3C,IAAIC,IAAI,GAAG;MAAE,OAAOH,OAAO,CAACG,IAAI;IAAE,CAAC;IACnC,IAAIC,GAAG,GAAG;MAAE,OAAOJ,OAAO,CAACI,GAAG;IAAE,CAAC;IACjCC,GAAG,GAAG;MAAE,OAAOL,OAAO,CAACI,GAAG,CAAC,YAAY,CAAC,IAAIJ,OAAO,CAACK,GAAG,EAAE;IAAE;EAC/D,CAAC;AACL;AACA;AAAA,KACK;EACDP,WAAW,GAAG;IACV;IACA,IAAII,QAAQ,GAAG;MAAE,OAAOL,SAAS,GAAG,OAAO,GAAGD,WAAW,GAAG,QAAQ,GAAG,OAAO;IAAE,CAAC;IACjF,IAAIO,IAAI,GAAG;MAAE,OAAOG,SAAS,CAAC,CAAC;IAA+B,CAAC;;IAC/D;IACA,IAAIF,GAAG,GAAG;MAAE,OAAO,CAAC,CAAC;IAAE,CAAC;IACxBC,GAAG,GAAG;MAAE,OAAO,GAAG;IAAE;EACxB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,GAAG,GAAGP,WAAW,CAACO,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMD,GAAG,GAAGN,WAAW,CAACM,GAAG;AAClC;AACA;AACA;AACA;AACA,OAAO,MAAMF,QAAQ,GAAGJ,WAAW,CAACI,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}