{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { renderFormattedText, renderText } from '../../formattedTextRenderer.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport * as aria from '../aria/aria.js';\nimport { ScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { Widget } from '../widget.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { HistoryNavigator } from '../../../common/history.js';\nimport { mixin } from '../../../common/objects.js';\nimport './inputBox.css';\nimport * as nls from '../../../../nls.js';\nconst $ = dom.$;\nconst defaultOpts = {\n  inputBackground: Color.fromHex('#3C3C3C'),\n  inputForeground: Color.fromHex('#CCCCCC'),\n  inputValidationInfoBorder: Color.fromHex('#55AAFF'),\n  inputValidationInfoBackground: Color.fromHex('#063B49'),\n  inputValidationWarningBorder: Color.fromHex('#B89500'),\n  inputValidationWarningBackground: Color.fromHex('#352A05'),\n  inputValidationErrorBorder: Color.fromHex('#BE1100'),\n  inputValidationErrorBackground: Color.fromHex('#5A1D1D')\n};\nexport class InputBox extends Widget {\n  constructor(container, contextViewProvider, options) {\n    var _a;\n    super();\n    this.state = 'idle';\n    this.maxHeight = Number.POSITIVE_INFINITY;\n    this._onDidChange = this._register(new Emitter());\n    this.onDidChange = this._onDidChange.event;\n    this._onDidHeightChange = this._register(new Emitter());\n    this.onDidHeightChange = this._onDidHeightChange.event;\n    this.contextViewProvider = contextViewProvider;\n    this.options = options || Object.create(null);\n    mixin(this.options, defaultOpts, false);\n    this.message = null;\n    this.placeholder = this.options.placeholder || '';\n    this.tooltip = (_a = this.options.tooltip) !== null && _a !== void 0 ? _a : this.placeholder || '';\n    this.ariaLabel = this.options.ariaLabel || '';\n    this.inputBackground = this.options.inputBackground;\n    this.inputForeground = this.options.inputForeground;\n    this.inputBorder = this.options.inputBorder;\n    this.inputValidationInfoBorder = this.options.inputValidationInfoBorder;\n    this.inputValidationInfoBackground = this.options.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = this.options.inputValidationInfoForeground;\n    this.inputValidationWarningBorder = this.options.inputValidationWarningBorder;\n    this.inputValidationWarningBackground = this.options.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = this.options.inputValidationWarningForeground;\n    this.inputValidationErrorBorder = this.options.inputValidationErrorBorder;\n    this.inputValidationErrorBackground = this.options.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = this.options.inputValidationErrorForeground;\n    if (this.options.validationOptions) {\n      this.validation = this.options.validationOptions.validation;\n    }\n    this.element = dom.append(container, $('.monaco-inputbox.idle'));\n    const tagName = this.options.flexibleHeight ? 'textarea' : 'input';\n    const wrapper = dom.append(this.element, $('.ibwrapper'));\n    this.input = dom.append(wrapper, $(tagName + '.input.empty'));\n    this.input.setAttribute('autocorrect', 'off');\n    this.input.setAttribute('autocapitalize', 'off');\n    this.input.setAttribute('spellcheck', 'false');\n    this.onfocus(this.input, () => this.element.classList.add('synthetic-focus'));\n    this.onblur(this.input, () => this.element.classList.remove('synthetic-focus'));\n    if (this.options.flexibleHeight) {\n      this.maxHeight = typeof this.options.flexibleMaxHeight === 'number' ? this.options.flexibleMaxHeight : Number.POSITIVE_INFINITY;\n      this.mirror = dom.append(wrapper, $('div.mirror'));\n      this.mirror.innerText = '\\u00a0';\n      this.scrollableElement = new ScrollableElement(this.element, {\n        vertical: 1 /* ScrollbarVisibility.Auto */\n      });\n      if (this.options.flexibleWidth) {\n        this.input.setAttribute('wrap', 'off');\n        this.mirror.style.whiteSpace = 'pre';\n        this.mirror.style.wordWrap = 'initial';\n      }\n      dom.append(container, this.scrollableElement.getDomNode());\n      this._register(this.scrollableElement);\n      // from ScrollableElement to DOM\n      this._register(this.scrollableElement.onScroll(e => this.input.scrollTop = e.scrollTop));\n      const onSelectionChange = this._register(new DomEmitter(document, 'selectionchange'));\n      const onAnchoredSelectionChange = Event.filter(onSelectionChange.event, () => {\n        const selection = document.getSelection();\n        return (selection === null || selection === void 0 ? void 0 : selection.anchorNode) === wrapper;\n      });\n      // from DOM to ScrollableElement\n      this._register(onAnchoredSelectionChange(this.updateScrollDimensions, this));\n      this._register(this.onDidHeightChange(this.updateScrollDimensions, this));\n    } else {\n      this.input.type = this.options.type || 'text';\n      this.input.setAttribute('wrap', 'off');\n    }\n    if (this.ariaLabel) {\n      this.input.setAttribute('aria-label', this.ariaLabel);\n    }\n    if (this.placeholder && !this.options.showPlaceholderOnFocus) {\n      this.setPlaceHolder(this.placeholder);\n    }\n    if (this.tooltip) {\n      this.setTooltip(this.tooltip);\n    }\n    this.oninput(this.input, () => this.onValueChange());\n    this.onblur(this.input, () => this.onBlur());\n    this.onfocus(this.input, () => this.onFocus());\n    this.ignoreGesture(this.input);\n    setTimeout(() => this.updateMirror(), 0);\n    // Support actions\n    if (this.options.actions) {\n      this.actionbar = this._register(new ActionBar(this.element));\n      this.actionbar.push(this.options.actions, {\n        icon: true,\n        label: false\n      });\n    }\n    this.applyStyles();\n  }\n  onBlur() {\n    this._hideMessage();\n    if (this.options.showPlaceholderOnFocus) {\n      this.input.setAttribute('placeholder', '');\n    }\n  }\n  onFocus() {\n    this._showMessage();\n    if (this.options.showPlaceholderOnFocus) {\n      this.input.setAttribute('placeholder', this.placeholder || '');\n    }\n  }\n  setPlaceHolder(placeHolder) {\n    this.placeholder = placeHolder;\n    this.input.setAttribute('placeholder', placeHolder);\n  }\n  setTooltip(tooltip) {\n    this.tooltip = tooltip;\n    this.input.title = tooltip;\n  }\n  setAriaLabel(label) {\n    this.ariaLabel = label;\n    if (label) {\n      this.input.setAttribute('aria-label', this.ariaLabel);\n    } else {\n      this.input.removeAttribute('aria-label');\n    }\n  }\n  getAriaLabel() {\n    return this.ariaLabel;\n  }\n  get inputElement() {\n    return this.input;\n  }\n  get value() {\n    return this.input.value;\n  }\n  set value(newValue) {\n    if (this.input.value !== newValue) {\n      this.input.value = newValue;\n      this.onValueChange();\n    }\n  }\n  get height() {\n    return typeof this.cachedHeight === 'number' ? this.cachedHeight : dom.getTotalHeight(this.element);\n  }\n  focus() {\n    this.input.focus();\n  }\n  blur() {\n    this.input.blur();\n  }\n  hasFocus() {\n    return document.activeElement === this.input;\n  }\n  select() {\n    let range = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.input.select();\n    if (range) {\n      this.input.setSelectionRange(range.start, range.end);\n      if (range.end === this.input.value.length) {\n        this.input.scrollLeft = this.input.scrollWidth;\n      }\n    }\n  }\n  isSelectionAtEnd() {\n    return this.input.selectionEnd === this.input.value.length && this.input.selectionStart === this.input.selectionEnd;\n  }\n  enable() {\n    this.input.removeAttribute('disabled');\n  }\n  disable() {\n    this.blur();\n    this.input.disabled = true;\n    this._hideMessage();\n  }\n  get width() {\n    return dom.getTotalWidth(this.input);\n  }\n  set width(width) {\n    if (this.options.flexibleHeight && this.options.flexibleWidth) {\n      // textarea with horizontal scrolling\n      let horizontalPadding = 0;\n      if (this.mirror) {\n        const paddingLeft = parseFloat(this.mirror.style.paddingLeft || '') || 0;\n        const paddingRight = parseFloat(this.mirror.style.paddingRight || '') || 0;\n        horizontalPadding = paddingLeft + paddingRight;\n      }\n      this.input.style.width = width - horizontalPadding + 'px';\n    } else {\n      this.input.style.width = width + 'px';\n    }\n    if (this.mirror) {\n      this.mirror.style.width = width + 'px';\n    }\n  }\n  set paddingRight(paddingRight) {\n    // Set width to avoid hint text overlapping buttons\n    this.input.style.width = `calc(100% - ${paddingRight}px)`;\n    if (this.mirror) {\n      this.mirror.style.paddingRight = paddingRight + 'px';\n    }\n  }\n  updateScrollDimensions() {\n    if (typeof this.cachedContentHeight !== 'number' || typeof this.cachedHeight !== 'number' || !this.scrollableElement) {\n      return;\n    }\n    const scrollHeight = this.cachedContentHeight;\n    const height = this.cachedHeight;\n    const scrollTop = this.input.scrollTop;\n    this.scrollableElement.setScrollDimensions({\n      scrollHeight,\n      height\n    });\n    this.scrollableElement.setScrollPosition({\n      scrollTop\n    });\n  }\n  showMessage(message, force) {\n    this.message = message;\n    this.element.classList.remove('idle');\n    this.element.classList.remove('info');\n    this.element.classList.remove('warning');\n    this.element.classList.remove('error');\n    this.element.classList.add(this.classForType(message.type));\n    const styles = this.stylesForType(this.message.type);\n    this.element.style.border = styles.border ? `1px solid ${styles.border}` : '';\n    if (this.hasFocus() || force) {\n      this._showMessage();\n    }\n  }\n  hideMessage() {\n    this.message = null;\n    this.element.classList.remove('info');\n    this.element.classList.remove('warning');\n    this.element.classList.remove('error');\n    this.element.classList.add('idle');\n    this._hideMessage();\n    this.applyStyles();\n  }\n  validate() {\n    let errorMsg = null;\n    if (this.validation) {\n      errorMsg = this.validation(this.value);\n      if (errorMsg) {\n        this.inputElement.setAttribute('aria-invalid', 'true');\n        this.showMessage(errorMsg);\n      } else if (this.inputElement.hasAttribute('aria-invalid')) {\n        this.inputElement.removeAttribute('aria-invalid');\n        this.hideMessage();\n      }\n    }\n    return errorMsg === null || errorMsg === void 0 ? void 0 : errorMsg.type;\n  }\n  stylesForType(type) {\n    switch (type) {\n      case 1 /* MessageType.INFO */:\n        return {\n          border: this.inputValidationInfoBorder,\n          background: this.inputValidationInfoBackground,\n          foreground: this.inputValidationInfoForeground\n        };\n      case 2 /* MessageType.WARNING */:\n        return {\n          border: this.inputValidationWarningBorder,\n          background: this.inputValidationWarningBackground,\n          foreground: this.inputValidationWarningForeground\n        };\n      default:\n        return {\n          border: this.inputValidationErrorBorder,\n          background: this.inputValidationErrorBackground,\n          foreground: this.inputValidationErrorForeground\n        };\n    }\n  }\n  classForType(type) {\n    switch (type) {\n      case 1 /* MessageType.INFO */:\n        return 'info';\n      case 2 /* MessageType.WARNING */:\n        return 'warning';\n      default:\n        return 'error';\n    }\n  }\n  _showMessage() {\n    if (!this.contextViewProvider || !this.message) {\n      return;\n    }\n    let div;\n    const layout = () => div.style.width = dom.getTotalWidth(this.element) + 'px';\n    this.contextViewProvider.showContextView({\n      getAnchor: () => this.element,\n      anchorAlignment: 1 /* AnchorAlignment.RIGHT */,\n      render: container => {\n        if (!this.message) {\n          return null;\n        }\n        div = dom.append(container, $('.monaco-inputbox-container'));\n        layout();\n        const renderOptions = {\n          inline: true,\n          className: 'monaco-inputbox-message'\n        };\n        const spanElement = this.message.formatContent ? renderFormattedText(this.message.content, renderOptions) : renderText(this.message.content, renderOptions);\n        spanElement.classList.add(this.classForType(this.message.type));\n        const styles = this.stylesForType(this.message.type);\n        spanElement.style.backgroundColor = styles.background ? styles.background.toString() : '';\n        spanElement.style.color = styles.foreground ? styles.foreground.toString() : '';\n        spanElement.style.border = styles.border ? `1px solid ${styles.border}` : '';\n        dom.append(div, spanElement);\n        return null;\n      },\n      onHide: () => {\n        this.state = 'closed';\n      },\n      layout: layout\n    });\n    // ARIA Support\n    let alertText;\n    if (this.message.type === 3 /* MessageType.ERROR */) {\n      alertText = nls.localize('alertErrorMessage', \"Error: {0}\", this.message.content);\n    } else if (this.message.type === 2 /* MessageType.WARNING */) {\n      alertText = nls.localize('alertWarningMessage', \"Warning: {0}\", this.message.content);\n    } else {\n      alertText = nls.localize('alertInfoMessage', \"Info: {0}\", this.message.content);\n    }\n    aria.alert(alertText);\n    this.state = 'open';\n  }\n  _hideMessage() {\n    if (!this.contextViewProvider) {\n      return;\n    }\n    if (this.state === 'open') {\n      this.contextViewProvider.hideContextView();\n    }\n    this.state = 'idle';\n  }\n  onValueChange() {\n    this._onDidChange.fire(this.value);\n    this.validate();\n    this.updateMirror();\n    this.input.classList.toggle('empty', !this.value);\n    if (this.state === 'open' && this.contextViewProvider) {\n      this.contextViewProvider.layout();\n    }\n  }\n  updateMirror() {\n    if (!this.mirror) {\n      return;\n    }\n    const value = this.value;\n    const lastCharCode = value.charCodeAt(value.length - 1);\n    const suffix = lastCharCode === 10 ? ' ' : '';\n    const mirrorTextContent = (value + suffix).replace(/\\u000c/g, ''); // Don't measure with the form feed character, which messes up sizing\n    if (mirrorTextContent) {\n      this.mirror.textContent = value + suffix;\n    } else {\n      this.mirror.innerText = '\\u00a0';\n    }\n    this.layout();\n  }\n  style(styles) {\n    this.inputBackground = styles.inputBackground;\n    this.inputForeground = styles.inputForeground;\n    this.inputBorder = styles.inputBorder;\n    this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n    this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n    this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n    this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n    this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n    this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n    this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n    this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n    this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n    this.applyStyles();\n  }\n  applyStyles() {\n    const background = this.inputBackground ? this.inputBackground.toString() : '';\n    const foreground = this.inputForeground ? this.inputForeground.toString() : '';\n    const border = this.inputBorder ? this.inputBorder.toString() : '';\n    this.element.style.backgroundColor = background;\n    this.element.style.color = foreground;\n    this.input.style.backgroundColor = 'inherit';\n    this.input.style.color = foreground;\n    this.element.style.borderWidth = border ? '1px' : '';\n    this.element.style.borderStyle = border ? 'solid' : '';\n    this.element.style.borderColor = border;\n  }\n  layout() {\n    if (!this.mirror) {\n      return;\n    }\n    const previousHeight = this.cachedContentHeight;\n    this.cachedContentHeight = dom.getTotalHeight(this.mirror);\n    if (previousHeight !== this.cachedContentHeight) {\n      this.cachedHeight = Math.min(this.cachedContentHeight, this.maxHeight);\n      this.input.style.height = this.cachedHeight + 'px';\n      this._onDidHeightChange.fire(this.cachedContentHeight);\n    }\n  }\n  insertAtCursor(text) {\n    const inputElement = this.inputElement;\n    const start = inputElement.selectionStart;\n    const end = inputElement.selectionEnd;\n    const content = inputElement.value;\n    if (start !== null && end !== null) {\n      this.value = content.substr(0, start) + text + content.substr(end);\n      inputElement.setSelectionRange(start + 1, start + 1);\n      this.layout();\n    }\n  }\n  dispose() {\n    this._hideMessage();\n    this.message = null;\n    if (this.actionbar) {\n      this.actionbar.dispose();\n    }\n    super.dispose();\n  }\n}\nexport class HistoryInputBox extends InputBox {\n  constructor(container, contextViewProvider, options) {\n    const NLS_PLACEHOLDER_HISTORY_HINT = nls.localize({\n      key: 'history.inputbox.hint',\n      comment: ['Text will be prefixed with \\u21C5 plus a single space, then used as a hint where input field keeps history']\n    }, \"for history\");\n    const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX = ` or \\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT}`;\n    const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS = ` (\\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT})`;\n    super(container, contextViewProvider, options);\n    this._onDidFocus = this._register(new Emitter());\n    this.onDidFocus = this._onDidFocus.event;\n    this._onDidBlur = this._register(new Emitter());\n    this.onDidBlur = this._onDidBlur.event;\n    this.history = new HistoryNavigator(options.history, 100);\n    // Function to append the history suffix to the placeholder if necessary\n    const addSuffix = () => {\n      if (options.showHistoryHint && options.showHistoryHint() && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX) && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS) && this.history.getHistory().length) {\n        const suffix = this.placeholder.endsWith(')') ? NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX : NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS;\n        const suffixedPlaceholder = this.placeholder + suffix;\n        if (options.showPlaceholderOnFocus && document.activeElement !== this.input) {\n          this.placeholder = suffixedPlaceholder;\n        } else {\n          this.setPlaceHolder(suffixedPlaceholder);\n        }\n      }\n    };\n    // Spot the change to the textarea class attribute which occurs when it changes between non-empty and empty,\n    // and add the history suffix to the placeholder if not yet present\n    this.observer = new MutationObserver((mutationList, observer) => {\n      mutationList.forEach(mutation => {\n        if (!mutation.target.textContent) {\n          addSuffix();\n        }\n      });\n    });\n    this.observer.observe(this.input, {\n      attributeFilter: ['class']\n    });\n    this.onfocus(this.input, () => addSuffix());\n    this.onblur(this.input, () => {\n      const resetPlaceholder = historyHint => {\n        if (!this.placeholder.endsWith(historyHint)) {\n          return false;\n        } else {\n          const revertedPlaceholder = this.placeholder.slice(0, this.placeholder.length - historyHint.length);\n          if (options.showPlaceholderOnFocus) {\n            this.placeholder = revertedPlaceholder;\n          } else {\n            this.setPlaceHolder(revertedPlaceholder);\n          }\n          return true;\n        }\n      };\n      if (!resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS)) {\n        resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX);\n      }\n    });\n  }\n  dispose() {\n    super.dispose();\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = undefined;\n    }\n  }\n  addToHistory() {\n    if (this.value && this.value !== this.getCurrentValue()) {\n      this.history.add(this.value);\n    }\n  }\n  showNextValue() {\n    if (!this.history.has(this.value)) {\n      this.addToHistory();\n    }\n    let next = this.getNextValue();\n    if (next) {\n      next = next === this.value ? this.getNextValue() : next;\n    }\n    if (next) {\n      this.value = next;\n      aria.status(this.value);\n    }\n  }\n  showPreviousValue() {\n    if (!this.history.has(this.value)) {\n      this.addToHistory();\n    }\n    let previous = this.getPreviousValue();\n    if (previous) {\n      previous = previous === this.value ? this.getPreviousValue() : previous;\n    }\n    if (previous) {\n      this.value = previous;\n      aria.status(this.value);\n    }\n  }\n  onBlur() {\n    super.onBlur();\n    this._onDidBlur.fire();\n  }\n  onFocus() {\n    super.onFocus();\n    this._onDidFocus.fire();\n  }\n  getCurrentValue() {\n    let currentValue = this.history.current();\n    if (!currentValue) {\n      currentValue = this.history.last();\n      this.history.next();\n    }\n    return currentValue;\n  }\n  getPreviousValue() {\n    return this.history.previous() || this.history.first();\n  }\n  getNextValue() {\n    return this.history.next() || this.history.last();\n  }\n}","map":{"version":3,"names":["dom","DomEmitter","renderFormattedText","renderText","ActionBar","aria","ScrollableElement","Widget","Color","Emitter","Event","HistoryNavigator","mixin","nls","$","defaultOpts","inputBackground","fromHex","inputForeground","inputValidationInfoBorder","inputValidationInfoBackground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationErrorBorder","inputValidationErrorBackground","InputBox","constructor","container","contextViewProvider","options","_a","state","maxHeight","Number","POSITIVE_INFINITY","_onDidChange","_register","onDidChange","event","_onDidHeightChange","onDidHeightChange","Object","create","message","placeholder","tooltip","ariaLabel","inputBorder","inputValidationInfoForeground","inputValidationWarningForeground","inputValidationErrorForeground","validationOptions","validation","element","append","tagName","flexibleHeight","wrapper","input","setAttribute","onfocus","classList","add","onblur","remove","flexibleMaxHeight","mirror","innerText","scrollableElement","vertical","flexibleWidth","style","whiteSpace","wordWrap","getDomNode","onScroll","e","scrollTop","onSelectionChange","document","onAnchoredSelectionChange","filter","selection","getSelection","anchorNode","updateScrollDimensions","type","showPlaceholderOnFocus","setPlaceHolder","setTooltip","oninput","onValueChange","onBlur","onFocus","ignoreGesture","setTimeout","updateMirror","actions","actionbar","push","icon","label","applyStyles","_hideMessage","_showMessage","placeHolder","title","setAriaLabel","removeAttribute","getAriaLabel","inputElement","value","newValue","height","cachedHeight","getTotalHeight","focus","blur","hasFocus","activeElement","select","range","setSelectionRange","start","end","length","scrollLeft","scrollWidth","isSelectionAtEnd","selectionEnd","selectionStart","enable","disable","disabled","width","getTotalWidth","horizontalPadding","paddingLeft","parseFloat","paddingRight","cachedContentHeight","scrollHeight","setScrollDimensions","setScrollPosition","showMessage","force","classForType","styles","stylesForType","border","hideMessage","validate","errorMsg","hasAttribute","background","foreground","div","layout","showContextView","getAnchor","anchorAlignment","render","renderOptions","inline","className","spanElement","formatContent","content","backgroundColor","toString","color","onHide","alertText","localize","alert","hideContextView","fire","toggle","lastCharCode","charCodeAt","suffix","mirrorTextContent","replace","textContent","borderWidth","borderStyle","borderColor","previousHeight","Math","min","insertAtCursor","text","substr","dispose","HistoryInputBox","NLS_PLACEHOLDER_HISTORY_HINT","key","comment","NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX","NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","history","addSuffix","showHistoryHint","endsWith","getHistory","suffixedPlaceholder","observer","MutationObserver","mutationList","forEach","mutation","target","observe","attributeFilter","resetPlaceholder","historyHint","revertedPlaceholder","slice","disconnect","undefined","addToHistory","getCurrentValue","showNextValue","has","next","getNextValue","status","showPreviousValue","previous","getPreviousValue","currentValue","current","last","first"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/browser/ui/inputbox/inputBox.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { renderFormattedText, renderText } from '../../formattedTextRenderer.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport * as aria from '../aria/aria.js';\nimport { ScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { Widget } from '../widget.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { HistoryNavigator } from '../../../common/history.js';\nimport { mixin } from '../../../common/objects.js';\nimport './inputBox.css';\nimport * as nls from '../../../../nls.js';\nconst $ = dom.$;\nconst defaultOpts = {\n    inputBackground: Color.fromHex('#3C3C3C'),\n    inputForeground: Color.fromHex('#CCCCCC'),\n    inputValidationInfoBorder: Color.fromHex('#55AAFF'),\n    inputValidationInfoBackground: Color.fromHex('#063B49'),\n    inputValidationWarningBorder: Color.fromHex('#B89500'),\n    inputValidationWarningBackground: Color.fromHex('#352A05'),\n    inputValidationErrorBorder: Color.fromHex('#BE1100'),\n    inputValidationErrorBackground: Color.fromHex('#5A1D1D')\n};\nexport class InputBox extends Widget {\n    constructor(container, contextViewProvider, options) {\n        var _a;\n        super();\n        this.state = 'idle';\n        this.maxHeight = Number.POSITIVE_INFINITY;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._onDidHeightChange = this._register(new Emitter());\n        this.onDidHeightChange = this._onDidHeightChange.event;\n        this.contextViewProvider = contextViewProvider;\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOpts, false);\n        this.message = null;\n        this.placeholder = this.options.placeholder || '';\n        this.tooltip = (_a = this.options.tooltip) !== null && _a !== void 0 ? _a : (this.placeholder || '');\n        this.ariaLabel = this.options.ariaLabel || '';\n        this.inputBackground = this.options.inputBackground;\n        this.inputForeground = this.options.inputForeground;\n        this.inputBorder = this.options.inputBorder;\n        this.inputValidationInfoBorder = this.options.inputValidationInfoBorder;\n        this.inputValidationInfoBackground = this.options.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = this.options.inputValidationInfoForeground;\n        this.inputValidationWarningBorder = this.options.inputValidationWarningBorder;\n        this.inputValidationWarningBackground = this.options.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = this.options.inputValidationWarningForeground;\n        this.inputValidationErrorBorder = this.options.inputValidationErrorBorder;\n        this.inputValidationErrorBackground = this.options.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = this.options.inputValidationErrorForeground;\n        if (this.options.validationOptions) {\n            this.validation = this.options.validationOptions.validation;\n        }\n        this.element = dom.append(container, $('.monaco-inputbox.idle'));\n        const tagName = this.options.flexibleHeight ? 'textarea' : 'input';\n        const wrapper = dom.append(this.element, $('.ibwrapper'));\n        this.input = dom.append(wrapper, $(tagName + '.input.empty'));\n        this.input.setAttribute('autocorrect', 'off');\n        this.input.setAttribute('autocapitalize', 'off');\n        this.input.setAttribute('spellcheck', 'false');\n        this.onfocus(this.input, () => this.element.classList.add('synthetic-focus'));\n        this.onblur(this.input, () => this.element.classList.remove('synthetic-focus'));\n        if (this.options.flexibleHeight) {\n            this.maxHeight = typeof this.options.flexibleMaxHeight === 'number' ? this.options.flexibleMaxHeight : Number.POSITIVE_INFINITY;\n            this.mirror = dom.append(wrapper, $('div.mirror'));\n            this.mirror.innerText = '\\u00a0';\n            this.scrollableElement = new ScrollableElement(this.element, { vertical: 1 /* ScrollbarVisibility.Auto */ });\n            if (this.options.flexibleWidth) {\n                this.input.setAttribute('wrap', 'off');\n                this.mirror.style.whiteSpace = 'pre';\n                this.mirror.style.wordWrap = 'initial';\n            }\n            dom.append(container, this.scrollableElement.getDomNode());\n            this._register(this.scrollableElement);\n            // from ScrollableElement to DOM\n            this._register(this.scrollableElement.onScroll(e => this.input.scrollTop = e.scrollTop));\n            const onSelectionChange = this._register(new DomEmitter(document, 'selectionchange'));\n            const onAnchoredSelectionChange = Event.filter(onSelectionChange.event, () => {\n                const selection = document.getSelection();\n                return (selection === null || selection === void 0 ? void 0 : selection.anchorNode) === wrapper;\n            });\n            // from DOM to ScrollableElement\n            this._register(onAnchoredSelectionChange(this.updateScrollDimensions, this));\n            this._register(this.onDidHeightChange(this.updateScrollDimensions, this));\n        }\n        else {\n            this.input.type = this.options.type || 'text';\n            this.input.setAttribute('wrap', 'off');\n        }\n        if (this.ariaLabel) {\n            this.input.setAttribute('aria-label', this.ariaLabel);\n        }\n        if (this.placeholder && !this.options.showPlaceholderOnFocus) {\n            this.setPlaceHolder(this.placeholder);\n        }\n        if (this.tooltip) {\n            this.setTooltip(this.tooltip);\n        }\n        this.oninput(this.input, () => this.onValueChange());\n        this.onblur(this.input, () => this.onBlur());\n        this.onfocus(this.input, () => this.onFocus());\n        this.ignoreGesture(this.input);\n        setTimeout(() => this.updateMirror(), 0);\n        // Support actions\n        if (this.options.actions) {\n            this.actionbar = this._register(new ActionBar(this.element));\n            this.actionbar.push(this.options.actions, { icon: true, label: false });\n        }\n        this.applyStyles();\n    }\n    onBlur() {\n        this._hideMessage();\n        if (this.options.showPlaceholderOnFocus) {\n            this.input.setAttribute('placeholder', '');\n        }\n    }\n    onFocus() {\n        this._showMessage();\n        if (this.options.showPlaceholderOnFocus) {\n            this.input.setAttribute('placeholder', this.placeholder || '');\n        }\n    }\n    setPlaceHolder(placeHolder) {\n        this.placeholder = placeHolder;\n        this.input.setAttribute('placeholder', placeHolder);\n    }\n    setTooltip(tooltip) {\n        this.tooltip = tooltip;\n        this.input.title = tooltip;\n    }\n    setAriaLabel(label) {\n        this.ariaLabel = label;\n        if (label) {\n            this.input.setAttribute('aria-label', this.ariaLabel);\n        }\n        else {\n            this.input.removeAttribute('aria-label');\n        }\n    }\n    getAriaLabel() {\n        return this.ariaLabel;\n    }\n    get inputElement() {\n        return this.input;\n    }\n    get value() {\n        return this.input.value;\n    }\n    set value(newValue) {\n        if (this.input.value !== newValue) {\n            this.input.value = newValue;\n            this.onValueChange();\n        }\n    }\n    get height() {\n        return typeof this.cachedHeight === 'number' ? this.cachedHeight : dom.getTotalHeight(this.element);\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    hasFocus() {\n        return document.activeElement === this.input;\n    }\n    select(range = null) {\n        this.input.select();\n        if (range) {\n            this.input.setSelectionRange(range.start, range.end);\n            if (range.end === this.input.value.length) {\n                this.input.scrollLeft = this.input.scrollWidth;\n            }\n        }\n    }\n    isSelectionAtEnd() {\n        return this.input.selectionEnd === this.input.value.length && this.input.selectionStart === this.input.selectionEnd;\n    }\n    enable() {\n        this.input.removeAttribute('disabled');\n    }\n    disable() {\n        this.blur();\n        this.input.disabled = true;\n        this._hideMessage();\n    }\n    get width() {\n        return dom.getTotalWidth(this.input);\n    }\n    set width(width) {\n        if (this.options.flexibleHeight && this.options.flexibleWidth) {\n            // textarea with horizontal scrolling\n            let horizontalPadding = 0;\n            if (this.mirror) {\n                const paddingLeft = parseFloat(this.mirror.style.paddingLeft || '') || 0;\n                const paddingRight = parseFloat(this.mirror.style.paddingRight || '') || 0;\n                horizontalPadding = paddingLeft + paddingRight;\n            }\n            this.input.style.width = (width - horizontalPadding) + 'px';\n        }\n        else {\n            this.input.style.width = width + 'px';\n        }\n        if (this.mirror) {\n            this.mirror.style.width = width + 'px';\n        }\n    }\n    set paddingRight(paddingRight) {\n        // Set width to avoid hint text overlapping buttons\n        this.input.style.width = `calc(100% - ${paddingRight}px)`;\n        if (this.mirror) {\n            this.mirror.style.paddingRight = paddingRight + 'px';\n        }\n    }\n    updateScrollDimensions() {\n        if (typeof this.cachedContentHeight !== 'number' || typeof this.cachedHeight !== 'number' || !this.scrollableElement) {\n            return;\n        }\n        const scrollHeight = this.cachedContentHeight;\n        const height = this.cachedHeight;\n        const scrollTop = this.input.scrollTop;\n        this.scrollableElement.setScrollDimensions({ scrollHeight, height });\n        this.scrollableElement.setScrollPosition({ scrollTop });\n    }\n    showMessage(message, force) {\n        this.message = message;\n        this.element.classList.remove('idle');\n        this.element.classList.remove('info');\n        this.element.classList.remove('warning');\n        this.element.classList.remove('error');\n        this.element.classList.add(this.classForType(message.type));\n        const styles = this.stylesForType(this.message.type);\n        this.element.style.border = styles.border ? `1px solid ${styles.border}` : '';\n        if (this.hasFocus() || force) {\n            this._showMessage();\n        }\n    }\n    hideMessage() {\n        this.message = null;\n        this.element.classList.remove('info');\n        this.element.classList.remove('warning');\n        this.element.classList.remove('error');\n        this.element.classList.add('idle');\n        this._hideMessage();\n        this.applyStyles();\n    }\n    validate() {\n        let errorMsg = null;\n        if (this.validation) {\n            errorMsg = this.validation(this.value);\n            if (errorMsg) {\n                this.inputElement.setAttribute('aria-invalid', 'true');\n                this.showMessage(errorMsg);\n            }\n            else if (this.inputElement.hasAttribute('aria-invalid')) {\n                this.inputElement.removeAttribute('aria-invalid');\n                this.hideMessage();\n            }\n        }\n        return errorMsg === null || errorMsg === void 0 ? void 0 : errorMsg.type;\n    }\n    stylesForType(type) {\n        switch (type) {\n            case 1 /* MessageType.INFO */: return { border: this.inputValidationInfoBorder, background: this.inputValidationInfoBackground, foreground: this.inputValidationInfoForeground };\n            case 2 /* MessageType.WARNING */: return { border: this.inputValidationWarningBorder, background: this.inputValidationWarningBackground, foreground: this.inputValidationWarningForeground };\n            default: return { border: this.inputValidationErrorBorder, background: this.inputValidationErrorBackground, foreground: this.inputValidationErrorForeground };\n        }\n    }\n    classForType(type) {\n        switch (type) {\n            case 1 /* MessageType.INFO */: return 'info';\n            case 2 /* MessageType.WARNING */: return 'warning';\n            default: return 'error';\n        }\n    }\n    _showMessage() {\n        if (!this.contextViewProvider || !this.message) {\n            return;\n        }\n        let div;\n        const layout = () => div.style.width = dom.getTotalWidth(this.element) + 'px';\n        this.contextViewProvider.showContextView({\n            getAnchor: () => this.element,\n            anchorAlignment: 1 /* AnchorAlignment.RIGHT */,\n            render: (container) => {\n                if (!this.message) {\n                    return null;\n                }\n                div = dom.append(container, $('.monaco-inputbox-container'));\n                layout();\n                const renderOptions = {\n                    inline: true,\n                    className: 'monaco-inputbox-message'\n                };\n                const spanElement = (this.message.formatContent\n                    ? renderFormattedText(this.message.content, renderOptions)\n                    : renderText(this.message.content, renderOptions));\n                spanElement.classList.add(this.classForType(this.message.type));\n                const styles = this.stylesForType(this.message.type);\n                spanElement.style.backgroundColor = styles.background ? styles.background.toString() : '';\n                spanElement.style.color = styles.foreground ? styles.foreground.toString() : '';\n                spanElement.style.border = styles.border ? `1px solid ${styles.border}` : '';\n                dom.append(div, spanElement);\n                return null;\n            },\n            onHide: () => {\n                this.state = 'closed';\n            },\n            layout: layout\n        });\n        // ARIA Support\n        let alertText;\n        if (this.message.type === 3 /* MessageType.ERROR */) {\n            alertText = nls.localize('alertErrorMessage', \"Error: {0}\", this.message.content);\n        }\n        else if (this.message.type === 2 /* MessageType.WARNING */) {\n            alertText = nls.localize('alertWarningMessage', \"Warning: {0}\", this.message.content);\n        }\n        else {\n            alertText = nls.localize('alertInfoMessage', \"Info: {0}\", this.message.content);\n        }\n        aria.alert(alertText);\n        this.state = 'open';\n    }\n    _hideMessage() {\n        if (!this.contextViewProvider) {\n            return;\n        }\n        if (this.state === 'open') {\n            this.contextViewProvider.hideContextView();\n        }\n        this.state = 'idle';\n    }\n    onValueChange() {\n        this._onDidChange.fire(this.value);\n        this.validate();\n        this.updateMirror();\n        this.input.classList.toggle('empty', !this.value);\n        if (this.state === 'open' && this.contextViewProvider) {\n            this.contextViewProvider.layout();\n        }\n    }\n    updateMirror() {\n        if (!this.mirror) {\n            return;\n        }\n        const value = this.value;\n        const lastCharCode = value.charCodeAt(value.length - 1);\n        const suffix = lastCharCode === 10 ? ' ' : '';\n        const mirrorTextContent = (value + suffix)\n            .replace(/\\u000c/g, ''); // Don't measure with the form feed character, which messes up sizing\n        if (mirrorTextContent) {\n            this.mirror.textContent = value + suffix;\n        }\n        else {\n            this.mirror.innerText = '\\u00a0';\n        }\n        this.layout();\n    }\n    style(styles) {\n        this.inputBackground = styles.inputBackground;\n        this.inputForeground = styles.inputForeground;\n        this.inputBorder = styles.inputBorder;\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        const background = this.inputBackground ? this.inputBackground.toString() : '';\n        const foreground = this.inputForeground ? this.inputForeground.toString() : '';\n        const border = this.inputBorder ? this.inputBorder.toString() : '';\n        this.element.style.backgroundColor = background;\n        this.element.style.color = foreground;\n        this.input.style.backgroundColor = 'inherit';\n        this.input.style.color = foreground;\n        this.element.style.borderWidth = border ? '1px' : '';\n        this.element.style.borderStyle = border ? 'solid' : '';\n        this.element.style.borderColor = border;\n    }\n    layout() {\n        if (!this.mirror) {\n            return;\n        }\n        const previousHeight = this.cachedContentHeight;\n        this.cachedContentHeight = dom.getTotalHeight(this.mirror);\n        if (previousHeight !== this.cachedContentHeight) {\n            this.cachedHeight = Math.min(this.cachedContentHeight, this.maxHeight);\n            this.input.style.height = this.cachedHeight + 'px';\n            this._onDidHeightChange.fire(this.cachedContentHeight);\n        }\n    }\n    insertAtCursor(text) {\n        const inputElement = this.inputElement;\n        const start = inputElement.selectionStart;\n        const end = inputElement.selectionEnd;\n        const content = inputElement.value;\n        if (start !== null && end !== null) {\n            this.value = content.substr(0, start) + text + content.substr(end);\n            inputElement.setSelectionRange(start + 1, start + 1);\n            this.layout();\n        }\n    }\n    dispose() {\n        this._hideMessage();\n        this.message = null;\n        if (this.actionbar) {\n            this.actionbar.dispose();\n        }\n        super.dispose();\n    }\n}\nexport class HistoryInputBox extends InputBox {\n    constructor(container, contextViewProvider, options) {\n        const NLS_PLACEHOLDER_HISTORY_HINT = nls.localize({ key: 'history.inputbox.hint', comment: ['Text will be prefixed with \\u21C5 plus a single space, then used as a hint where input field keeps history'] }, \"for history\");\n        const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX = ` or \\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT}`;\n        const NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS = ` (\\u21C5 ${NLS_PLACEHOLDER_HISTORY_HINT})`;\n        super(container, contextViewProvider, options);\n        this._onDidFocus = this._register(new Emitter());\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = this._register(new Emitter());\n        this.onDidBlur = this._onDidBlur.event;\n        this.history = new HistoryNavigator(options.history, 100);\n        // Function to append the history suffix to the placeholder if necessary\n        const addSuffix = () => {\n            if (options.showHistoryHint && options.showHistoryHint() && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX) && !this.placeholder.endsWith(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS) && this.history.getHistory().length) {\n                const suffix = this.placeholder.endsWith(')') ? NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX : NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS;\n                const suffixedPlaceholder = this.placeholder + suffix;\n                if (options.showPlaceholderOnFocus && document.activeElement !== this.input) {\n                    this.placeholder = suffixedPlaceholder;\n                }\n                else {\n                    this.setPlaceHolder(suffixedPlaceholder);\n                }\n            }\n        };\n        // Spot the change to the textarea class attribute which occurs when it changes between non-empty and empty,\n        // and add the history suffix to the placeholder if not yet present\n        this.observer = new MutationObserver((mutationList, observer) => {\n            mutationList.forEach((mutation) => {\n                if (!mutation.target.textContent) {\n                    addSuffix();\n                }\n            });\n        });\n        this.observer.observe(this.input, { attributeFilter: ['class'] });\n        this.onfocus(this.input, () => addSuffix());\n        this.onblur(this.input, () => {\n            const resetPlaceholder = (historyHint) => {\n                if (!this.placeholder.endsWith(historyHint)) {\n                    return false;\n                }\n                else {\n                    const revertedPlaceholder = this.placeholder.slice(0, this.placeholder.length - historyHint.length);\n                    if (options.showPlaceholderOnFocus) {\n                        this.placeholder = revertedPlaceholder;\n                    }\n                    else {\n                        this.setPlaceHolder(revertedPlaceholder);\n                    }\n                    return true;\n                }\n            };\n            if (!resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX_IN_PARENS)) {\n                resetPlaceholder(NLS_PLACEHOLDER_HISTORY_HINT_SUFFIX);\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this.observer) {\n            this.observer.disconnect();\n            this.observer = undefined;\n        }\n    }\n    addToHistory() {\n        if (this.value && this.value !== this.getCurrentValue()) {\n            this.history.add(this.value);\n        }\n    }\n    showNextValue() {\n        if (!this.history.has(this.value)) {\n            this.addToHistory();\n        }\n        let next = this.getNextValue();\n        if (next) {\n            next = next === this.value ? this.getNextValue() : next;\n        }\n        if (next) {\n            this.value = next;\n            aria.status(this.value);\n        }\n    }\n    showPreviousValue() {\n        if (!this.history.has(this.value)) {\n            this.addToHistory();\n        }\n        let previous = this.getPreviousValue();\n        if (previous) {\n            previous = previous === this.value ? this.getPreviousValue() : previous;\n        }\n        if (previous) {\n            this.value = previous;\n            aria.status(this.value);\n        }\n    }\n    onBlur() {\n        super.onBlur();\n        this._onDidBlur.fire();\n    }\n    onFocus() {\n        super.onFocus();\n        this._onDidFocus.fire();\n    }\n    getCurrentValue() {\n        let currentValue = this.history.current();\n        if (!currentValue) {\n            currentValue = this.history.last();\n            this.history.next();\n        }\n        return currentValue;\n    }\n    getPreviousValue() {\n        return this.history.previous() || this.history.first();\n    }\n    getNextValue() {\n        return this.history.next() || this.history.last();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}