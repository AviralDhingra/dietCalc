{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { ThemeIcon } from '../../theme/common/themeService.js';\nexport function isIMenuItem(item) {\n  return item.command !== undefined;\n}\nexport class MenuId {\n  /**\n   * Create a new `MenuId` with the unique identifier. Will throw if a menu\n   * with the identifier already exists, use `MenuId.for(ident)` or a unique\n   * identifier\n   */\n  constructor(identifier) {\n    if (MenuId._instances.has(identifier)) {\n      throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n    }\n    MenuId._instances.set(identifier, this);\n    this.id = identifier;\n  }\n}\nMenuId._instances = new Map();\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\nMenuId.DebugCallStackContext = new MenuId('DebugCallStackContext');\nMenuId.DebugConsoleContext = new MenuId('DebugConsoleContext');\nMenuId.DebugVariablesContext = new MenuId('DebugVariablesContext');\nMenuId.DebugWatchContext = new MenuId('DebugWatchContext');\nMenuId.DebugToolBar = new MenuId('DebugToolBar');\nMenuId.DebugToolBarStop = new MenuId('DebugToolBarStop');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.SimpleEditorContext = new MenuId('SimpleEditorContext');\nMenuId.EditorContextCopy = new MenuId('EditorContextCopy');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.EditorContextShare = new MenuId('EditorContextShare');\nMenuId.EditorTitle = new MenuId('EditorTitle');\nMenuId.EditorTitleRun = new MenuId('EditorTitleRun');\nMenuId.EditorTitleContext = new MenuId('EditorTitleContext');\nMenuId.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\nMenuId.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\nMenuId.ExplorerContext = new MenuId('ExplorerContext');\nMenuId.ExtensionContext = new MenuId('ExtensionContext');\nMenuId.GlobalActivity = new MenuId('GlobalActivity');\nMenuId.CommandCenter = new MenuId('CommandCenter');\nMenuId.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\nMenuId.LayoutControlMenu = new MenuId('LayoutControlMenu');\nMenuId.MenubarMainMenu = new MenuId('MenubarMainMenu');\nMenuId.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\nMenuId.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarCopy = new MenuId('MenubarCopy');\nMenuId.MenubarFileMenu = new MenuId('MenubarFileMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\nMenuId.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\nMenuId.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\nMenuId.MenubarPanelAlignmentMenu = new MenuId('MenubarPanelAlignmentMenu');\nMenuId.MenubarPanelPositionMenu = new MenuId('MenubarPanelPositionMenu');\nMenuId.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\nMenuId.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nMenuId.MenubarShare = new MenuId('MenubarShare');\nMenuId.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\nMenuId.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\nMenuId.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\nMenuId.MenubarViewMenu = new MenuId('MenubarViewMenu');\nMenuId.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\nMenuId.OpenEditorsContext = new MenuId('OpenEditorsContext');\nMenuId.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\nMenuId.SCMChangeContext = new MenuId('SCMChangeContext');\nMenuId.SCMResourceContext = new MenuId('SCMResourceContext');\nMenuId.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\nMenuId.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\nMenuId.SCMSourceControl = new MenuId('SCMSourceControl');\nMenuId.SCMTitle = new MenuId('SCMTitle');\nMenuId.SearchContext = new MenuId('SearchContext');\nMenuId.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\nMenuId.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\nMenuId.TestItem = new MenuId('TestItem');\nMenuId.TestItemGutter = new MenuId('TestItemGutter');\nMenuId.TestPeekElement = new MenuId('TestPeekElement');\nMenuId.TestPeekTitle = new MenuId('TestPeekTitle');\nMenuId.TouchBarContext = new MenuId('TouchBarContext');\nMenuId.TitleBarContext = new MenuId('TitleBarContext');\nMenuId.TitleBarTitleContext = new MenuId('TitleBarTitleContext');\nMenuId.TunnelContext = new MenuId('TunnelContext');\nMenuId.TunnelPrivacy = new MenuId('TunnelPrivacy');\nMenuId.TunnelProtocol = new MenuId('TunnelProtocol');\nMenuId.TunnelPortInline = new MenuId('TunnelInline');\nMenuId.TunnelTitle = new MenuId('TunnelTitle');\nMenuId.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\nMenuId.TunnelOriginInline = new MenuId('TunnelOriginInline');\nMenuId.ViewItemContext = new MenuId('ViewItemContext');\nMenuId.ViewContainerTitle = new MenuId('ViewContainerTitle');\nMenuId.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\nMenuId.ViewTitle = new MenuId('ViewTitle');\nMenuId.ViewTitleContext = new MenuId('ViewTitleContext');\nMenuId.CommentThreadTitle = new MenuId('CommentThreadTitle');\nMenuId.CommentThreadActions = new MenuId('CommentThreadActions');\nMenuId.CommentTitle = new MenuId('CommentTitle');\nMenuId.CommentActions = new MenuId('CommentActions');\nMenuId.InteractiveToolbar = new MenuId('InteractiveToolbar');\nMenuId.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\nMenuId.InteractiveCellDelete = new MenuId('InteractiveCellDelete');\nMenuId.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\nMenuId.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\nMenuId.NotebookToolbar = new MenuId('NotebookToolbar');\nMenuId.NotebookCellTitle = new MenuId('NotebookCellTitle');\nMenuId.NotebookCellDelete = new MenuId('NotebookCellDelete');\nMenuId.NotebookCellInsert = new MenuId('NotebookCellInsert');\nMenuId.NotebookCellBetween = new MenuId('NotebookCellBetween');\nMenuId.NotebookCellListTop = new MenuId('NotebookCellTop');\nMenuId.NotebookCellExecute = new MenuId('NotebookCellExecute');\nMenuId.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\nMenuId.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\nMenuId.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\nMenuId.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\nMenuId.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\nMenuId.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\nMenuId.NotebookKernelSource = new MenuId('NotebookKernelSource');\nMenuId.BulkEditTitle = new MenuId('BulkEditTitle');\nMenuId.BulkEditContext = new MenuId('BulkEditContext');\nMenuId.TimelineItemContext = new MenuId('TimelineItemContext');\nMenuId.TimelineTitle = new MenuId('TimelineTitle');\nMenuId.TimelineTitleContext = new MenuId('TimelineTitleContext');\nMenuId.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\nMenuId.AccountsContext = new MenuId('AccountsContext');\nMenuId.PanelTitle = new MenuId('PanelTitle');\nMenuId.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\nMenuId.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\nMenuId.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\nMenuId.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\nMenuId.TerminalTabContext = new MenuId('TerminalTabContext');\nMenuId.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\nMenuId.TerminalInlineTabContext = new MenuId('TerminalInlineTabContext');\nMenuId.WebviewContext = new MenuId('WebviewContext');\nMenuId.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\nMenuId.NewFile = new MenuId('NewFile');\nMenuId.MergeToolbar = new MenuId('MergeToolbar');\nMenuId.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\nMenuId.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\nexport const IMenuService = createDecorator('menuService');\nexport const MenuRegistry = new class {\n  constructor() {\n    this._commands = new Map();\n    this._menuItems = new Map();\n    this._onDidChangeMenu = new Emitter();\n    this.onDidChangeMenu = this._onDidChangeMenu.event;\n    this._commandPaletteChangeEvent = {\n      has: id => id === MenuId.CommandPalette\n    };\n  }\n  addCommand(command) {\n    return this.addCommands(Iterable.single(command));\n  }\n  addCommands(commands) {\n    for (const command of commands) {\n      this._commands.set(command.id, command);\n    }\n    this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n    return toDisposable(() => {\n      let didChange = false;\n      for (const command of commands) {\n        didChange = this._commands.delete(command.id) || didChange;\n      }\n      if (didChange) {\n        this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n      }\n    });\n  }\n  getCommand(id) {\n    return this._commands.get(id);\n  }\n  getCommands() {\n    const map = new Map();\n    this._commands.forEach((value, key) => map.set(key, value));\n    return map;\n  }\n  appendMenuItem(id, item) {\n    return this.appendMenuItems(Iterable.single({\n      id,\n      item\n    }));\n  }\n  appendMenuItems(items) {\n    const changedIds = new Set();\n    const toRemove = new LinkedList();\n    for (const {\n      id,\n      item\n    } of items) {\n      let list = this._menuItems.get(id);\n      if (!list) {\n        list = new LinkedList();\n        this._menuItems.set(id, list);\n      }\n      toRemove.push(list.push(item));\n      changedIds.add(id);\n    }\n    this._onDidChangeMenu.fire(changedIds);\n    return toDisposable(() => {\n      if (toRemove.size > 0) {\n        for (const fn of toRemove) {\n          fn();\n        }\n        this._onDidChangeMenu.fire(changedIds);\n        toRemove.clear();\n      }\n    });\n  }\n  getMenuItems(id) {\n    let result;\n    if (this._menuItems.has(id)) {\n      result = [...this._menuItems.get(id)];\n    } else {\n      result = [];\n    }\n    if (id === MenuId.CommandPalette) {\n      // CommandPalette is special because it shows\n      // all commands by default\n      this._appendImplicitItems(result);\n    }\n    return result;\n  }\n  _appendImplicitItems(result) {\n    const set = new Set();\n    for (const item of result) {\n      if (isIMenuItem(item)) {\n        set.add(item.command.id);\n        if (item.alt) {\n          set.add(item.alt.id);\n        }\n      }\n    }\n    this._commands.forEach((command, id) => {\n      if (!set.has(id)) {\n        result.push({\n          command\n        });\n      }\n    });\n  }\n}();\nexport class SubmenuItemAction extends SubmenuAction {\n  constructor(item, _menuService, _contextKeyService, _options) {\n    super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, [], 'submenu');\n    this.item = item;\n    this._menuService = _menuService;\n    this._contextKeyService = _contextKeyService;\n    this._options = _options;\n  }\n  get actions() {\n    const result = [];\n    const menu = this._menuService.createMenu(this.item.submenu, this._contextKeyService);\n    const groups = menu.getActions(this._options);\n    menu.dispose();\n    for (const [, actions] of groups) {\n      if (actions.length > 0) {\n        result.push(...actions);\n        result.push(new Separator());\n      }\n    }\n    if (result.length) {\n      result.pop(); // remove last separator\n    }\n\n    return result;\n  }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = class MenuItemAction {\n  constructor(item, alt, options, hideActions, contextKeyService, _commandService) {\n    var _a, _b;\n    this.hideActions = hideActions;\n    this._commandService = _commandService;\n    this.id = item.id;\n    this.label = (options === null || options === void 0 ? void 0 : options.renderShortTitle) && item.shortTitle ? typeof item.shortTitle === 'string' ? item.shortTitle : item.shortTitle.value : typeof item.title === 'string' ? item.title : item.title.value;\n    this.tooltip = (_b = typeof item.tooltip === 'string' ? item.tooltip : (_a = item.tooltip) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : '';\n    this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n    this.checked = undefined;\n    if (item.toggled) {\n      const toggled = item.toggled.condition ? item.toggled : {\n        condition: item.toggled\n      };\n      this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n      if (this.checked && toggled.tooltip) {\n        this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n      }\n      if (toggled.title) {\n        this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n      }\n    }\n    this.item = item;\n    this.alt = alt ? new MenuItemAction(alt, undefined, options, hideActions, contextKeyService, _commandService) : undefined;\n    this._options = options;\n    if (ThemeIcon.isThemeIcon(item.icon)) {\n      this.class = CSSIcon.asClassName(item.icon);\n    }\n  }\n  dispose() {\n    // there is NOTHING to dispose and the MenuItemAction should\n    // never have anything to dispose as it is a convenience type\n    // to bridge into the rendering world.\n  }\n  run() {\n    var _a, _b;\n    let runArgs = [];\n    if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n      runArgs = [...runArgs, this._options.arg];\n    }\n    if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      runArgs = [...runArgs, ...args];\n    }\n    return this._commandService.executeCommand(this.id, ...runArgs);\n  }\n};\nMenuItemAction = __decorate([__param(4, IContextKeyService), __param(5, ICommandService)], MenuItemAction);\nexport { MenuItemAction };\n//#endregion","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Separator","SubmenuAction","CSSIcon","Emitter","Iterable","toDisposable","LinkedList","ICommandService","IContextKeyService","createDecorator","ThemeIcon","isIMenuItem","item","command","undefined","MenuId","constructor","identifier","_instances","has","TypeError","set","id","Map","CommandPalette","DebugBreakpointsContext","DebugCallStackContext","DebugConsoleContext","DebugVariablesContext","DebugWatchContext","DebugToolBar","DebugToolBarStop","EditorContext","SimpleEditorContext","EditorContextCopy","EditorContextPeek","EditorContextShare","EditorTitle","EditorTitleRun","EditorTitleContext","EmptyEditorGroup","EmptyEditorGroupContext","ExplorerContext","ExtensionContext","GlobalActivity","CommandCenter","LayoutControlMenuSubmenu","LayoutControlMenu","MenubarMainMenu","MenubarAppearanceMenu","MenubarDebugMenu","MenubarEditMenu","MenubarCopy","MenubarFileMenu","MenubarGoMenu","MenubarHelpMenu","MenubarLayoutMenu","MenubarNewBreakpointMenu","MenubarPanelAlignmentMenu","MenubarPanelPositionMenu","MenubarPreferencesMenu","MenubarRecentMenu","MenubarSelectionMenu","MenubarShare","MenubarSwitchEditorMenu","MenubarSwitchGroupMenu","MenubarTerminalMenu","MenubarViewMenu","MenubarHomeMenu","OpenEditorsContext","ProblemsPanelContext","SCMChangeContext","SCMResourceContext","SCMResourceFolderContext","SCMResourceGroupContext","SCMSourceControl","SCMTitle","SearchContext","StatusBarWindowIndicatorMenu","StatusBarRemoteIndicatorMenu","TestItem","TestItemGutter","TestPeekElement","TestPeekTitle","TouchBarContext","TitleBarContext","TitleBarTitleContext","TunnelContext","TunnelPrivacy","TunnelProtocol","TunnelPortInline","TunnelTitle","TunnelLocalAddressInline","TunnelOriginInline","ViewItemContext","ViewContainerTitle","ViewContainerTitleContext","ViewTitle","ViewTitleContext","CommentThreadTitle","CommentThreadActions","CommentTitle","CommentActions","InteractiveToolbar","InteractiveCellTitle","InteractiveCellDelete","InteractiveCellExecute","InteractiveInputExecute","NotebookToolbar","NotebookCellTitle","NotebookCellDelete","NotebookCellInsert","NotebookCellBetween","NotebookCellListTop","NotebookCellExecute","NotebookCellExecutePrimary","NotebookDiffCellInputTitle","NotebookDiffCellMetadataTitle","NotebookDiffCellOutputsTitle","NotebookOutputToolbar","NotebookEditorLayoutConfigure","NotebookKernelSource","BulkEditTitle","BulkEditContext","TimelineItemContext","TimelineTitle","TimelineTitleContext","TimelineFilterSubMenu","AccountsContext","PanelTitle","AuxiliaryBarTitle","TerminalInstanceContext","TerminalEditorInstanceContext","TerminalNewDropdownContext","TerminalTabContext","TerminalTabEmptyAreaContext","TerminalInlineTabContext","WebviewContext","InlineCompletionsActions","NewFile","MergeToolbar","MergeInput1Toolbar","MergeInput2Toolbar","IMenuService","MenuRegistry","_commands","_menuItems","_onDidChangeMenu","onDidChangeMenu","event","_commandPaletteChangeEvent","addCommand","addCommands","single","commands","fire","didChange","delete","getCommand","get","getCommands","map","forEach","value","appendMenuItem","appendMenuItems","items","changedIds","Set","toRemove","list","push","add","size","fn","clear","getMenuItems","result","_appendImplicitItems","alt","SubmenuItemAction","_menuService","_contextKeyService","_options","submenu","title","actions","menu","createMenu","groups","getActions","dispose","pop","MenuItemAction","options","hideActions","contextKeyService","_commandService","_a","_b","label","renderShortTitle","shortTitle","tooltip","enabled","precondition","contextMatchesRules","checked","toggled","condition","isThemeIcon","icon","class","asClassName","run","runArgs","arg","shouldForwardArgs","args","executeCommand"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { ThemeIcon } from '../../theme/common/themeService.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport class MenuId {\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nMenuId._instances = new Map();\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\nMenuId.DebugCallStackContext = new MenuId('DebugCallStackContext');\nMenuId.DebugConsoleContext = new MenuId('DebugConsoleContext');\nMenuId.DebugVariablesContext = new MenuId('DebugVariablesContext');\nMenuId.DebugWatchContext = new MenuId('DebugWatchContext');\nMenuId.DebugToolBar = new MenuId('DebugToolBar');\nMenuId.DebugToolBarStop = new MenuId('DebugToolBarStop');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.SimpleEditorContext = new MenuId('SimpleEditorContext');\nMenuId.EditorContextCopy = new MenuId('EditorContextCopy');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.EditorContextShare = new MenuId('EditorContextShare');\nMenuId.EditorTitle = new MenuId('EditorTitle');\nMenuId.EditorTitleRun = new MenuId('EditorTitleRun');\nMenuId.EditorTitleContext = new MenuId('EditorTitleContext');\nMenuId.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\nMenuId.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\nMenuId.ExplorerContext = new MenuId('ExplorerContext');\nMenuId.ExtensionContext = new MenuId('ExtensionContext');\nMenuId.GlobalActivity = new MenuId('GlobalActivity');\nMenuId.CommandCenter = new MenuId('CommandCenter');\nMenuId.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\nMenuId.LayoutControlMenu = new MenuId('LayoutControlMenu');\nMenuId.MenubarMainMenu = new MenuId('MenubarMainMenu');\nMenuId.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\nMenuId.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarCopy = new MenuId('MenubarCopy');\nMenuId.MenubarFileMenu = new MenuId('MenubarFileMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\nMenuId.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\nMenuId.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\nMenuId.MenubarPanelAlignmentMenu = new MenuId('MenubarPanelAlignmentMenu');\nMenuId.MenubarPanelPositionMenu = new MenuId('MenubarPanelPositionMenu');\nMenuId.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\nMenuId.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nMenuId.MenubarShare = new MenuId('MenubarShare');\nMenuId.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\nMenuId.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\nMenuId.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\nMenuId.MenubarViewMenu = new MenuId('MenubarViewMenu');\nMenuId.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\nMenuId.OpenEditorsContext = new MenuId('OpenEditorsContext');\nMenuId.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\nMenuId.SCMChangeContext = new MenuId('SCMChangeContext');\nMenuId.SCMResourceContext = new MenuId('SCMResourceContext');\nMenuId.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\nMenuId.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\nMenuId.SCMSourceControl = new MenuId('SCMSourceControl');\nMenuId.SCMTitle = new MenuId('SCMTitle');\nMenuId.SearchContext = new MenuId('SearchContext');\nMenuId.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\nMenuId.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\nMenuId.TestItem = new MenuId('TestItem');\nMenuId.TestItemGutter = new MenuId('TestItemGutter');\nMenuId.TestPeekElement = new MenuId('TestPeekElement');\nMenuId.TestPeekTitle = new MenuId('TestPeekTitle');\nMenuId.TouchBarContext = new MenuId('TouchBarContext');\nMenuId.TitleBarContext = new MenuId('TitleBarContext');\nMenuId.TitleBarTitleContext = new MenuId('TitleBarTitleContext');\nMenuId.TunnelContext = new MenuId('TunnelContext');\nMenuId.TunnelPrivacy = new MenuId('TunnelPrivacy');\nMenuId.TunnelProtocol = new MenuId('TunnelProtocol');\nMenuId.TunnelPortInline = new MenuId('TunnelInline');\nMenuId.TunnelTitle = new MenuId('TunnelTitle');\nMenuId.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\nMenuId.TunnelOriginInline = new MenuId('TunnelOriginInline');\nMenuId.ViewItemContext = new MenuId('ViewItemContext');\nMenuId.ViewContainerTitle = new MenuId('ViewContainerTitle');\nMenuId.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\nMenuId.ViewTitle = new MenuId('ViewTitle');\nMenuId.ViewTitleContext = new MenuId('ViewTitleContext');\nMenuId.CommentThreadTitle = new MenuId('CommentThreadTitle');\nMenuId.CommentThreadActions = new MenuId('CommentThreadActions');\nMenuId.CommentTitle = new MenuId('CommentTitle');\nMenuId.CommentActions = new MenuId('CommentActions');\nMenuId.InteractiveToolbar = new MenuId('InteractiveToolbar');\nMenuId.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\nMenuId.InteractiveCellDelete = new MenuId('InteractiveCellDelete');\nMenuId.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\nMenuId.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\nMenuId.NotebookToolbar = new MenuId('NotebookToolbar');\nMenuId.NotebookCellTitle = new MenuId('NotebookCellTitle');\nMenuId.NotebookCellDelete = new MenuId('NotebookCellDelete');\nMenuId.NotebookCellInsert = new MenuId('NotebookCellInsert');\nMenuId.NotebookCellBetween = new MenuId('NotebookCellBetween');\nMenuId.NotebookCellListTop = new MenuId('NotebookCellTop');\nMenuId.NotebookCellExecute = new MenuId('NotebookCellExecute');\nMenuId.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\nMenuId.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\nMenuId.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\nMenuId.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\nMenuId.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\nMenuId.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\nMenuId.NotebookKernelSource = new MenuId('NotebookKernelSource');\nMenuId.BulkEditTitle = new MenuId('BulkEditTitle');\nMenuId.BulkEditContext = new MenuId('BulkEditContext');\nMenuId.TimelineItemContext = new MenuId('TimelineItemContext');\nMenuId.TimelineTitle = new MenuId('TimelineTitle');\nMenuId.TimelineTitleContext = new MenuId('TimelineTitleContext');\nMenuId.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\nMenuId.AccountsContext = new MenuId('AccountsContext');\nMenuId.PanelTitle = new MenuId('PanelTitle');\nMenuId.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\nMenuId.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\nMenuId.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\nMenuId.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\nMenuId.TerminalTabContext = new MenuId('TerminalTabContext');\nMenuId.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\nMenuId.TerminalInlineTabContext = new MenuId('TerminalInlineTabContext');\nMenuId.WebviewContext = new MenuId('WebviewContext');\nMenuId.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\nMenuId.NewFile = new MenuId('NewFile');\nMenuId.MergeToolbar = new MenuId('MergeToolbar');\nMenuId.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\nMenuId.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\nexport const IMenuService = createDecorator('menuService');\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new Emitter();\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n        this._commandPaletteChangeEvent = {\n            has: id => id === MenuId.CommandPalette\n        };\n    }\n    addCommand(command) {\n        return this.addCommands(Iterable.single(command));\n    }\n    addCommands(commands) {\n        for (const command of commands) {\n            this._commands.set(command.id, command);\n        }\n        this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n        return toDisposable(() => {\n            let didChange = false;\n            for (const command of commands) {\n                didChange = this._commands.delete(command.id) || didChange;\n            }\n            if (didChange) {\n                this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        return this.appendMenuItems(Iterable.single({ id, item }));\n    }\n    appendMenuItems(items) {\n        const changedIds = new Set();\n        const toRemove = new LinkedList();\n        for (const { id, item } of items) {\n            let list = this._menuItems.get(id);\n            if (!list) {\n                list = new LinkedList();\n                this._menuItems.set(id, list);\n            }\n            toRemove.push(list.push(item));\n            changedIds.add(id);\n        }\n        this._onDidChangeMenu.fire(changedIds);\n        return toDisposable(() => {\n            if (toRemove.size > 0) {\n                for (const fn of toRemove) {\n                    fn();\n                }\n                this._onDidChangeMenu.fire(changedIds);\n                toRemove.clear();\n            }\n        });\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, _menuService, _contextKeyService, _options) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, [], 'submenu');\n        this.item = item;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._options = _options;\n    }\n    get actions() {\n        const result = [];\n        const menu = this._menuService.createMenu(this.item.submenu, this._contextKeyService);\n        const groups = menu.getActions(this._options);\n        menu.dispose();\n        for (const [, actions] of groups) {\n            if (actions.length > 0) {\n                result.push(...actions);\n                result.push(new Separator());\n            }\n        }\n        if (result.length) {\n            result.pop(); // remove last separator\n        }\n        return result;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = class MenuItemAction {\n    constructor(item, alt, options, hideActions, contextKeyService, _commandService) {\n        var _a, _b;\n        this.hideActions = hideActions;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = (options === null || options === void 0 ? void 0 : options.renderShortTitle) && item.shortTitle\n            ? (typeof item.shortTitle === 'string' ? item.shortTitle : item.shortTitle.value)\n            : (typeof item.title === 'string' ? item.title : item.title.value);\n        this.tooltip = (_b = (typeof item.tooltip === 'string' ? item.tooltip : (_a = item.tooltip) === null || _a === void 0 ? void 0 : _a.value)) !== null && _b !== void 0 ? _b : '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction(alt, undefined, options, hideActions, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        if (ThemeIcon.isThemeIcon(item.icon)) {\n            this.class = CSSIcon.asClassName(item.icon);\n        }\n    }\n    dispose() {\n        // there is NOTHING to dispose and the MenuItemAction should\n        // never have anything to dispose as it is a convenience type\n        // to bridge into the rendering world.\n    }\n    run(...args) {\n        var _a, _b;\n        let runArgs = [];\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\n//#endregion\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}