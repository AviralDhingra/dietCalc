{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { GlyphMarginOverlay } from './viewParts/glyphMargin/glyphMargin.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { Range } from '../common/core/range.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nexport class View extends ViewEventHandler {\n  constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode) {\n    super();\n    this._selections = [new Selection(1, 1, 1, 1)];\n    this._renderAnimationFrame = null;\n    const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n    // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n    this._context = new ViewContext(configuration, colorTheme, model);\n    // Ensure the view is the first event handler in order to update the layout\n    this._context.addEventHandler(this);\n    this._viewParts = [];\n    // Keyboard handler\n    this._textAreaHandler = new TextAreaHandler(this._context, viewController, this._createTextAreaHandlerHelper());\n    this._viewParts.push(this._textAreaHandler);\n    // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n    this._linesContent = createFastDomNode(document.createElement('div'));\n    this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n    this._linesContent.setPosition('absolute');\n    this.domNode = createFastDomNode(document.createElement('div'));\n    this.domNode.setClassName(this._getEditorClassName());\n    // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n    this.domNode.setAttribute('role', 'code');\n    this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n    PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n    this._overflowGuardContainer.setClassName('overflow-guard');\n    this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n    this._viewParts.push(this._scrollbar);\n    // View Lines\n    this._viewLines = new ViewLines(this._context, this._linesContent);\n    // View Zones\n    this._viewZones = new ViewZones(this._context);\n    this._viewParts.push(this._viewZones);\n    // Decorations overview ruler\n    const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n    this._viewParts.push(decorationsOverviewRuler);\n    const scrollDecoration = new ScrollDecorationViewPart(this._context);\n    this._viewParts.push(scrollDecoration);\n    const contentViewOverlays = new ContentViewOverlays(this._context);\n    this._viewParts.push(contentViewOverlays);\n    contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n    contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n    const marginViewOverlays = new MarginViewOverlays(this._context);\n    this._viewParts.push(marginViewOverlays);\n    marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new GlyphMarginOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n    marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n    const margin = new Margin(this._context);\n    margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n    margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n    this._viewParts.push(margin);\n    // Content widgets\n    this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n    this._viewParts.push(this._contentWidgets);\n    this._viewCursors = new ViewCursors(this._context);\n    this._viewParts.push(this._viewCursors);\n    // Overlay widgets\n    this._overlayWidgets = new ViewOverlayWidgets(this._context);\n    this._viewParts.push(this._overlayWidgets);\n    const rulers = new Rulers(this._context);\n    this._viewParts.push(rulers);\n    const blockOutline = new BlockDecorations(this._context);\n    this._viewParts.push(blockOutline);\n    const minimap = new Minimap(this._context);\n    this._viewParts.push(minimap);\n    // -------------- Wire dom nodes up\n    if (decorationsOverviewRuler) {\n      const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n      overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n    }\n    this._linesContent.appendChild(contentViewOverlays.getDomNode());\n    this._linesContent.appendChild(rulers.domNode);\n    this._linesContent.appendChild(blockOutline.domNode);\n    this._linesContent.appendChild(this._viewZones.domNode);\n    this._linesContent.appendChild(this._viewLines.getDomNode());\n    this._linesContent.appendChild(this._contentWidgets.domNode);\n    this._linesContent.appendChild(this._viewCursors.getDomNode());\n    this._overflowGuardContainer.appendChild(margin.getDomNode());\n    this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n    this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n    this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n    this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n    this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n    this._overflowGuardContainer.appendChild(minimap.getDomNode());\n    this.domNode.appendChild(this._overflowGuardContainer);\n    if (overflowWidgetsDomNode) {\n      overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n    } else {\n      this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n    }\n    this._applyLayout();\n    // Pointer handler\n    this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n  }\n  _flushAccumulatedAndRenderNow() {\n    this._renderNow();\n  }\n  _createPointerHandlerHelper() {\n    return {\n      viewDomNode: this.domNode.domNode,\n      linesContentDomNode: this._linesContent.domNode,\n      viewLinesDomNode: this._viewLines.getDomNode().domNode,\n      focusTextArea: () => {\n        this.focus();\n      },\n      dispatchTextAreaEvent: event => {\n        this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n      },\n      getLastRenderData: () => {\n        const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n        const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n        return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n      },\n      shouldSuppressMouseDownOnViewZone: viewZoneId => {\n        return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n      },\n      shouldSuppressMouseDownOnWidget: widgetId => {\n        return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n      },\n      getPositionFromDOMInfo: (spanNode, offset) => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n      },\n      visibleRangeForPosition: (lineNumber, column) => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n      },\n      getLineWidth: lineNumber => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.getLineWidth(lineNumber);\n      }\n    };\n  }\n  _createTextAreaHandlerHelper() {\n    return {\n      visibleRangeForPosition: position => {\n        this._flushAccumulatedAndRenderNow();\n        return this._viewLines.visibleRangeForPosition(position);\n      }\n    };\n  }\n  _applyLayout() {\n    const options = this._context.configuration.options;\n    const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n    this.domNode.setWidth(layoutInfo.width);\n    this.domNode.setHeight(layoutInfo.height);\n    this._overflowGuardContainer.setWidth(layoutInfo.width);\n    this._overflowGuardContainer.setHeight(layoutInfo.height);\n    this._linesContent.setWidth(1000000);\n    this._linesContent.setHeight(1000000);\n  }\n  _getEditorClassName() {\n    const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n    return this._context.configuration.options.get(130 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n  }\n  // --- begin event handlers\n  handleEvents(events) {\n    super.handleEvents(events);\n    this._scheduleRender();\n  }\n  onConfigurationChanged(e) {\n    this.domNode.setClassName(this._getEditorClassName());\n    this._applyLayout();\n    return false;\n  }\n  onCursorStateChanged(e) {\n    this._selections = e.selections;\n    return false;\n  }\n  onFocusChanged(e) {\n    this.domNode.setClassName(this._getEditorClassName());\n    return false;\n  }\n  onThemeChanged(e) {\n    this._context.theme.update(e.theme);\n    this.domNode.setClassName(this._getEditorClassName());\n    return false;\n  }\n  // --- end event handlers\n  dispose() {\n    if (this._renderAnimationFrame !== null) {\n      this._renderAnimationFrame.dispose();\n      this._renderAnimationFrame = null;\n    }\n    this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n    this._context.removeEventHandler(this);\n    this._viewLines.dispose();\n    // Destroy view parts\n    for (const viewPart of this._viewParts) {\n      viewPart.dispose();\n    }\n    super.dispose();\n  }\n  _scheduleRender() {\n    if (this._renderAnimationFrame === null) {\n      this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n    }\n  }\n  _onRenderScheduled() {\n    this._renderAnimationFrame = null;\n    this._flushAccumulatedAndRenderNow();\n  }\n  _renderNow() {\n    safeInvokeNoArg(() => this._actualRender());\n  }\n  _getViewPartsToRender() {\n    const result = [];\n    let resultLen = 0;\n    for (const viewPart of this._viewParts) {\n      if (viewPart.shouldRender()) {\n        result[resultLen++] = viewPart;\n      }\n    }\n    return result;\n  }\n  _actualRender() {\n    if (!dom.isInDOM(this.domNode.domNode)) {\n      return;\n    }\n    let viewPartsToRender = this._getViewPartsToRender();\n    if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n      // Nothing to render\n      return;\n    }\n    const partialViewportData = this._context.viewLayout.getLinesViewportData();\n    this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n    const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n    if (this._contentWidgets.shouldRender()) {\n      // Give the content widgets a chance to set their max width before a possible synchronous layout\n      this._contentWidgets.onBeforeRender(viewportData);\n    }\n    if (this._viewLines.shouldRender()) {\n      this._viewLines.renderText(viewportData);\n      this._viewLines.onDidRender();\n      // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n      viewPartsToRender = this._getViewPartsToRender();\n    }\n    const renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines);\n    // Render the rest of the parts\n    for (const viewPart of viewPartsToRender) {\n      viewPart.prepareRender(renderingContext);\n    }\n    for (const viewPart of viewPartsToRender) {\n      viewPart.render(renderingContext);\n      viewPart.onDidRender();\n    }\n  }\n  // --- BEGIN CodeEditor helpers\n  delegateVerticalScrollbarPointerDown(browserEvent) {\n    this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n  }\n  restoreState(scrollPosition) {\n    this._context.viewModel.viewLayout.setScrollPosition({\n      scrollTop: scrollPosition.scrollTop\n    }, 1 /* ScrollType.Immediate */);\n    this._context.viewModel.tokenizeViewport();\n    this._renderNow();\n    this._viewLines.updateLineWidths();\n    this._context.viewModel.viewLayout.setScrollPosition({\n      scrollLeft: scrollPosition.scrollLeft\n    }, 1 /* ScrollType.Immediate */);\n  }\n\n  getOffsetForColumn(modelLineNumber, modelColumn) {\n    const modelPosition = this._context.viewModel.model.validatePosition({\n      lineNumber: modelLineNumber,\n      column: modelColumn\n    });\n    const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n    this._flushAccumulatedAndRenderNow();\n    const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n    if (!visibleRange) {\n      return -1;\n    }\n    return visibleRange.left;\n  }\n  getTargetAtClientPoint(clientX, clientY) {\n    const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n    if (!mouseTarget) {\n      return null;\n    }\n    return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n  }\n  createOverviewRuler(cssClassName) {\n    return new OverviewRuler(this._context, cssClassName);\n  }\n  change(callback) {\n    this._viewZones.changeViewZones(callback);\n    this._scheduleRender();\n  }\n  render(now, everything) {\n    if (everything) {\n      // Force everything to render...\n      this._viewLines.forceShouldRender();\n      for (const viewPart of this._viewParts) {\n        viewPart.forceShouldRender();\n      }\n    }\n    if (now) {\n      this._flushAccumulatedAndRenderNow();\n    } else {\n      this._scheduleRender();\n    }\n  }\n  focus() {\n    this._textAreaHandler.focusTextArea();\n  }\n  isFocused() {\n    return this._textAreaHandler.isFocused();\n  }\n  setAriaOptions(options) {\n    this._textAreaHandler.setAriaOptions(options);\n  }\n  addContentWidget(widgetData) {\n    this._contentWidgets.addWidget(widgetData.widget);\n    this.layoutContentWidget(widgetData);\n    this._scheduleRender();\n  }\n  layoutContentWidget(widgetData) {\n    var _a, _b;\n    let newRange = widgetData.position ? widgetData.position.range || null : null;\n    if (newRange === null) {\n      const newPosition = widgetData.position ? widgetData.position.position : null;\n      if (newPosition !== null) {\n        newRange = new Range(newPosition.lineNumber, newPosition.column, newPosition.lineNumber, newPosition.column);\n      }\n    }\n    const newPreference = widgetData.position ? widgetData.position.preference : null;\n    this._contentWidgets.setWidgetPosition(widgetData.widget, newRange, newPreference, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.positionAffinity) !== null && _b !== void 0 ? _b : null);\n    this._scheduleRender();\n  }\n  removeContentWidget(widgetData) {\n    this._contentWidgets.removeWidget(widgetData.widget);\n    this._scheduleRender();\n  }\n  addOverlayWidget(widgetData) {\n    this._overlayWidgets.addWidget(widgetData.widget);\n    this.layoutOverlayWidget(widgetData);\n    this._scheduleRender();\n  }\n  layoutOverlayWidget(widgetData) {\n    const newPreference = widgetData.position ? widgetData.position.preference : null;\n    const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n    if (shouldRender) {\n      this._scheduleRender();\n    }\n  }\n  removeOverlayWidget(widgetData) {\n    this._overlayWidgets.removeWidget(widgetData.widget);\n    this._scheduleRender();\n  }\n}\nfunction safeInvokeNoArg(func) {\n  try {\n    return func();\n  } catch (e) {\n    onUnexpectedError(e);\n  }\n}","map":{"version":3,"names":["dom","Selection","createFastDomNode","onUnexpectedError","PointerHandler","TextAreaHandler","ViewController","ViewUserInputEvents","ContentViewOverlays","MarginViewOverlays","PartFingerprints","ViewContentWidgets","CurrentLineHighlightOverlay","CurrentLineMarginHighlightOverlay","DecorationsOverlay","EditorScrollbar","GlyphMarginOverlay","IndentGuidesOverlay","LineNumbersOverlay","ViewLines","LinesDecorationsOverlay","Margin","MarginViewLineDecorationsOverlay","Minimap","ViewOverlayWidgets","DecorationsOverviewRuler","OverviewRuler","Rulers","ScrollDecorationViewPart","SelectionsOverlay","ViewCursors","ViewZones","Position","Range","RenderingContext","ViewContext","ViewportData","ViewEventHandler","getThemeTypeSelector","PointerHandlerLastRenderData","BlockDecorations","View","constructor","commandDelegate","configuration","colorTheme","model","userInputEvents","overflowWidgetsDomNode","_selections","_renderAnimationFrame","viewController","_context","addEventHandler","_viewParts","_textAreaHandler","_createTextAreaHandlerHelper","push","_linesContent","document","createElement","setClassName","setPosition","domNode","_getEditorClassName","setAttribute","_overflowGuardContainer","write","_scrollbar","_viewLines","_viewZones","decorationsOverviewRuler","scrollDecoration","contentViewOverlays","addDynamicOverlay","marginViewOverlays","margin","getDomNode","appendChild","marginDomNode","_contentWidgets","_viewCursors","_overlayWidgets","rulers","blockOutline","minimap","overviewRulerData","getOverviewRulerLayoutInfo","parent","insertBefore","textArea","textAreaCover","overflowingContentWidgetsDomNode","_applyLayout","_pointerHandler","_register","_createPointerHandlerHelper","_flushAccumulatedAndRenderNow","_renderNow","viewDomNode","linesContentDomNode","viewLinesDomNode","focusTextArea","focus","dispatchTextAreaEvent","event","dispatchEvent","getLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","shouldSuppressMouseDownOnViewZone","viewZoneId","shouldSuppressMouseDownOnWidget","widgetId","getPositionFromDOMInfo","spanNode","offset","visibleRangeForPosition","lineNumber","column","getLineWidth","position","options","layoutInfo","get","setWidth","width","setHeight","height","focused","isFocused","theme","type","handleEvents","events","_scheduleRender","onConfigurationChanged","e","onCursorStateChanged","selections","onFocusChanged","onThemeChanged","update","dispose","remove","removeEventHandler","viewPart","runAtThisOrScheduleAtNextAnimationFrame","_onRenderScheduled","bind","safeInvokeNoArg","_actualRender","_getViewPartsToRender","result","resultLen","shouldRender","isInDOM","viewPartsToRender","length","partialViewportData","viewLayout","getLinesViewportData","viewModel","setViewport","startLineNumber","endLineNumber","centeredLineNumber","viewportData","getWhitespaceViewportData","onBeforeRender","renderText","onDidRender","renderingContext","prepareRender","render","delegateVerticalScrollbarPointerDown","browserEvent","restoreState","scrollPosition","setScrollPosition","scrollTop","tokenizeViewport","updateLineWidths","scrollLeft","getOffsetForColumn","modelLineNumber","modelColumn","modelPosition","validatePosition","viewPosition","coordinatesConverter","convertModelPositionToViewPosition","visibleRange","left","getTargetAtClientPoint","clientX","clientY","mouseTarget","convertViewToModelMouseTarget","createOverviewRuler","cssClassName","change","callback","changeViewZones","now","everything","forceShouldRender","setAriaOptions","addContentWidget","widgetData","addWidget","widget","layoutContentWidget","_a","_b","newRange","range","newPosition","newPreference","preference","setWidgetPosition","positionAffinity","removeContentWidget","removeWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","func"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/browser/view.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { Selection } from '../common/core/selection.js';\nimport { createFastDomNode } from '../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../base/common/errors.js';\nimport { PointerHandler } from './controller/pointerHandler.js';\nimport { TextAreaHandler } from './controller/textAreaHandler.js';\nimport { ViewController } from './view/viewController.js';\nimport { ViewUserInputEvents } from './view/viewUserInputEvents.js';\nimport { ContentViewOverlays, MarginViewOverlays } from './view/viewOverlays.js';\nimport { PartFingerprints } from './view/viewPart.js';\nimport { ViewContentWidgets } from './viewParts/contentWidgets/contentWidgets.js';\nimport { CurrentLineHighlightOverlay, CurrentLineMarginHighlightOverlay } from './viewParts/currentLineHighlight/currentLineHighlight.js';\nimport { DecorationsOverlay } from './viewParts/decorations/decorations.js';\nimport { EditorScrollbar } from './viewParts/editorScrollbar/editorScrollbar.js';\nimport { GlyphMarginOverlay } from './viewParts/glyphMargin/glyphMargin.js';\nimport { IndentGuidesOverlay } from './viewParts/indentGuides/indentGuides.js';\nimport { LineNumbersOverlay } from './viewParts/lineNumbers/lineNumbers.js';\nimport { ViewLines } from './viewParts/lines/viewLines.js';\nimport { LinesDecorationsOverlay } from './viewParts/linesDecorations/linesDecorations.js';\nimport { Margin } from './viewParts/margin/margin.js';\nimport { MarginViewLineDecorationsOverlay } from './viewParts/marginDecorations/marginDecorations.js';\nimport { Minimap } from './viewParts/minimap/minimap.js';\nimport { ViewOverlayWidgets } from './viewParts/overlayWidgets/overlayWidgets.js';\nimport { DecorationsOverviewRuler } from './viewParts/overviewRuler/decorationsOverviewRuler.js';\nimport { OverviewRuler } from './viewParts/overviewRuler/overviewRuler.js';\nimport { Rulers } from './viewParts/rulers/rulers.js';\nimport { ScrollDecorationViewPart } from './viewParts/scrollDecoration/scrollDecoration.js';\nimport { SelectionsOverlay } from './viewParts/selections/selections.js';\nimport { ViewCursors } from './viewParts/viewCursors/viewCursors.js';\nimport { ViewZones } from './viewParts/viewZones/viewZones.js';\nimport { Position } from '../common/core/position.js';\nimport { Range } from '../common/core/range.js';\nimport { RenderingContext } from './view/renderingContext.js';\nimport { ViewContext } from '../common/viewModel/viewContext.js';\nimport { ViewportData } from '../common/viewLayout/viewLinesViewportData.js';\nimport { ViewEventHandler } from '../common/viewEventHandler.js';\nimport { getThemeTypeSelector } from '../../platform/theme/common/themeService.js';\nimport { PointerHandlerLastRenderData } from './controller/mouseTarget.js';\nimport { BlockDecorations } from './viewParts/blockDecorations/blockDecorations.js';\nexport class View extends ViewEventHandler {\n    constructor(commandDelegate, configuration, colorTheme, model, userInputEvents, overflowWidgetsDomNode) {\n        super();\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._renderAnimationFrame = null;\n        const viewController = new ViewController(configuration, model, userInputEvents, commandDelegate);\n        // The view context is passed on to most classes (basically to reduce param. counts in ctors)\n        this._context = new ViewContext(configuration, colorTheme, model);\n        // Ensure the view is the first event handler in order to update the layout\n        this._context.addEventHandler(this);\n        this._viewParts = [];\n        // Keyboard handler\n        this._textAreaHandler = new TextAreaHandler(this._context, viewController, this._createTextAreaHandlerHelper());\n        this._viewParts.push(this._textAreaHandler);\n        // These two dom nodes must be constructed up front, since references are needed in the layout provider (scrolling & co.)\n        this._linesContent = createFastDomNode(document.createElement('div'));\n        this._linesContent.setClassName('lines-content' + ' monaco-editor-background');\n        this._linesContent.setPosition('absolute');\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName(this._getEditorClassName());\n        // Set role 'code' for better screen reader support https://github.com/microsoft/vscode/issues/93438\n        this.domNode.setAttribute('role', 'code');\n        this._overflowGuardContainer = createFastDomNode(document.createElement('div'));\n        PartFingerprints.write(this._overflowGuardContainer, 3 /* PartFingerprint.OverflowGuard */);\n        this._overflowGuardContainer.setClassName('overflow-guard');\n        this._scrollbar = new EditorScrollbar(this._context, this._linesContent, this.domNode, this._overflowGuardContainer);\n        this._viewParts.push(this._scrollbar);\n        // View Lines\n        this._viewLines = new ViewLines(this._context, this._linesContent);\n        // View Zones\n        this._viewZones = new ViewZones(this._context);\n        this._viewParts.push(this._viewZones);\n        // Decorations overview ruler\n        const decorationsOverviewRuler = new DecorationsOverviewRuler(this._context);\n        this._viewParts.push(decorationsOverviewRuler);\n        const scrollDecoration = new ScrollDecorationViewPart(this._context);\n        this._viewParts.push(scrollDecoration);\n        const contentViewOverlays = new ContentViewOverlays(this._context);\n        this._viewParts.push(contentViewOverlays);\n        contentViewOverlays.addDynamicOverlay(new CurrentLineHighlightOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new SelectionsOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new IndentGuidesOverlay(this._context));\n        contentViewOverlays.addDynamicOverlay(new DecorationsOverlay(this._context));\n        const marginViewOverlays = new MarginViewOverlays(this._context);\n        this._viewParts.push(marginViewOverlays);\n        marginViewOverlays.addDynamicOverlay(new CurrentLineMarginHighlightOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new GlyphMarginOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new MarginViewLineDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LinesDecorationsOverlay(this._context));\n        marginViewOverlays.addDynamicOverlay(new LineNumbersOverlay(this._context));\n        const margin = new Margin(this._context);\n        margin.getDomNode().appendChild(this._viewZones.marginDomNode);\n        margin.getDomNode().appendChild(marginViewOverlays.getDomNode());\n        this._viewParts.push(margin);\n        // Content widgets\n        this._contentWidgets = new ViewContentWidgets(this._context, this.domNode);\n        this._viewParts.push(this._contentWidgets);\n        this._viewCursors = new ViewCursors(this._context);\n        this._viewParts.push(this._viewCursors);\n        // Overlay widgets\n        this._overlayWidgets = new ViewOverlayWidgets(this._context);\n        this._viewParts.push(this._overlayWidgets);\n        const rulers = new Rulers(this._context);\n        this._viewParts.push(rulers);\n        const blockOutline = new BlockDecorations(this._context);\n        this._viewParts.push(blockOutline);\n        const minimap = new Minimap(this._context);\n        this._viewParts.push(minimap);\n        // -------------- Wire dom nodes up\n        if (decorationsOverviewRuler) {\n            const overviewRulerData = this._scrollbar.getOverviewRulerLayoutInfo();\n            overviewRulerData.parent.insertBefore(decorationsOverviewRuler.getDomNode(), overviewRulerData.insertBefore);\n        }\n        this._linesContent.appendChild(contentViewOverlays.getDomNode());\n        this._linesContent.appendChild(rulers.domNode);\n        this._linesContent.appendChild(blockOutline.domNode);\n        this._linesContent.appendChild(this._viewZones.domNode);\n        this._linesContent.appendChild(this._viewLines.getDomNode());\n        this._linesContent.appendChild(this._contentWidgets.domNode);\n        this._linesContent.appendChild(this._viewCursors.getDomNode());\n        this._overflowGuardContainer.appendChild(margin.getDomNode());\n        this._overflowGuardContainer.appendChild(this._scrollbar.getDomNode());\n        this._overflowGuardContainer.appendChild(scrollDecoration.getDomNode());\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textArea);\n        this._overflowGuardContainer.appendChild(this._textAreaHandler.textAreaCover);\n        this._overflowGuardContainer.appendChild(this._overlayWidgets.getDomNode());\n        this._overflowGuardContainer.appendChild(minimap.getDomNode());\n        this.domNode.appendChild(this._overflowGuardContainer);\n        if (overflowWidgetsDomNode) {\n            overflowWidgetsDomNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode.domNode);\n        }\n        else {\n            this.domNode.appendChild(this._contentWidgets.overflowingContentWidgetsDomNode);\n        }\n        this._applyLayout();\n        // Pointer handler\n        this._pointerHandler = this._register(new PointerHandler(this._context, viewController, this._createPointerHandlerHelper()));\n    }\n    _flushAccumulatedAndRenderNow() {\n        this._renderNow();\n    }\n    _createPointerHandlerHelper() {\n        return {\n            viewDomNode: this.domNode.domNode,\n            linesContentDomNode: this._linesContent.domNode,\n            viewLinesDomNode: this._viewLines.getDomNode().domNode,\n            focusTextArea: () => {\n                this.focus();\n            },\n            dispatchTextAreaEvent: (event) => {\n                this._textAreaHandler.textArea.domNode.dispatchEvent(event);\n            },\n            getLastRenderData: () => {\n                const lastViewCursorsRenderData = this._viewCursors.getLastRenderData() || [];\n                const lastTextareaPosition = this._textAreaHandler.getLastRenderData();\n                return new PointerHandlerLastRenderData(lastViewCursorsRenderData, lastTextareaPosition);\n            },\n            shouldSuppressMouseDownOnViewZone: (viewZoneId) => {\n                return this._viewZones.shouldSuppressMouseDownOnViewZone(viewZoneId);\n            },\n            shouldSuppressMouseDownOnWidget: (widgetId) => {\n                return this._contentWidgets.shouldSuppressMouseDownOnWidget(widgetId);\n            },\n            getPositionFromDOMInfo: (spanNode, offset) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getPositionFromDOMInfo(spanNode, offset);\n            },\n            visibleRangeForPosition: (lineNumber, column) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(new Position(lineNumber, column));\n            },\n            getLineWidth: (lineNumber) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.getLineWidth(lineNumber);\n            }\n        };\n    }\n    _createTextAreaHandlerHelper() {\n        return {\n            visibleRangeForPosition: (position) => {\n                this._flushAccumulatedAndRenderNow();\n                return this._viewLines.visibleRangeForPosition(position);\n            }\n        };\n    }\n    _applyLayout() {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(133 /* EditorOption.layoutInfo */);\n        this.domNode.setWidth(layoutInfo.width);\n        this.domNode.setHeight(layoutInfo.height);\n        this._overflowGuardContainer.setWidth(layoutInfo.width);\n        this._overflowGuardContainer.setHeight(layoutInfo.height);\n        this._linesContent.setWidth(1000000);\n        this._linesContent.setHeight(1000000);\n    }\n    _getEditorClassName() {\n        const focused = this._textAreaHandler.isFocused() ? ' focused' : '';\n        return this._context.configuration.options.get(130 /* EditorOption.editorClassName */) + ' ' + getThemeTypeSelector(this._context.theme.type) + focused;\n    }\n    // --- begin event handlers\n    handleEvents(events) {\n        super.handleEvents(events);\n        this._scheduleRender();\n    }\n    onConfigurationChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        this._applyLayout();\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections;\n        return false;\n    }\n    onFocusChanged(e) {\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    onThemeChanged(e) {\n        this._context.theme.update(e.theme);\n        this.domNode.setClassName(this._getEditorClassName());\n        return false;\n    }\n    // --- end event handlers\n    dispose() {\n        if (this._renderAnimationFrame !== null) {\n            this._renderAnimationFrame.dispose();\n            this._renderAnimationFrame = null;\n        }\n        this._contentWidgets.overflowingContentWidgetsDomNode.domNode.remove();\n        this._context.removeEventHandler(this);\n        this._viewLines.dispose();\n        // Destroy view parts\n        for (const viewPart of this._viewParts) {\n            viewPart.dispose();\n        }\n        super.dispose();\n    }\n    _scheduleRender() {\n        if (this._renderAnimationFrame === null) {\n            this._renderAnimationFrame = dom.runAtThisOrScheduleAtNextAnimationFrame(this._onRenderScheduled.bind(this), 100);\n        }\n    }\n    _onRenderScheduled() {\n        this._renderAnimationFrame = null;\n        this._flushAccumulatedAndRenderNow();\n    }\n    _renderNow() {\n        safeInvokeNoArg(() => this._actualRender());\n    }\n    _getViewPartsToRender() {\n        const result = [];\n        let resultLen = 0;\n        for (const viewPart of this._viewParts) {\n            if (viewPart.shouldRender()) {\n                result[resultLen++] = viewPart;\n            }\n        }\n        return result;\n    }\n    _actualRender() {\n        if (!dom.isInDOM(this.domNode.domNode)) {\n            return;\n        }\n        let viewPartsToRender = this._getViewPartsToRender();\n        if (!this._viewLines.shouldRender() && viewPartsToRender.length === 0) {\n            // Nothing to render\n            return;\n        }\n        const partialViewportData = this._context.viewLayout.getLinesViewportData();\n        this._context.viewModel.setViewport(partialViewportData.startLineNumber, partialViewportData.endLineNumber, partialViewportData.centeredLineNumber);\n        const viewportData = new ViewportData(this._selections, partialViewportData, this._context.viewLayout.getWhitespaceViewportData(), this._context.viewModel);\n        if (this._contentWidgets.shouldRender()) {\n            // Give the content widgets a chance to set their max width before a possible synchronous layout\n            this._contentWidgets.onBeforeRender(viewportData);\n        }\n        if (this._viewLines.shouldRender()) {\n            this._viewLines.renderText(viewportData);\n            this._viewLines.onDidRender();\n            // Rendering of viewLines might cause scroll events to occur, so collect view parts to render again\n            viewPartsToRender = this._getViewPartsToRender();\n        }\n        const renderingContext = new RenderingContext(this._context.viewLayout, viewportData, this._viewLines);\n        // Render the rest of the parts\n        for (const viewPart of viewPartsToRender) {\n            viewPart.prepareRender(renderingContext);\n        }\n        for (const viewPart of viewPartsToRender) {\n            viewPart.render(renderingContext);\n            viewPart.onDidRender();\n        }\n    }\n    // --- BEGIN CodeEditor helpers\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    restoreState(scrollPosition) {\n        this._context.viewModel.viewLayout.setScrollPosition({ scrollTop: scrollPosition.scrollTop }, 1 /* ScrollType.Immediate */);\n        this._context.viewModel.tokenizeViewport();\n        this._renderNow();\n        this._viewLines.updateLineWidths();\n        this._context.viewModel.viewLayout.setScrollPosition({ scrollLeft: scrollPosition.scrollLeft }, 1 /* ScrollType.Immediate */);\n    }\n    getOffsetForColumn(modelLineNumber, modelColumn) {\n        const modelPosition = this._context.viewModel.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        this._flushAccumulatedAndRenderNow();\n        const visibleRange = this._viewLines.visibleRangeForPosition(new Position(viewPosition.lineNumber, viewPosition.column));\n        if (!visibleRange) {\n            return -1;\n        }\n        return visibleRange.left;\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        const mouseTarget = this._pointerHandler.getTargetAtClientPoint(clientX, clientY);\n        if (!mouseTarget) {\n            return null;\n        }\n        return ViewUserInputEvents.convertViewToModelMouseTarget(mouseTarget, this._context.viewModel.coordinatesConverter);\n    }\n    createOverviewRuler(cssClassName) {\n        return new OverviewRuler(this._context, cssClassName);\n    }\n    change(callback) {\n        this._viewZones.changeViewZones(callback);\n        this._scheduleRender();\n    }\n    render(now, everything) {\n        if (everything) {\n            // Force everything to render...\n            this._viewLines.forceShouldRender();\n            for (const viewPart of this._viewParts) {\n                viewPart.forceShouldRender();\n            }\n        }\n        if (now) {\n            this._flushAccumulatedAndRenderNow();\n        }\n        else {\n            this._scheduleRender();\n        }\n    }\n    focus() {\n        this._textAreaHandler.focusTextArea();\n    }\n    isFocused() {\n        return this._textAreaHandler.isFocused();\n    }\n    setAriaOptions(options) {\n        this._textAreaHandler.setAriaOptions(options);\n    }\n    addContentWidget(widgetData) {\n        this._contentWidgets.addWidget(widgetData.widget);\n        this.layoutContentWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutContentWidget(widgetData) {\n        var _a, _b;\n        let newRange = widgetData.position ? widgetData.position.range || null : null;\n        if (newRange === null) {\n            const newPosition = widgetData.position ? widgetData.position.position : null;\n            if (newPosition !== null) {\n                newRange = new Range(newPosition.lineNumber, newPosition.column, newPosition.lineNumber, newPosition.column);\n            }\n        }\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\n        this._contentWidgets.setWidgetPosition(widgetData.widget, newRange, newPreference, (_b = (_a = widgetData.position) === null || _a === void 0 ? void 0 : _a.positionAffinity) !== null && _b !== void 0 ? _b : null);\n        this._scheduleRender();\n    }\n    removeContentWidget(widgetData) {\n        this._contentWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n    addOverlayWidget(widgetData) {\n        this._overlayWidgets.addWidget(widgetData.widget);\n        this.layoutOverlayWidget(widgetData);\n        this._scheduleRender();\n    }\n    layoutOverlayWidget(widgetData) {\n        const newPreference = widgetData.position ? widgetData.position.preference : null;\n        const shouldRender = this._overlayWidgets.setWidgetPosition(widgetData.widget, newPreference);\n        if (shouldRender) {\n            this._scheduleRender();\n        }\n    }\n    removeOverlayWidget(widgetData) {\n        this._overlayWidgets.removeWidget(widgetData.widget);\n        this._scheduleRender();\n    }\n}\nfunction safeInvokeNoArg(func) {\n    try {\n        return func();\n    }\n    catch (e) {\n        onUnexpectedError(e);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}