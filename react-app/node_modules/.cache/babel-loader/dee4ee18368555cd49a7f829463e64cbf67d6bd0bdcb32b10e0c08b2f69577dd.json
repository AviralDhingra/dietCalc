{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = this && this.__param || function (paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport '../../common/languages/languageConfigurationRegistry.js';\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditService, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService, NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService, IProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService, LogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { getSingletonServiceDescriptors, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport '../../common/services/languageFeaturesService.js';\nimport { DefaultConfigurationModel } from '../../../platform/configuration/common/configurations.js';\nclass SimpleModel {\n  constructor(model) {\n    this.disposed = false;\n    this.model = model;\n    this._onWillDispose = new Emitter();\n  }\n  get textEditorModel() {\n    return this.model;\n  }\n  dispose() {\n    this.disposed = true;\n    this._onWillDispose.fire();\n  }\n}\nlet StandaloneTextModelService = class StandaloneTextModelService {\n  constructor(modelService) {\n    this.modelService = modelService;\n  }\n  createModelReference(resource) {\n    const model = this.modelService.getModel(resource);\n    if (!model) {\n      return Promise.reject(new Error(`Model not found`));\n    }\n    return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n  }\n};\nStandaloneTextModelService = __decorate([__param(0, IModelService)], StandaloneTextModelService);\nclass StandaloneEditorProgressService {\n  show() {\n    return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n  }\n  showWhile(promise, delay) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield promise;\n    });\n  }\n}\nStandaloneEditorProgressService.NULL_PROGRESS_RUNNER = {\n  done: () => {},\n  total: () => {},\n  worked: () => {}\n};\nclass StandaloneProgressService {\n  withProgress(_options, task, onDidCancel) {\n    return task({\n      report: () => {}\n    });\n  }\n}\nclass StandaloneDialogService {\n  confirm(confirmation) {\n    return this.doConfirm(confirmation).then(confirmed => {\n      return {\n        confirmed,\n        checkboxChecked: false // unsupported\n      };\n    });\n  }\n\n  doConfirm(confirmation) {\n    let messageText = confirmation.message;\n    if (confirmation.detail) {\n      messageText = messageText + '\\n\\n' + confirmation.detail;\n    }\n    return Promise.resolve(window.confirm(messageText));\n  }\n  show(severity, message, buttons, options) {\n    return Promise.resolve({\n      choice: 0\n    });\n  }\n}\nexport class StandaloneNotificationService {\n  info(message) {\n    return this.notify({\n      severity: Severity.Info,\n      message\n    });\n  }\n  warn(message) {\n    return this.notify({\n      severity: Severity.Warning,\n      message\n    });\n  }\n  error(error) {\n    return this.notify({\n      severity: Severity.Error,\n      message: error\n    });\n  }\n  notify(notification) {\n    switch (notification.severity) {\n      case Severity.Error:\n        console.error(notification.message);\n        break;\n      case Severity.Warning:\n        console.warn(notification.message);\n        break;\n      default:\n        console.log(notification.message);\n        break;\n    }\n    return StandaloneNotificationService.NO_OP;\n  }\n  status(message, options) {\n    return Disposable.None;\n  }\n}\nStandaloneNotificationService.NO_OP = new NoOpNotification();\nlet StandaloneCommandService = class StandaloneCommandService {\n  constructor(instantiationService) {\n    this._onWillExecuteCommand = new Emitter();\n    this._onDidExecuteCommand = new Emitter();\n    this.onWillExecuteCommand = this._onWillExecuteCommand.event;\n    this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n    this._instantiationService = instantiationService;\n  }\n  executeCommand(id) {\n    const command = CommandsRegistry.getCommand(id);\n    if (!command) {\n      return Promise.reject(new Error(`command '${id}' not found`));\n    }\n    try {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      this._onWillExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n      const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n      this._onDidExecuteCommand.fire({\n        commandId: id,\n        args\n      });\n      return Promise.resolve(result);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n};\nStandaloneCommandService = __decorate([__param(0, IInstantiationService)], StandaloneCommandService);\nexport { StandaloneCommandService };\nlet StandaloneKeybindingService = class StandaloneKeybindingService extends AbstractKeybindingService {\n  constructor(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n    super(contextKeyService, commandService, telemetryService, notificationService, logService);\n    this._cachedResolver = null;\n    this._dynamicKeybindings = [];\n    this._domNodeListeners = [];\n    const addContainer = domNode => {\n      const disposables = new DisposableStore();\n      // for standard keybindings\n      disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, e => {\n        const keyEvent = new StandardKeyboardEvent(e);\n        const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n        if (shouldPreventDefault) {\n          keyEvent.preventDefault();\n          keyEvent.stopPropagation();\n        }\n      }));\n      // for single modifier chord keybindings (e.g. shift shift)\n      disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, e => {\n        const keyEvent = new StandardKeyboardEvent(e);\n        const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n        if (shouldPreventDefault) {\n          keyEvent.preventDefault();\n        }\n      }));\n      this._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n    };\n    const removeContainer = domNode => {\n      for (let i = 0; i < this._domNodeListeners.length; i++) {\n        const domNodeListeners = this._domNodeListeners[i];\n        if (domNodeListeners.domNode === domNode) {\n          this._domNodeListeners.splice(i, 1);\n          domNodeListeners.dispose();\n        }\n      }\n    };\n    const addCodeEditor = codeEditor => {\n      if (codeEditor.getOption(56 /* EditorOption.inDiffEditor */)) {\n        return;\n      }\n      addContainer(codeEditor.getContainerDomNode());\n    };\n    const removeCodeEditor = codeEditor => {\n      if (codeEditor.getOption(56 /* EditorOption.inDiffEditor */)) {\n        return;\n      }\n      removeContainer(codeEditor.getContainerDomNode());\n    };\n    this._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n    this._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n    codeEditorService.listCodeEditors().forEach(addCodeEditor);\n    const addDiffEditor = diffEditor => {\n      addContainer(diffEditor.getContainerDomNode());\n    };\n    const removeDiffEditor = diffEditor => {\n      removeContainer(diffEditor.getContainerDomNode());\n    };\n    this._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n    this._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n    codeEditorService.listDiffEditors().forEach(addDiffEditor);\n  }\n  addDynamicKeybinding(command, keybinding, handler, when) {\n    return combinedDisposable(CommandsRegistry.registerCommand(command, handler), this.addDynamicKeybindings([{\n      keybinding,\n      command,\n      when\n    }]));\n  }\n  addDynamicKeybindings(rules) {\n    const entries = rules.map(rule => {\n      var _a, _b;\n      const keybinding = createKeybinding(rule.keybinding, OS);\n      return {\n        keybinding: (_a = keybinding === null || keybinding === void 0 ? void 0 : keybinding.parts) !== null && _a !== void 0 ? _a : null,\n        command: (_b = rule.command) !== null && _b !== void 0 ? _b : null,\n        commandArgs: rule.commandArgs,\n        when: rule.when,\n        weight1: 1000,\n        weight2: 0,\n        extensionId: null,\n        isBuiltinExtension: false\n      };\n    });\n    this._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n    this.updateResolver();\n    return toDisposable(() => {\n      // Search the first entry and remove them all since they will be contiguous\n      for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n        if (this._dynamicKeybindings[i] === entries[0]) {\n          this._dynamicKeybindings.splice(i, entries.length);\n          this.updateResolver();\n          return;\n        }\n      }\n    });\n  }\n  updateResolver() {\n    this._cachedResolver = null;\n    this._onDidUpdateKeybindings.fire();\n  }\n  _getResolver() {\n    if (!this._cachedResolver) {\n      const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n      const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n      this._cachedResolver = new KeybindingResolver(defaults, overrides, str => this._log(str));\n    }\n    return this._cachedResolver;\n  }\n  _documentHasFocus() {\n    return document.hasFocus();\n  }\n  _toNormalizedKeybindingItems(items, isDefault) {\n    const result = [];\n    let resultLen = 0;\n    for (const item of items) {\n      const when = item.when || undefined;\n      const keybinding = item.keybinding;\n      if (!keybinding) {\n        // This might be a removal keybinding item in user settings => accept it\n        result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n      } else {\n        const resolvedKeybindings = USLayoutResolvedKeybinding.resolveUserBinding(keybinding, OS);\n        for (const resolvedKeybinding of resolvedKeybindings) {\n          result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n        }\n      }\n    }\n    return result;\n  }\n  resolveKeyboardEvent(keyboardEvent) {\n    const keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\n    return new USLayoutResolvedKeybinding(keybinding, OS);\n  }\n};\nStandaloneKeybindingService = __decorate([__param(0, IContextKeyService), __param(1, ICommandService), __param(2, ITelemetryService), __param(3, INotificationService), __param(4, ILogService), __param(5, ICodeEditorService)], StandaloneKeybindingService);\nexport { StandaloneKeybindingService };\nclass DomNodeListeners extends Disposable {\n  constructor(domNode, disposables) {\n    super();\n    this.domNode = domNode;\n    this._register(disposables);\n  }\n}\nfunction isConfigurationOverrides(thing) {\n  return thing && typeof thing === 'object' && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string') && (!thing.resource || thing.resource instanceof URI);\n}\nexport class StandaloneConfigurationService {\n  constructor() {\n    this._onDidChangeConfiguration = new Emitter();\n    this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n    this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel());\n  }\n  getValue(arg1, arg2) {\n    const section = typeof arg1 === 'string' ? arg1 : undefined;\n    const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n    return this._configuration.getValue(section, overrides, undefined);\n  }\n  updateValues(values) {\n    const previous = {\n      data: this._configuration.toData()\n    };\n    const changedKeys = [];\n    for (const entry of values) {\n      const [key, value] = entry;\n      if (this.getValue(key) === value) {\n        continue;\n      }\n      this._configuration.updateValue(key, value);\n      changedKeys.push(key);\n    }\n    if (changedKeys.length > 0) {\n      const configurationChangeEvent = new ConfigurationChangeEvent({\n        keys: changedKeys,\n        overrides: []\n      }, previous, this._configuration);\n      configurationChangeEvent.source = 8 /* ConfigurationTarget.MEMORY */;\n      configurationChangeEvent.sourceConfig = null;\n      this._onDidChangeConfiguration.fire(configurationChangeEvent);\n    }\n    return Promise.resolve();\n  }\n  updateValue(key, value, arg3, arg4) {\n    return this.updateValues([[key, value]]);\n  }\n  inspect(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this._configuration.inspect(key, options, undefined);\n  }\n}\nlet StandaloneResourceConfigurationService = class StandaloneResourceConfigurationService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n    this._onDidChangeConfiguration = new Emitter();\n    this.configurationService.onDidChangeConfiguration(e => {\n      this._onDidChangeConfiguration.fire({\n        affectedKeys: e.affectedKeys,\n        affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration)\n      });\n    });\n  }\n  getValue(resource, arg2, arg3) {\n    const position = Pos.isIPosition(arg2) ? arg2 : null;\n    const section = position ? typeof arg3 === 'string' ? arg3 : undefined : typeof arg2 === 'string' ? arg2 : undefined;\n    if (typeof section === 'undefined') {\n      return this.configurationService.getValue();\n    }\n    return this.configurationService.getValue(section);\n  }\n};\nStandaloneResourceConfigurationService = __decorate([__param(0, IConfigurationService)], StandaloneResourceConfigurationService);\nlet StandaloneResourcePropertiesService = class StandaloneResourcePropertiesService {\n  constructor(configurationService) {\n    this.configurationService = configurationService;\n  }\n  getEOL(resource, language) {\n    const eol = this.configurationService.getValue('files.eol', {\n      overrideIdentifier: language,\n      resource\n    });\n    if (eol && typeof eol === 'string' && eol !== 'auto') {\n      return eol;\n    }\n    return isLinux || isMacintosh ? '\\n' : '\\r\\n';\n  }\n};\nStandaloneResourcePropertiesService = __decorate([__param(0, IConfigurationService)], StandaloneResourcePropertiesService);\nclass StandaloneTelemetryService {\n  publicLog(eventName, data) {\n    return Promise.resolve(undefined);\n  }\n  publicLog2(eventName, data) {\n    return this.publicLog(eventName, data);\n  }\n}\nclass StandaloneWorkspaceContextService {\n  constructor() {\n    const resource = URI.from({\n      scheme: StandaloneWorkspaceContextService.SCHEME,\n      authority: 'model',\n      path: '/'\n    });\n    this.workspace = {\n      id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82',\n      folders: [new WorkspaceFolder({\n        uri: resource,\n        name: '',\n        index: 0\n      })]\n    };\n  }\n  getWorkspace() {\n    return this.workspace;\n  }\n  getWorkspaceFolder(resource) {\n    return resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n  }\n}\nStandaloneWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n  if (!source) {\n    return;\n  }\n  if (!(configurationService instanceof StandaloneConfigurationService)) {\n    return;\n  }\n  const toUpdate = [];\n  Object.keys(source).forEach(key => {\n    if (isEditorConfigurationKey(key)) {\n      toUpdate.push([`editor.${key}`, source[key]]);\n    }\n    if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n      toUpdate.push([`diffEditor.${key}`, source[key]]);\n    }\n  });\n  if (toUpdate.length > 0) {\n    configurationService.updateValues(toUpdate);\n  }\n}\nlet StandaloneBulkEditService = class StandaloneBulkEditService {\n  constructor(_modelService) {\n    this._modelService = _modelService;\n    //\n  }\n\n  hasPreviewHandler() {\n    return false;\n  }\n  apply(edits, _options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const textEdits = new Map();\n      for (const edit of edits) {\n        if (!(edit instanceof ResourceTextEdit)) {\n          throw new Error('bad edit - only text edits are supported');\n        }\n        const model = this._modelService.getModel(edit.resource);\n        if (!model) {\n          throw new Error('bad edit - model not found');\n        }\n        if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n          throw new Error('bad state - model changed in the meantime');\n        }\n        let array = textEdits.get(model);\n        if (!array) {\n          array = [];\n          textEdits.set(model, array);\n        }\n        array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n      }\n      let totalEdits = 0;\n      let totalFiles = 0;\n      for (const [model, edits] of textEdits) {\n        model.pushStackElement();\n        model.pushEditOperations([], edits, () => []);\n        model.pushStackElement();\n        totalFiles += 1;\n        totalEdits += edits.length;\n      }\n      return {\n        ariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n      };\n    });\n  }\n};\nStandaloneBulkEditService = __decorate([__param(0, IModelService)], StandaloneBulkEditService);\nclass StandaloneUriLabelService {\n  getUriLabel(resource, options) {\n    if (resource.scheme === 'file') {\n      return resource.fsPath;\n    }\n    return resource.path;\n  }\n  getUriBasenameLabel(resource) {\n    return basename(resource);\n  }\n}\nlet StandaloneContextViewService = class StandaloneContextViewService extends ContextViewService {\n  constructor(layoutService, _codeEditorService) {\n    super(layoutService);\n    this._codeEditorService = _codeEditorService;\n  }\n  showContextView(delegate, container, shadowRoot) {\n    if (!container) {\n      const codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n      if (codeEditor) {\n        container = codeEditor.getContainerDomNode();\n      }\n    }\n    return super.showContextView(delegate, container, shadowRoot);\n  }\n};\nStandaloneContextViewService = __decorate([__param(0, ILayoutService), __param(1, ICodeEditorService)], StandaloneContextViewService);\nclass StandaloneWorkspaceTrustManagementService {\n  constructor() {\n    this._neverEmitter = new Emitter();\n    this.onDidChangeTrust = this._neverEmitter.event;\n  }\n  isWorkspaceTrusted() {\n    return true;\n  }\n}\nclass StandaloneLanguageService extends LanguageService {\n  constructor() {\n    super();\n  }\n}\nclass StandaloneLogService extends LogService {\n  constructor() {\n    super(new ConsoleLogger());\n  }\n}\nlet StandaloneContextMenuService = class StandaloneContextMenuService extends ContextMenuService {\n  constructor(telemetryService, notificationService, contextViewService, keybindingService, themeService) {\n    super(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n    this.configure({\n      blockMouse: false\n    }); // we do not want that in the standalone editor\n  }\n};\n\nStandaloneContextMenuService = __decorate([__param(0, ITelemetryService), __param(1, INotificationService), __param(2, IContextViewService), __param(3, IKeybindingService), __param(4, IThemeService)], StandaloneContextMenuService);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService);\nregisterSingleton(ILabelService, StandaloneUriLabelService);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService);\nregisterSingleton(IDialogService, StandaloneDialogService);\nregisterSingleton(INotificationService, StandaloneNotificationService);\nregisterSingleton(IMarkerService, MarkerService);\nregisterSingleton(ILanguageService, StandaloneLanguageService);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService);\nregisterSingleton(ILogService, StandaloneLogService);\nregisterSingleton(IModelService, ModelService);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService);\nregisterSingleton(IContextKeyService, ContextKeyService);\nregisterSingleton(IProgressService, StandaloneProgressService);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService);\nregisterSingleton(IStorageService, InMemoryStorageService);\nregisterSingleton(IEditorWorkerService, EditorWorkerService);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService);\nregisterSingleton(ITextModelService, StandaloneTextModelService);\nregisterSingleton(IAccessibilityService, AccessibilityService);\nregisterSingleton(IListService, ListService);\nregisterSingleton(ICommandService, StandaloneCommandService);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService);\nregisterSingleton(IContextViewService, StandaloneContextViewService);\nregisterSingleton(IOpenerService, OpenerService);\nregisterSingleton(IClipboardService, BrowserClipboardService);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService);\nregisterSingleton(IMenuService, MenuService);\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport var StandaloneServices;\n(function (StandaloneServices) {\n  const serviceCollection = new ServiceCollection();\n  for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n    serviceCollection.set(id, descriptor);\n  }\n  const instantiationService = new InstantiationService(serviceCollection, true);\n  serviceCollection.set(IInstantiationService, instantiationService);\n  function get(serviceId) {\n    const r = serviceCollection.get(serviceId);\n    if (!r) {\n      throw new Error('Missing service ' + serviceId);\n    }\n    if (r instanceof SyncDescriptor) {\n      return instantiationService.invokeFunction(accessor => accessor.get(serviceId));\n    } else {\n      return r;\n    }\n  }\n  StandaloneServices.get = get;\n  let initialized = false;\n  function initialize(overrides) {\n    if (initialized) {\n      return instantiationService;\n    }\n    initialized = true;\n    // Add singletons that were registered after this module loaded\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n      if (!serviceCollection.get(id)) {\n        serviceCollection.set(id, descriptor);\n      }\n    }\n    // Initialize the service collection with the overrides, but only if the\n    // service was not instantiated in the meantime.\n    for (const serviceId in overrides) {\n      if (overrides.hasOwnProperty(serviceId)) {\n        const serviceIdentifier = createDecorator(serviceId);\n        const r = serviceCollection.get(serviceIdentifier);\n        if (r instanceof SyncDescriptor) {\n          serviceCollection.set(serviceIdentifier, overrides[serviceId]);\n        }\n      }\n    }\n    return instantiationService;\n  }\n  StandaloneServices.initialize = initialize;\n})(StandaloneServices || (StandaloneServices = {}));","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","strings","dom","StandardKeyboardEvent","Emitter","SimpleKeybinding","createKeybinding","ImmortalReference","toDisposable","DisposableStore","Disposable","combinedDisposable","OS","isLinux","isMacintosh","Severity","URI","IBulkEditService","ResourceTextEdit","isDiffEditorConfigurationKey","isEditorConfigurationKey","EditOperation","Position","Pos","Range","IModelService","ITextModelService","ITextResourceConfigurationService","ITextResourcePropertiesService","CommandsRegistry","ICommandService","IConfigurationService","Configuration","ConfigurationModel","ConfigurationChangeEvent","IContextKeyService","IDialogService","createDecorator","IInstantiationService","AbstractKeybindingService","IKeybindingService","KeybindingResolver","KeybindingsRegistry","ResolvedKeybindingItem","USLayoutResolvedKeybinding","ILabelService","INotificationService","NoOpNotification","IEditorProgressService","IProgressService","ITelemetryService","IWorkspaceContextService","WorkspaceFolder","ILayoutService","StandaloneServicesNLS","basename","ICodeEditorService","ConsoleLogger","ILogService","LogService","IWorkspaceTrustManagementService","IContextMenuService","IContextViewService","ContextViewService","LanguageService","ContextMenuService","IThemeService","getSingletonServiceDescriptors","registerSingleton","OpenerService","IEditorWorkerService","EditorWorkerService","ILanguageService","MarkerDecorationsService","IMarkerDecorationsService","ModelService","StandaloneQuickInputService","StandaloneThemeService","IStandaloneThemeService","AccessibilityService","IAccessibilityService","IMenuService","MenuService","BrowserClipboardService","IClipboardService","ContextKeyService","SyncDescriptor","InstantiationService","ServiceCollection","IListService","ListService","IMarkerService","MarkerService","IOpenerService","IQuickInputService","IStorageService","InMemoryStorageService","DefaultConfigurationModel","SimpleModel","constructor","model","disposed","_onWillDispose","textEditorModel","dispose","fire","StandaloneTextModelService","modelService","createModelReference","resource","getModel","Error","StandaloneEditorProgressService","show","NULL_PROGRESS_RUNNER","showWhile","promise","delay","total","worked","StandaloneProgressService","withProgress","_options","task","onDidCancel","report","StandaloneDialogService","confirm","confirmation","doConfirm","confirmed","checkboxChecked","messageText","message","detail","window","severity","buttons","options","choice","StandaloneNotificationService","info","notify","Info","warn","Warning","error","notification","console","log","NO_OP","status","None","StandaloneCommandService","instantiationService","_onWillExecuteCommand","_onDidExecuteCommand","onWillExecuteCommand","event","onDidExecuteCommand","_instantiationService","executeCommand","id","command","getCommand","args","commandId","invokeFunction","handler","err","StandaloneKeybindingService","contextKeyService","commandService","telemetryService","notificationService","logService","codeEditorService","_cachedResolver","_dynamicKeybindings","_domNodeListeners","addContainer","domNode","disposables","add","addDisposableListener","EventType","KEY_DOWN","keyEvent","shouldPreventDefault","_dispatch","preventDefault","stopPropagation","KEY_UP","_singleModifierDispatch","push","DomNodeListeners","removeContainer","domNodeListeners","splice","addCodeEditor","codeEditor","getOption","getContainerDomNode","removeCodeEditor","_register","onCodeEditorAdd","onCodeEditorRemove","listCodeEditors","forEach","addDiffEditor","diffEditor","removeDiffEditor","onDiffEditorAdd","onDiffEditorRemove","listDiffEditors","addDynamicKeybinding","keybinding","when","registerCommand","addDynamicKeybindings","rules","entries","map","rule","_a","_b","parts","commandArgs","weight1","weight2","extensionId","isBuiltinExtension","concat","updateResolver","_onDidUpdateKeybindings","_getResolver","defaults","_toNormalizedKeybindingItems","getDefaultKeybindings","overrides","str","_log","_documentHasFocus","document","hasFocus","items","isDefault","resultLen","item","undefined","resolvedKeybindings","resolveUserBinding","resolvedKeybinding","resolveKeyboardEvent","keyboardEvent","ctrlKey","shiftKey","altKey","metaKey","keyCode","toChord","isConfigurationOverrides","thing","overrideIdentifier","StandaloneConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","_configuration","getValue","arg1","arg2","section","updateValues","values","previous","data","toData","changedKeys","entry","updateValue","configurationChangeEvent","keys","source","sourceConfig","arg3","arg4","inspect","StandaloneResourceConfigurationService","configurationService","affectedKeys","affectsConfiguration","configuration","position","isIPosition","StandaloneResourcePropertiesService","getEOL","language","eol","StandaloneTelemetryService","publicLog","eventName","publicLog2","StandaloneWorkspaceContextService","from","scheme","SCHEME","authority","path","workspace","folders","uri","name","index","getWorkspace","getWorkspaceFolder","updateConfigurationService","isDiffEditor","toUpdate","StandaloneBulkEditService","_modelService","hasPreviewHandler","edits","textEdits","Map","edit","versionId","getVersionId","array","get","set","replaceMove","lift","textEdit","range","text","totalEdits","totalFiles","pushStackElement","pushEditOperations","ariaSummary","format","bulkEditServiceSummary","StandaloneUriLabelService","getUriLabel","fsPath","getUriBasenameLabel","StandaloneContextViewService","layoutService","_codeEditorService","showContextView","delegate","container","shadowRoot","getFocusedCodeEditor","getActiveCodeEditor","StandaloneWorkspaceTrustManagementService","_neverEmitter","onDidChangeTrust","isWorkspaceTrusted","StandaloneLanguageService","StandaloneLogService","StandaloneContextMenuService","contextViewService","keybindingService","themeService","configure","blockMouse","StandaloneServices","serviceCollection","descriptor","serviceId","accessor","initialized","initialize","hasOwnProperty","serviceIdentifier"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../../common/languages/languageConfigurationRegistry.js';\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { SimpleKeybinding, createKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditService, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService, NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService, IProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkspaceFolder } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService, LogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { getSingletonServiceDescriptors, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport '../../common/services/languageFeaturesService.js';\nimport { DefaultConfigurationModel } from '../../../platform/configuration/common/configurations.js';\nclass SimpleModel {\n    constructor(model) {\n        this.disposed = false;\n        this.model = model;\n        this._onWillDispose = new Emitter();\n    }\n    get textEditorModel() {\n        return this.model;\n    }\n    dispose() {\n        this.disposed = true;\n        this._onWillDispose.fire();\n    }\n}\nlet StandaloneTextModelService = class StandaloneTextModelService {\n    constructor(modelService) {\n        this.modelService = modelService;\n    }\n    createModelReference(resource) {\n        const model = this.modelService.getModel(resource);\n        if (!model) {\n            return Promise.reject(new Error(`Model not found`));\n        }\n        return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n    }\n};\nStandaloneTextModelService = __decorate([\n    __param(0, IModelService)\n], StandaloneTextModelService);\nclass StandaloneEditorProgressService {\n    show() {\n        return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n    }\n    showWhile(promise, delay) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield promise;\n        });\n    }\n}\nStandaloneEditorProgressService.NULL_PROGRESS_RUNNER = {\n    done: () => { },\n    total: () => { },\n    worked: () => { }\n};\nclass StandaloneProgressService {\n    withProgress(_options, task, onDidCancel) {\n        return task({\n            report: () => { },\n        });\n    }\n}\nclass StandaloneDialogService {\n    confirm(confirmation) {\n        return this.doConfirm(confirmation).then(confirmed => {\n            return {\n                confirmed,\n                checkboxChecked: false // unsupported\n            };\n        });\n    }\n    doConfirm(confirmation) {\n        let messageText = confirmation.message;\n        if (confirmation.detail) {\n            messageText = messageText + '\\n\\n' + confirmation.detail;\n        }\n        return Promise.resolve(window.confirm(messageText));\n    }\n    show(severity, message, buttons, options) {\n        return Promise.resolve({ choice: 0 });\n    }\n}\nexport class StandaloneNotificationService {\n    info(message) {\n        return this.notify({ severity: Severity.Info, message });\n    }\n    warn(message) {\n        return this.notify({ severity: Severity.Warning, message });\n    }\n    error(error) {\n        return this.notify({ severity: Severity.Error, message: error });\n    }\n    notify(notification) {\n        switch (notification.severity) {\n            case Severity.Error:\n                console.error(notification.message);\n                break;\n            case Severity.Warning:\n                console.warn(notification.message);\n                break;\n            default:\n                console.log(notification.message);\n                break;\n        }\n        return StandaloneNotificationService.NO_OP;\n    }\n    status(message, options) {\n        return Disposable.None;\n    }\n}\nStandaloneNotificationService.NO_OP = new NoOpNotification();\nlet StandaloneCommandService = class StandaloneCommandService {\n    constructor(instantiationService) {\n        this._onWillExecuteCommand = new Emitter();\n        this._onDidExecuteCommand = new Emitter();\n        this.onWillExecuteCommand = this._onWillExecuteCommand.event;\n        this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n        this._instantiationService = instantiationService;\n    }\n    executeCommand(id, ...args) {\n        const command = CommandsRegistry.getCommand(id);\n        if (!command) {\n            return Promise.reject(new Error(`command '${id}' not found`));\n        }\n        try {\n            this._onWillExecuteCommand.fire({ commandId: id, args });\n            const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n            this._onDidExecuteCommand.fire({ commandId: id, args });\n            return Promise.resolve(result);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\nStandaloneCommandService = __decorate([\n    __param(0, IInstantiationService)\n], StandaloneCommandService);\nexport { StandaloneCommandService };\nlet StandaloneKeybindingService = class StandaloneKeybindingService extends AbstractKeybindingService {\n    constructor(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n        super(contextKeyService, commandService, telemetryService, notificationService, logService);\n        this._cachedResolver = null;\n        this._dynamicKeybindings = [];\n        this._domNodeListeners = [];\n        const addContainer = (domNode) => {\n            const disposables = new DisposableStore();\n            // for standard keybindings\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                    keyEvent.stopPropagation();\n                }\n            }));\n            // for single modifier chord keybindings (e.g. shift shift)\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                }\n            }));\n            this._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n        };\n        const removeContainer = (domNode) => {\n            for (let i = 0; i < this._domNodeListeners.length; i++) {\n                const domNodeListeners = this._domNodeListeners[i];\n                if (domNodeListeners.domNode === domNode) {\n                    this._domNodeListeners.splice(i, 1);\n                    domNodeListeners.dispose();\n                }\n            }\n        };\n        const addCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(56 /* EditorOption.inDiffEditor */)) {\n                return;\n            }\n            addContainer(codeEditor.getContainerDomNode());\n        };\n        const removeCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(56 /* EditorOption.inDiffEditor */)) {\n                return;\n            }\n            removeContainer(codeEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n        this._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n        codeEditorService.listCodeEditors().forEach(addCodeEditor);\n        const addDiffEditor = (diffEditor) => {\n            addContainer(diffEditor.getContainerDomNode());\n        };\n        const removeDiffEditor = (diffEditor) => {\n            removeContainer(diffEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n        this._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n        codeEditorService.listDiffEditors().forEach(addDiffEditor);\n    }\n    addDynamicKeybinding(command, keybinding, handler, when) {\n        return combinedDisposable(CommandsRegistry.registerCommand(command, handler), this.addDynamicKeybindings([{\n                keybinding,\n                command,\n                when\n            }]));\n    }\n    addDynamicKeybindings(rules) {\n        const entries = rules.map((rule) => {\n            var _a, _b;\n            const keybinding = createKeybinding(rule.keybinding, OS);\n            return {\n                keybinding: (_a = keybinding === null || keybinding === void 0 ? void 0 : keybinding.parts) !== null && _a !== void 0 ? _a : null,\n                command: (_b = rule.command) !== null && _b !== void 0 ? _b : null,\n                commandArgs: rule.commandArgs,\n                when: rule.when,\n                weight1: 1000,\n                weight2: 0,\n                extensionId: null,\n                isBuiltinExtension: false\n            };\n        });\n        this._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n        this.updateResolver();\n        return toDisposable(() => {\n            // Search the first entry and remove them all since they will be contiguous\n            for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n                if (this._dynamicKeybindings[i] === entries[0]) {\n                    this._dynamicKeybindings.splice(i, entries.length);\n                    this.updateResolver();\n                    return;\n                }\n            }\n        });\n    }\n    updateResolver() {\n        this._cachedResolver = null;\n        this._onDidUpdateKeybindings.fire();\n    }\n    _getResolver() {\n        if (!this._cachedResolver) {\n            const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n            const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n            this._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n        }\n        return this._cachedResolver;\n    }\n    _documentHasFocus() {\n        return document.hasFocus();\n    }\n    _toNormalizedKeybindingItems(items, isDefault) {\n        const result = [];\n        let resultLen = 0;\n        for (const item of items) {\n            const when = item.when || undefined;\n            const keybinding = item.keybinding;\n            if (!keybinding) {\n                // This might be a removal keybinding item in user settings => accept it\n                result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n            }\n            else {\n                const resolvedKeybindings = USLayoutResolvedKeybinding.resolveUserBinding(keybinding, OS);\n                for (const resolvedKeybinding of resolvedKeybindings) {\n                    result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n                }\n            }\n        }\n        return result;\n    }\n    resolveKeyboardEvent(keyboardEvent) {\n        const keybinding = new SimpleKeybinding(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode).toChord();\n        return new USLayoutResolvedKeybinding(keybinding, OS);\n    }\n};\nStandaloneKeybindingService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ICommandService),\n    __param(2, ITelemetryService),\n    __param(3, INotificationService),\n    __param(4, ILogService),\n    __param(5, ICodeEditorService)\n], StandaloneKeybindingService);\nexport { StandaloneKeybindingService };\nclass DomNodeListeners extends Disposable {\n    constructor(domNode, disposables) {\n        super();\n        this.domNode = domNode;\n        this._register(disposables);\n    }\n}\nfunction isConfigurationOverrides(thing) {\n    return thing\n        && typeof thing === 'object'\n        && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n        && (!thing.resource || thing.resource instanceof URI);\n}\nexport class StandaloneConfigurationService {\n    constructor() {\n        this._onDidChangeConfiguration = new Emitter();\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel(), new ConfigurationModel(), new ConfigurationModel());\n    }\n    getValue(arg1, arg2) {\n        const section = typeof arg1 === 'string' ? arg1 : undefined;\n        const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n        return this._configuration.getValue(section, overrides, undefined);\n    }\n    updateValues(values) {\n        const previous = { data: this._configuration.toData() };\n        const changedKeys = [];\n        for (const entry of values) {\n            const [key, value] = entry;\n            if (this.getValue(key) === value) {\n                continue;\n            }\n            this._configuration.updateValue(key, value);\n            changedKeys.push(key);\n        }\n        if (changedKeys.length > 0) {\n            const configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration);\n            configurationChangeEvent.source = 8 /* ConfigurationTarget.MEMORY */;\n            configurationChangeEvent.sourceConfig = null;\n            this._onDidChangeConfiguration.fire(configurationChangeEvent);\n        }\n        return Promise.resolve();\n    }\n    updateValue(key, value, arg3, arg4) {\n        return this.updateValues([[key, value]]);\n    }\n    inspect(key, options = {}) {\n        return this._configuration.inspect(key, options, undefined);\n    }\n}\nlet StandaloneResourceConfigurationService = class StandaloneResourceConfigurationService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n        this._onDidChangeConfiguration = new Emitter();\n        this.configurationService.onDidChangeConfiguration((e) => {\n            this._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration) });\n        });\n    }\n    getValue(resource, arg2, arg3) {\n        const position = Pos.isIPosition(arg2) ? arg2 : null;\n        const section = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n        if (typeof section === 'undefined') {\n            return this.configurationService.getValue();\n        }\n        return this.configurationService.getValue(section);\n    }\n};\nStandaloneResourceConfigurationService = __decorate([\n    __param(0, IConfigurationService)\n], StandaloneResourceConfigurationService);\nlet StandaloneResourcePropertiesService = class StandaloneResourcePropertiesService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n    }\n    getEOL(resource, language) {\n        const eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n    }\n};\nStandaloneResourcePropertiesService = __decorate([\n    __param(0, IConfigurationService)\n], StandaloneResourcePropertiesService);\nclass StandaloneTelemetryService {\n    publicLog(eventName, data) {\n        return Promise.resolve(undefined);\n    }\n    publicLog2(eventName, data) {\n        return this.publicLog(eventName, data);\n    }\n}\nclass StandaloneWorkspaceContextService {\n    constructor() {\n        const resource = URI.from({ scheme: StandaloneWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n        this.workspace = { id: '4064f6ec-cb38-4ad0-af64-ee6467e63c82', folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n    }\n    getWorkspace() {\n        return this.workspace;\n    }\n    getWorkspaceFolder(resource) {\n        return resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n    }\n}\nStandaloneWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n    if (!source) {\n        return;\n    }\n    if (!(configurationService instanceof StandaloneConfigurationService)) {\n        return;\n    }\n    const toUpdate = [];\n    Object.keys(source).forEach((key) => {\n        if (isEditorConfigurationKey(key)) {\n            toUpdate.push([`editor.${key}`, source[key]]);\n        }\n        if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n            toUpdate.push([`diffEditor.${key}`, source[key]]);\n        }\n    });\n    if (toUpdate.length > 0) {\n        configurationService.updateValues(toUpdate);\n    }\n}\nlet StandaloneBulkEditService = class StandaloneBulkEditService {\n    constructor(_modelService) {\n        this._modelService = _modelService;\n        //\n    }\n    hasPreviewHandler() {\n        return false;\n    }\n    apply(edits, _options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const textEdits = new Map();\n            for (const edit of edits) {\n                if (!(edit instanceof ResourceTextEdit)) {\n                    throw new Error('bad edit - only text edits are supported');\n                }\n                const model = this._modelService.getModel(edit.resource);\n                if (!model) {\n                    throw new Error('bad edit - model not found');\n                }\n                if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n                    throw new Error('bad state - model changed in the meantime');\n                }\n                let array = textEdits.get(model);\n                if (!array) {\n                    array = [];\n                    textEdits.set(model, array);\n                }\n                array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n            }\n            let totalEdits = 0;\n            let totalFiles = 0;\n            for (const [model, edits] of textEdits) {\n                model.pushStackElement();\n                model.pushEditOperations([], edits, () => []);\n                model.pushStackElement();\n                totalFiles += 1;\n                totalEdits += edits.length;\n            }\n            return {\n                ariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles)\n            };\n        });\n    }\n};\nStandaloneBulkEditService = __decorate([\n    __param(0, IModelService)\n], StandaloneBulkEditService);\nclass StandaloneUriLabelService {\n    getUriLabel(resource, options) {\n        if (resource.scheme === 'file') {\n            return resource.fsPath;\n        }\n        return resource.path;\n    }\n    getUriBasenameLabel(resource) {\n        return basename(resource);\n    }\n}\nlet StandaloneContextViewService = class StandaloneContextViewService extends ContextViewService {\n    constructor(layoutService, _codeEditorService) {\n        super(layoutService);\n        this._codeEditorService = _codeEditorService;\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (!container) {\n            const codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n            if (codeEditor) {\n                container = codeEditor.getContainerDomNode();\n            }\n        }\n        return super.showContextView(delegate, container, shadowRoot);\n    }\n};\nStandaloneContextViewService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ICodeEditorService)\n], StandaloneContextViewService);\nclass StandaloneWorkspaceTrustManagementService {\n    constructor() {\n        this._neverEmitter = new Emitter();\n        this.onDidChangeTrust = this._neverEmitter.event;\n    }\n    isWorkspaceTrusted() {\n        return true;\n    }\n}\nclass StandaloneLanguageService extends LanguageService {\n    constructor() {\n        super();\n    }\n}\nclass StandaloneLogService extends LogService {\n    constructor() {\n        super(new ConsoleLogger());\n    }\n}\nlet StandaloneContextMenuService = class StandaloneContextMenuService extends ContextMenuService {\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, themeService) {\n        super(telemetryService, notificationService, contextViewService, keybindingService, themeService);\n        this.configure({ blockMouse: false }); // we do not want that in the standalone editor\n    }\n};\nStandaloneContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService)\n], StandaloneContextMenuService);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService);\nregisterSingleton(ILabelService, StandaloneUriLabelService);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService);\nregisterSingleton(IDialogService, StandaloneDialogService);\nregisterSingleton(INotificationService, StandaloneNotificationService);\nregisterSingleton(IMarkerService, MarkerService);\nregisterSingleton(ILanguageService, StandaloneLanguageService);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService);\nregisterSingleton(ILogService, StandaloneLogService);\nregisterSingleton(IModelService, ModelService);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService);\nregisterSingleton(IContextKeyService, ContextKeyService);\nregisterSingleton(IProgressService, StandaloneProgressService);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService);\nregisterSingleton(IStorageService, InMemoryStorageService);\nregisterSingleton(IEditorWorkerService, EditorWorkerService);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService);\nregisterSingleton(ITextModelService, StandaloneTextModelService);\nregisterSingleton(IAccessibilityService, AccessibilityService);\nregisterSingleton(IListService, ListService);\nregisterSingleton(ICommandService, StandaloneCommandService);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService);\nregisterSingleton(IContextViewService, StandaloneContextViewService);\nregisterSingleton(IOpenerService, OpenerService);\nregisterSingleton(IClipboardService, BrowserClipboardService);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService);\nregisterSingleton(IMenuService, MenuService);\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport var StandaloneServices;\n(function (StandaloneServices) {\n    const serviceCollection = new ServiceCollection();\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n        serviceCollection.set(id, descriptor);\n    }\n    const instantiationService = new InstantiationService(serviceCollection, true);\n    serviceCollection.set(IInstantiationService, instantiationService);\n    function get(serviceId) {\n        const r = serviceCollection.get(serviceId);\n        if (!r) {\n            throw new Error('Missing service ' + serviceId);\n        }\n        if (r instanceof SyncDescriptor) {\n            return instantiationService.invokeFunction((accessor) => accessor.get(serviceId));\n        }\n        else {\n            return r;\n        }\n    }\n    StandaloneServices.get = get;\n    let initialized = false;\n    function initialize(overrides) {\n        if (initialized) {\n            return instantiationService;\n        }\n        initialized = true;\n        // Add singletons that were registered after this module loaded\n        for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n            if (!serviceCollection.get(id)) {\n                serviceCollection.set(id, descriptor);\n            }\n        }\n        // Initialize the service collection with the overrides, but only if the\n        // service was not instantiated in the meantime.\n        for (const serviceId in overrides) {\n            if (overrides.hasOwnProperty(serviceId)) {\n                const serviceIdentifier = createDecorator(serviceId);\n                const r = serviceCollection.get(serviceIdentifier);\n                if (r instanceof SyncDescriptor) {\n                    serviceCollection.set(serviceIdentifier, overrides[serviceId]);\n                }\n            }\n        }\n        return instantiationService;\n    }\n    StandaloneServices.initialize = initialize;\n})(StandaloneServices || (StandaloneServices = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}