{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { $, append, clearNode, createStyleSheet, h, hasParentWithClass } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isButton, isInputElement, isMonacoEditor, List, MouseController } from '../list/listWidget.js';\nimport { Toggle } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n  constructor(data) {\n    super(data.elements.map(node => node.element));\n    this.data = data;\n  }\n}\nfunction asTreeDragAndDropData(data) {\n  if (data instanceof ElementsDragAndDropData) {\n    return new TreeElementsDragAndDropData(data);\n  }\n  return data;\n}\nclass TreeNodeListDragAndDrop {\n  constructor(modelProvider, dnd) {\n    this.modelProvider = modelProvider;\n    this.dnd = dnd;\n    this.autoExpandDisposable = Disposable.None;\n  }\n  getDragURI(node) {\n    return this.dnd.getDragURI(node.element);\n  }\n  getDragLabel(nodes, originalEvent) {\n    if (this.dnd.getDragLabel) {\n      return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n    }\n    return undefined;\n  }\n  onDragStart(data, originalEvent) {\n    var _a, _b;\n    (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n  }\n  onDragOver(data, targetNode, targetIndex, originalEvent) {\n    let raw = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n    if (didChangeAutoExpandNode) {\n      this.autoExpandDisposable.dispose();\n      this.autoExpandNode = targetNode;\n    }\n    if (typeof targetNode === 'undefined') {\n      return result;\n    }\n    if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n      this.autoExpandDisposable = disposableTimeout(() => {\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        if (model.isCollapsed(ref)) {\n          model.setCollapsed(ref, false);\n        }\n        this.autoExpandNode = undefined;\n      }, 500);\n    }\n    if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n      if (!raw) {\n        const accept = typeof result === 'boolean' ? result : result.accept;\n        const effect = typeof result === 'boolean' ? undefined : result.effect;\n        return {\n          accept,\n          effect,\n          feedback: [targetIndex]\n        };\n      }\n      return result;\n    }\n    if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n      const model = this.modelProvider();\n      const ref = model.getNodeLocation(targetNode);\n      const parentRef = model.getParentNodeLocation(ref);\n      const parentNode = model.getNode(parentRef);\n      const parentIndex = parentRef && model.getListIndex(parentRef);\n      return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n    }\n    const model = this.modelProvider();\n    const ref = model.getNodeLocation(targetNode);\n    const start = model.getListIndex(ref);\n    const length = model.getListRenderCount(ref);\n    return Object.assign(Object.assign({}, result), {\n      feedback: range(start, start + length)\n    });\n  }\n  drop(data, targetNode, targetIndex, originalEvent) {\n    this.autoExpandDisposable.dispose();\n    this.autoExpandNode = undefined;\n    this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n  }\n  onDragEnd(originalEvent) {\n    var _a, _b;\n    (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n  }\n}\nfunction asListOptions(modelProvider, options) {\n  return options && Object.assign(Object.assign({}, options), {\n    identityProvider: options.identityProvider && {\n      getId(el) {\n        return options.identityProvider.getId(el.element);\n      }\n    },\n    dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd),\n    multipleSelectionController: options.multipleSelectionController && {\n      isSelectionSingleChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), {\n          element: e.element\n        }));\n      },\n      isSelectionRangeChangeEvent(e) {\n        return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), {\n          element: e.element\n        }));\n      }\n    },\n    accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), {\n      getSetSize(node) {\n        const model = modelProvider();\n        const ref = model.getNodeLocation(node);\n        const parentRef = model.getParentNodeLocation(ref);\n        const parentNode = model.getNode(parentRef);\n        return parentNode.visibleChildrenCount;\n      },\n      getPosInSet(node) {\n        return node.visibleChildIndex + 1;\n      },\n      isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? node => {\n        return options.accessibilityProvider.isChecked(node.element);\n      } : undefined,\n      getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? node => {\n        return options.accessibilityProvider.getRole(node.element);\n      } : () => 'treeitem',\n      getAriaLabel(e) {\n        return options.accessibilityProvider.getAriaLabel(e.element);\n      },\n      getWidgetAriaLabel() {\n        return options.accessibilityProvider.getWidgetAriaLabel();\n      },\n      getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree',\n      getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? node => options.accessibilityProvider.getAriaLevel(node.element) : node => {\n        return node.depth;\n      },\n      getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n        return options.accessibilityProvider.getActiveDescendantId(node.element);\n      })\n    }),\n    keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), {\n      getKeyboardNavigationLabel(node) {\n        return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n      }\n    })\n  });\n}\nexport class ComposedTreeDelegate {\n  constructor(delegate) {\n    this.delegate = delegate;\n  }\n  getHeight(element) {\n    return this.delegate.getHeight(element.element);\n  }\n  getTemplateId(element) {\n    return this.delegate.getTemplateId(element.element);\n  }\n  hasDynamicHeight(element) {\n    return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n  }\n  setDynamicHeight(element, height) {\n    var _a, _b;\n    (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n  }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n  RenderIndentGuides[\"None\"] = \"none\";\n  RenderIndentGuides[\"OnHover\"] = \"onHover\";\n  RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n  constructor(onDidChange) {\n    let _elements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    this._elements = _elements;\n    this.disposables = new DisposableStore();\n    this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n  }\n  get elements() {\n    return this._elements;\n  }\n  dispose() {\n    this.disposables.dispose();\n  }\n}\nclass TreeRenderer {\n  constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var _a;\n    this.renderer = renderer;\n    this.modelProvider = modelProvider;\n    this.activeNodes = activeNodes;\n    this.renderedElements = new Map();\n    this.renderedNodes = new Map();\n    this.indent = TreeRenderer.DefaultIndent;\n    this.hideTwistiesOfChildlessElements = false;\n    this.shouldRenderIndentGuides = false;\n    this.renderedIndentGuides = new SetMap();\n    this.activeIndentNodes = new Set();\n    this.indentGuidesDisposable = Disposable.None;\n    this.disposables = new DisposableStore();\n    this.templateId = renderer.templateId;\n    this.updateOptions(options);\n    Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n    (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n  }\n  updateOptions() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof options.indent !== 'undefined') {\n      this.indent = clamp(options.indent, 0, 40);\n    }\n    if (typeof options.renderIndentGuides !== 'undefined') {\n      const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n      if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n        this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n        this.indentGuidesDisposable.dispose();\n        if (shouldRenderIndentGuides) {\n          const disposables = new DisposableStore();\n          this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n          this.indentGuidesDisposable = disposables;\n          this._onDidChangeActiveNodes(this.activeNodes.elements);\n        }\n      }\n    }\n    if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n      this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n    }\n  }\n  renderTemplate(container) {\n    const el = append(container, $('.monaco-tl-row'));\n    const indent = append(el, $('.monaco-tl-indent'));\n    const twistie = append(el, $('.monaco-tl-twistie'));\n    const contents = append(el, $('.monaco-tl-contents'));\n    const templateData = this.renderer.renderTemplate(contents);\n    return {\n      container,\n      indent,\n      twistie,\n      indentGuidesDisposable: Disposable.None,\n      templateData\n    };\n  }\n  renderElement(node, index, templateData, height) {\n    if (typeof height === 'number') {\n      this.renderedNodes.set(node, {\n        templateData,\n        height\n      });\n      this.renderedElements.set(node.element, node);\n    }\n    const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n    templateData.twistie.style.paddingLeft = `${indent}px`;\n    templateData.indent.style.width = `${indent + this.indent - 16}px`;\n    this.renderTwistie(node, templateData);\n    if (typeof height === 'number') {\n      this.renderIndentGuides(node, templateData);\n    }\n    this.renderer.renderElement(node, index, templateData.templateData, height);\n  }\n  disposeElement(node, index, templateData, height) {\n    var _a, _b;\n    templateData.indentGuidesDisposable.dispose();\n    (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n    if (typeof height === 'number') {\n      this.renderedNodes.delete(node);\n      this.renderedElements.delete(node.element);\n    }\n  }\n  disposeTemplate(templateData) {\n    this.renderer.disposeTemplate(templateData.templateData);\n  }\n  onDidChangeTwistieState(element) {\n    const node = this.renderedElements.get(element);\n    if (!node) {\n      return;\n    }\n    this.onDidChangeNodeTwistieState(node);\n  }\n  onDidChangeNodeTwistieState(node) {\n    const data = this.renderedNodes.get(node);\n    if (!data) {\n      return;\n    }\n    this.renderTwistie(node, data.templateData);\n    this._onDidChangeActiveNodes(this.activeNodes.elements);\n    this.renderIndentGuides(node, data.templateData);\n  }\n  renderTwistie(node, templateData) {\n    templateData.twistie.classList.remove(...Codicon.treeItemExpanded.classNamesArray);\n    let twistieRendered = false;\n    if (this.renderer.renderTwistie) {\n      twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n    }\n    if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n      if (!twistieRendered) {\n        templateData.twistie.classList.add(...Codicon.treeItemExpanded.classNamesArray);\n      }\n      templateData.twistie.classList.add('collapsible');\n      templateData.twistie.classList.toggle('collapsed', node.collapsed);\n    } else {\n      templateData.twistie.classList.remove('collapsible', 'collapsed');\n    }\n    if (node.collapsible) {\n      templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n    } else {\n      templateData.container.removeAttribute('aria-expanded');\n    }\n  }\n  renderIndentGuides(target, templateData) {\n    clearNode(templateData.indent);\n    templateData.indentGuidesDisposable.dispose();\n    if (!this.shouldRenderIndentGuides) {\n      return;\n    }\n    const disposableStore = new DisposableStore();\n    const model = this.modelProvider();\n    let node = target;\n    while (true) {\n      const ref = model.getNodeLocation(node);\n      const parentRef = model.getParentNodeLocation(ref);\n      if (!parentRef) {\n        break;\n      }\n      const parent = model.getNode(parentRef);\n      const guide = $('.indent-guide', {\n        style: `width: ${this.indent}px`\n      });\n      if (this.activeIndentNodes.has(parent)) {\n        guide.classList.add('active');\n      }\n      if (templateData.indent.childElementCount === 0) {\n        templateData.indent.appendChild(guide);\n      } else {\n        templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n      }\n      this.renderedIndentGuides.add(parent, guide);\n      disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n      node = parent;\n    }\n    templateData.indentGuidesDisposable = disposableStore;\n  }\n  _onDidChangeActiveNodes(nodes) {\n    if (!this.shouldRenderIndentGuides) {\n      return;\n    }\n    const set = new Set();\n    const model = this.modelProvider();\n    nodes.forEach(node => {\n      const ref = model.getNodeLocation(node);\n      try {\n        const parentRef = model.getParentNodeLocation(ref);\n        if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n          set.add(node);\n        } else if (parentRef) {\n          set.add(model.getNode(parentRef));\n        }\n      } catch (_a) {\n        // noop\n      }\n    });\n    this.activeIndentNodes.forEach(node => {\n      if (!set.has(node)) {\n        this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n      }\n    });\n    set.forEach(node => {\n      if (!this.activeIndentNodes.has(node)) {\n        this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n      }\n    });\n    this.activeIndentNodes = set;\n  }\n  dispose() {\n    this.renderedNodes.clear();\n    this.renderedElements.clear();\n    this.indentGuidesDisposable.dispose();\n    dispose(this.disposables);\n  }\n}\nTreeRenderer.DefaultIndent = 8;\nclass FindFilter {\n  constructor(tree, keyboardNavigationLabelProvider, _filter) {\n    this.tree = tree;\n    this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n    this._filter = _filter;\n    this._totalCount = 0;\n    this._matchCount = 0;\n    this._pattern = '';\n    this._lowercasePattern = '';\n    this.disposables = new DisposableStore();\n    tree.onWillRefilter(this.reset, this, this.disposables);\n  }\n  get totalCount() {\n    return this._totalCount;\n  }\n  get matchCount() {\n    return this._matchCount;\n  }\n  filter(element, parentVisibility) {\n    let visibility = 1 /* TreeVisibility.Visible */;\n    if (this._filter) {\n      const result = this._filter.filter(element, parentVisibility);\n      if (typeof result === 'boolean') {\n        visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n      } else if (isFilterResult(result)) {\n        visibility = getVisibleState(result.visibility);\n      } else {\n        visibility = result;\n      }\n      if (visibility === 0 /* TreeVisibility.Hidden */) {\n        return false;\n      }\n    }\n    this._totalCount++;\n    if (!this._pattern) {\n      this._matchCount++;\n      return {\n        data: FuzzyScore.Default,\n        visibility\n      };\n    }\n    const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n    const labels = Array.isArray(label) ? label : [label];\n    for (const l of labels) {\n      const labelStr = l && l.toString();\n      if (typeof labelStr === 'undefined') {\n        return {\n          data: FuzzyScore.Default,\n          visibility\n        };\n      }\n      const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, {\n        firstMatchCanBeWeak: true,\n        boostFullMatch: true\n      });\n      if (score) {\n        this._matchCount++;\n        return labels.length === 1 ? {\n          data: score,\n          visibility\n        } : {\n          data: {\n            label: labelStr,\n            score: score\n          },\n          visibility\n        };\n      }\n    }\n    if (this.tree.findMode === TreeFindMode.Filter) {\n      return 2 /* TreeVisibility.Recurse */;\n    } else {\n      return {\n        data: FuzzyScore.Default,\n        visibility\n      };\n    }\n  }\n  reset() {\n    this._totalCount = 0;\n    this._matchCount = 0;\n  }\n  dispose() {\n    dispose(this.disposables);\n  }\n}\nexport class ModeToggle extends Toggle {\n  constructor(opts) {\n    var _a;\n    super({\n      icon: Codicon.filter,\n      title: localize('filter', \"Filter\"),\n      isChecked: (_a = opts === null || opts === void 0 ? void 0 : opts.isChecked) !== null && _a !== void 0 ? _a : false,\n      inputActiveOptionBorder: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionBorder,\n      inputActiveOptionForeground: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionForeground,\n      inputActiveOptionBackground: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionBackground\n    });\n  }\n}\nexport var TreeFindMode;\n(function (TreeFindMode) {\n  TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n  TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nclass FindWidget extends Disposable {\n  constructor(container, tree, contextViewProvider, mode, options) {\n    super();\n    this.tree = tree;\n    this.elements = h('.monaco-tree-type-filter', [h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', {\n      tabIndex: 0\n    }), h('.monaco-tree-type-filter-input@findInput'), h('.monaco-tree-type-filter-actionbar@actionbar')]);\n    this.width = 0;\n    this.right = 0;\n    this._onDidDisable = new Emitter();\n    container.appendChild(this.elements.root);\n    this._register(toDisposable(() => container.removeChild(this.elements.root)));\n    this.modeToggle = this._register(new ModeToggle(Object.assign(Object.assign({}, options), {\n      isChecked: mode === TreeFindMode.Filter\n    })));\n    this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n    this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, false, {\n      label: localize('type to search', \"Type to search\"),\n      additionalToggles: [this.modeToggle]\n    }));\n    this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n    this.mode = mode;\n    const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n    const onKeyDown = this._register(Event.chain(emitter.event)).map(e => new StandardKeyboardEvent(e)).event;\n    this._register(onKeyDown(e => {\n      switch (e.keyCode) {\n        case 18 /* KeyCode.DownArrow */:\n          e.preventDefault();\n          e.stopPropagation();\n          this.tree.domFocus();\n          return;\n      }\n    }));\n    const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n    this.actionbar.push(closeAction, {\n      icon: true,\n      label: false\n    });\n    const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n    this._register(onGrabMouseDown.event(e => {\n      const disposables = new DisposableStore();\n      const onWindowMouseMove = disposables.add(new DomEmitter(window, 'mousemove'));\n      const onWindowMouseUp = disposables.add(new DomEmitter(window, 'mouseup'));\n      const startRight = this.right;\n      const startX = e.pageX;\n      this.elements.grab.classList.add('grabbing');\n      const update = e => {\n        const deltaX = e.pageX - startX;\n        this.right = startRight - deltaX;\n        this.layout();\n      };\n      disposables.add(onWindowMouseMove.event(update));\n      disposables.add(onWindowMouseUp.event(e => {\n        update(e);\n        this.elements.grab.classList.remove('grabbing');\n        disposables.dispose();\n      }));\n    }));\n    const onGrabKeyDown = this._register(Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event)).map(e => new StandardKeyboardEvent(e)).event;\n    this._register(onGrabKeyDown(e => {\n      let right;\n      if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n        right = Number.POSITIVE_INFINITY;\n      } else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n        right = 0;\n      } else if (e.keyCode === 10 /* KeyCode.Space */) {\n        right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n      }\n      if (right !== undefined) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.right = right;\n        this.layout();\n      }\n    }));\n    this.onDidChangeValue = this.findInput.onDidChange;\n    this.style(options !== null && options !== void 0 ? options : {});\n  }\n  set mode(mode) {\n    this.modeToggle.checked = mode === TreeFindMode.Filter;\n    this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n  }\n  style(styles) {\n    this.findInput.style(styles);\n    if (styles.listFilterWidgetBackground) {\n      this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground.toString();\n    }\n    if (styles.listFilterWidgetShadow) {\n      this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n    }\n  }\n  layout() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.width;\n    this.width = width;\n    this.right = clamp(this.right, 0, Math.max(0, width - 212));\n    this.elements.root.style.right = `${this.right}px`;\n  }\n  showMessage(message) {\n    this.findInput.showMessage(message);\n  }\n  clearMessage() {\n    this.findInput.clearMessage();\n  }\n  dispose() {\n    const _super = Object.create(null, {\n      dispose: {\n        get: () => super.dispose\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      this._onDidDisable.fire();\n      this.elements.root.classList.add('disabled');\n      yield timeout(300);\n      _super.dispose.call(this);\n    });\n  }\n}\nclass FindController {\n  constructor(tree, model, view, filter, contextViewProvider) {\n    var _a;\n    this.tree = tree;\n    this.view = view;\n    this.filter = filter;\n    this.contextViewProvider = contextViewProvider;\n    this._pattern = '';\n    this.width = 0;\n    this._onDidChangeMode = new Emitter();\n    this.onDidChangeMode = this._onDidChangeMode.event;\n    this._onDidChangePattern = new Emitter();\n    this._onDidChangeOpenState = new Emitter();\n    this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n    this.enabledDisposables = new DisposableStore();\n    this.disposables = new DisposableStore();\n    this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n    model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n  }\n  get pattern() {\n    return this._pattern;\n  }\n  get mode() {\n    return this._mode;\n  }\n  set mode(mode) {\n    if (mode === this._mode) {\n      return;\n    }\n    this._mode = mode;\n    if (this.widget) {\n      this.widget.mode = this._mode;\n    }\n    this.tree.refilter();\n    this.render();\n    this._onDidChangeMode.fire(mode);\n  }\n  onDidSpliceModel() {\n    if (!this.widget || this.pattern.length === 0) {\n      return;\n    }\n    this.tree.refilter();\n    this.render();\n  }\n  render() {\n    var _a, _b;\n    const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n    if (this.pattern && noMatches) {\n      (_a = this.widget) === null || _a === void 0 ? void 0 : _a.showMessage({\n        type: 2 /* MessageType.WARNING */,\n        content: localize('not found', \"No elements found.\")\n      });\n    } else {\n      (_b = this.widget) === null || _b === void 0 ? void 0 : _b.clearMessage();\n    }\n  }\n  shouldAllowFocus(node) {\n    if (!this.widget || !this.pattern || this._mode === TreeFindMode.Filter) {\n      return true;\n    }\n    if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n      return true;\n    }\n    return !FuzzyScore.isDefault(node.filterData);\n  }\n  style(styles) {\n    var _a;\n    this.styles = styles;\n    (_a = this.widget) === null || _a === void 0 ? void 0 : _a.style(styles);\n  }\n  layout(width) {\n    var _a;\n    this.width = width;\n    (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n  }\n  dispose() {\n    this._onDidChangePattern.dispose();\n    this.enabledDisposables.dispose();\n    this.disposables.dispose();\n  }\n}\nfunction asTreeMouseEvent(event) {\n  let target = TreeMouseEventTarget.Unknown;\n  if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Twistie;\n  } else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n    target = TreeMouseEventTarget.Element;\n  } else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n    target = TreeMouseEventTarget.Filter;\n  }\n  return {\n    browserEvent: event.browserEvent,\n    element: event.element ? event.element.element : null,\n    target\n  };\n}\nfunction dfs(node, fn) {\n  fn(node);\n  node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n  constructor(getFirstViewElementWithTrait, identityProvider) {\n    this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n    this.identityProvider = identityProvider;\n    this.nodes = [];\n    this._onDidChange = new Emitter();\n    this.onDidChange = this._onDidChange.event;\n  }\n  get nodeSet() {\n    if (!this._nodeSet) {\n      this._nodeSet = this.createNodeSet();\n    }\n    return this._nodeSet;\n  }\n  set(nodes, browserEvent) {\n    if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n      return;\n    }\n    this._set(nodes, false, browserEvent);\n  }\n  _set(nodes, silent, browserEvent) {\n    this.nodes = [...nodes];\n    this.elements = undefined;\n    this._nodeSet = undefined;\n    if (!silent) {\n      const that = this;\n      this._onDidChange.fire({\n        get elements() {\n          return that.get();\n        },\n        browserEvent\n      });\n    }\n  }\n  get() {\n    if (!this.elements) {\n      this.elements = this.nodes.map(node => node.element);\n    }\n    return [...this.elements];\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  has(node) {\n    return this.nodeSet.has(node);\n  }\n  onDidModelSplice(_ref) {\n    let {\n      insertedNodes,\n      deletedNodes\n    } = _ref;\n    if (!this.identityProvider) {\n      const set = this.createNodeSet();\n      const visit = node => set.delete(node);\n      deletedNodes.forEach(node => dfs(node, visit));\n      this.set([...set.values()]);\n      return;\n    }\n    const deletedNodesIdSet = new Set();\n    const deletedNodesVisitor = node => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n    deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n    const insertedNodesMap = new Map();\n    const insertedNodesVisitor = node => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n    insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n    const nodes = [];\n    for (const node of this.nodes) {\n      const id = this.identityProvider.getId(node.element).toString();\n      const wasDeleted = deletedNodesIdSet.has(id);\n      if (!wasDeleted) {\n        nodes.push(node);\n      } else {\n        const insertedNode = insertedNodesMap.get(id);\n        if (insertedNode) {\n          nodes.push(insertedNode);\n        }\n      }\n    }\n    if (this.nodes.length > 0 && nodes.length === 0) {\n      const node = this.getFirstViewElementWithTrait();\n      if (node) {\n        nodes.push(node);\n      }\n    }\n    this._set(nodes, true);\n  }\n  createNodeSet() {\n    const set = new Set();\n    for (const node of this.nodes) {\n      set.add(node);\n    }\n    return set;\n  }\n}\nclass TreeNodeListMouseController extends MouseController {\n  constructor(list, tree) {\n    super(list);\n    this.tree = tree;\n  }\n  onViewPointer(e) {\n    if (isButton(e.browserEvent.target) || isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\n      return;\n    }\n    const node = e.element;\n    if (!node) {\n      return super.onViewPointer(e);\n    }\n    if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n      return super.onViewPointer(e);\n    }\n    const target = e.browserEvent.target;\n    const onTwistie = target.classList.contains('monaco-tl-twistie') || target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16;\n    let expandOnlyOnTwistieClick = false;\n    if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n      expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n    } else {\n      expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n    }\n    if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n      return super.onViewPointer(e);\n    }\n    if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n      return super.onViewPointer(e);\n    }\n    if (node.collapsible) {\n      const model = this.tree.model; // internal\n      const location = model.getNodeLocation(node);\n      const recursive = e.browserEvent.altKey;\n      this.tree.setFocus([location]);\n      model.setCollapsed(location, undefined, recursive);\n      if (expandOnlyOnTwistieClick && onTwistie) {\n        return;\n      }\n    }\n    super.onViewPointer(e);\n  }\n  onDoubleClick(e) {\n    const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n    if (onTwistie || !this.tree.expandOnDoubleClick) {\n      return;\n    }\n    super.onDoubleClick(e);\n  }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n  constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n    super(user, container, virtualDelegate, renderers, options);\n    this.focusTrait = focusTrait;\n    this.selectionTrait = selectionTrait;\n    this.anchorTrait = anchorTrait;\n  }\n  createMouseController(options) {\n    return new TreeNodeListMouseController(this, options.tree);\n  }\n  splice(start, deleteCount) {\n    let elements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    super.splice(start, deleteCount, elements);\n    if (elements.length === 0) {\n      return;\n    }\n    const additionalFocus = [];\n    const additionalSelection = [];\n    let anchor;\n    elements.forEach((node, index) => {\n      if (this.focusTrait.has(node)) {\n        additionalFocus.push(start + index);\n      }\n      if (this.selectionTrait.has(node)) {\n        additionalSelection.push(start + index);\n      }\n      if (this.anchorTrait.has(node)) {\n        anchor = start + index;\n      }\n    });\n    if (additionalFocus.length > 0) {\n      super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n    }\n    if (additionalSelection.length > 0) {\n      super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n    }\n    if (typeof anchor === 'number') {\n      super.setAnchor(anchor);\n    }\n  }\n  setFocus(indexes, browserEvent) {\n    let fromAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    super.setFocus(indexes, browserEvent);\n    if (!fromAPI) {\n      this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n    }\n  }\n  setSelection(indexes, browserEvent) {\n    let fromAPI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    super.setSelection(indexes, browserEvent);\n    if (!fromAPI) {\n      this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n    }\n  }\n  setAnchor(index) {\n    let fromAPI = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    super.setAnchor(index);\n    if (!fromAPI) {\n      if (typeof index === 'undefined') {\n        this.anchorTrait.set([]);\n      } else {\n        this.anchorTrait.set([this.element(index)]);\n      }\n    }\n  }\n}\nexport class AbstractTree {\n  constructor(_user, container, delegate, renderers) {\n    let _options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var _a;\n    this._user = _user;\n    this._options = _options;\n    this.eventBufferer = new EventBufferer();\n    this.onDidChangeFindOpenState = Event.None;\n    this.disposables = new DisposableStore();\n    this._onWillRefilter = new Emitter();\n    this.onWillRefilter = this._onWillRefilter.event;\n    this._onDidUpdateOptions = new Emitter();\n    const treeDelegate = new ComposedTreeDelegate(delegate);\n    const onDidChangeCollapseStateRelay = new Relay();\n    const onDidChangeActiveNodes = new Relay();\n    const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n    this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\n    for (const r of this.renderers) {\n      this.disposables.add(r);\n    }\n    let filter;\n    if (_options.keyboardNavigationLabelProvider) {\n      filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n      _options = Object.assign(Object.assign({}, _options), {\n        filter: filter\n      }); // TODO need typescript help here\n      this.disposables.add(filter);\n    }\n    this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n    this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n    this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n    this.view = new TreeNodeList(_user, container, treeDelegate, this.renderers, this.focus, this.selection, this.anchor, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), {\n      tree: this\n    }));\n    this.model = this.createModel(_user, this.view, _options);\n    onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n    const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n      this.eventBufferer.bufferEvents(() => {\n        this.focus.onDidModelSplice(e);\n        this.selection.onDidModelSplice(e);\n      });\n    }, this.disposables);\n    // Make sure the `forEach` always runs\n    onDidModelSplice(() => null, null, this.disposables);\n    // Active nodes can change when the model changes or when focus or selection change.\n    // We debounce it with 0 delay since these events may fire in the same stack and we only\n    // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n    // a nice to have UI feature.\n    onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange)).debounce(() => null, 0).map(() => {\n      const set = new Set();\n      for (const node of this.focus.getNodes()) {\n        set.add(node);\n      }\n      for (const node of this.selection.getNodes()) {\n        set.add(node);\n      }\n      return [...set.values()];\n    }).event;\n    if (_options.keyboardSupport !== false) {\n      const onKeyDown = Event.chain(this.view.onKeyDown).filter(e => !isInputElement(e.target)).map(e => new StandardKeyboardEvent(e));\n      onKeyDown.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */).on(this.onLeftArrow, this, this.disposables);\n      onKeyDown.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */).on(this.onRightArrow, this, this.disposables);\n      onKeyDown.filter(e => e.keyCode === 10 /* KeyCode.Space */).on(this.onSpace, this, this.disposables);\n    }\n    if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n      this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider);\n      this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n      this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n      this.disposables.add(this.findController);\n      this.onDidChangeFindMode = this.findController.onDidChangeMode;\n    } else {\n      this.onDidChangeFindMode = Event.None;\n    }\n    this.styleElement = createStyleSheet(this.view.getHTMLElement());\n    this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n  }\n  get onDidChangeFocus() {\n    return this.eventBufferer.wrapEvent(this.focus.onDidChange);\n  }\n  get onDidChangeSelection() {\n    return this.eventBufferer.wrapEvent(this.selection.onDidChange);\n  }\n  get onMouseDblClick() {\n    return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter);\n  }\n  get onPointer() {\n    return Event.map(this.view.onPointer, asTreeMouseEvent);\n  }\n  get onDidFocus() {\n    return this.view.onDidFocus;\n  }\n  get onDidChangeModel() {\n    return Event.signal(this.model.onDidSplice);\n  }\n  get onDidChangeCollapseState() {\n    return this.model.onDidChangeCollapseState;\n  }\n  get findMode() {\n    var _a, _b;\n    return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight;\n  }\n  set findMode(findMode) {\n    if (this.findController) {\n      this.findController.mode = findMode;\n    }\n  }\n  get expandOnDoubleClick() {\n    return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick;\n  }\n  get expandOnlyOnTwistieClick() {\n    return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick;\n  }\n  get onDidDispose() {\n    return this.view.onDidDispose;\n  }\n  updateOptions() {\n    let optionsUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n    for (const renderer of this.renderers) {\n      renderer.updateOptions(optionsUpdate);\n    }\n    this.view.updateOptions(this._options);\n    this._onDidUpdateOptions.fire(this._options);\n    this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n  }\n  get options() {\n    return this._options;\n  }\n  // Widget\n  getHTMLElement() {\n    return this.view.getHTMLElement();\n  }\n  get scrollTop() {\n    return this.view.scrollTop;\n  }\n  set scrollTop(scrollTop) {\n    this.view.scrollTop = scrollTop;\n  }\n  domFocus() {\n    this.view.domFocus();\n  }\n  layout(height, width) {\n    var _a;\n    this.view.layout(height, width);\n    if (isNumber(width)) {\n      (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n  }\n  style(styles) {\n    var _a;\n    const suffix = `.${this.view.domId}`;\n    const content = [];\n    if (styles.treeIndentGuidesStroke) {\n      content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(0.4)}; }`);\n      content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n    }\n    this.styleElement.textContent = content.join('\\n');\n    (_a = this.findController) === null || _a === void 0 ? void 0 : _a.style(styles);\n    this.view.style(styles);\n  }\n  // Tree navigation\n  getParentElement(location) {\n    const parentRef = this.model.getParentNodeLocation(location);\n    const parentNode = this.model.getNode(parentRef);\n    return parentNode.element;\n  }\n  getFirstElementChild(location) {\n    return this.model.getFirstElementChild(location);\n  }\n  // Tree\n  getNode(location) {\n    return this.model.getNode(location);\n  }\n  collapse(location) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return this.model.setCollapsed(location, true, recursive);\n  }\n  expand(location) {\n    let recursive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return this.model.setCollapsed(location, false, recursive);\n  }\n  isCollapsible(location) {\n    return this.model.isCollapsible(location);\n  }\n  setCollapsible(location, collapsible) {\n    return this.model.setCollapsible(location, collapsible);\n  }\n  isCollapsed(location) {\n    return this.model.isCollapsed(location);\n  }\n  refilter() {\n    this._onWillRefilter.fire(undefined);\n    this.model.refilter();\n  }\n  setSelection(elements, browserEvent) {\n    const nodes = elements.map(e => this.model.getNode(e));\n    this.selection.set(nodes, browserEvent);\n    const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n    this.view.setSelection(indexes, browserEvent, true);\n  }\n  getSelection() {\n    return this.selection.get();\n  }\n  setFocus(elements, browserEvent) {\n    const nodes = elements.map(e => this.model.getNode(e));\n    this.focus.set(nodes, browserEvent);\n    const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n    this.view.setFocus(indexes, browserEvent, true);\n  }\n  getFocus() {\n    return this.focus.get();\n  }\n  reveal(location, relativeTop) {\n    this.model.expandTo(location);\n    const index = this.model.getListIndex(location);\n    if (index === -1) {\n      return;\n    }\n    this.view.reveal(index, relativeTop);\n  }\n  // List\n  onLeftArrow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const didChange = this.model.setCollapsed(location, true);\n    if (!didChange) {\n      const parentLocation = this.model.getParentNodeLocation(location);\n      if (!parentLocation) {\n        return;\n      }\n      const parentListIndex = this.model.getListIndex(parentLocation);\n      this.view.reveal(parentListIndex);\n      this.view.setFocus([parentListIndex]);\n    }\n  }\n  onRightArrow(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const didChange = this.model.setCollapsed(location, false);\n    if (!didChange) {\n      if (!node.children.some(child => child.visible)) {\n        return;\n      }\n      const [focusedIndex] = this.view.getFocus();\n      const firstChildIndex = focusedIndex + 1;\n      this.view.reveal(firstChildIndex);\n      this.view.setFocus([firstChildIndex]);\n    }\n  }\n  onSpace(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    const nodes = this.view.getFocusedElements();\n    if (nodes.length === 0) {\n      return;\n    }\n    const node = nodes[0];\n    const location = this.model.getNodeLocation(node);\n    const recursive = e.browserEvent.altKey;\n    this.model.setCollapsed(location, undefined, recursive);\n  }\n  dispose() {\n    dispose(this.disposables);\n    this.view.dispose();\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","$","append","clearNode","createStyleSheet","h","hasParentWithClass","DomEmitter","StandardKeyboardEvent","ActionBar","FindInput","ElementsDragAndDropData","isButton","isInputElement","isMonacoEditor","List","MouseController","Toggle","getVisibleState","isFilterResult","TreeMouseEventTarget","Action","distinct","equals","range","disposableTimeout","timeout","Codicon","SetMap","Emitter","Event","EventBufferer","Relay","fuzzyScore","FuzzyScore","Disposable","DisposableStore","dispose","toDisposable","clamp","isNumber","localize","TreeElementsDragAndDropData","constructor","data","elements","map","node","element","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","None","getDragURI","getDragLabel","nodes","originalEvent","undefined","onDragStart","_a","_b","call","onDragOver","targetNode","targetIndex","raw","didChangeAutoExpandNode","autoExpandNode","autoExpand","model","ref","getNodeLocation","isCollapsed","setCollapsed","accept","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","start","length","getListRenderCount","Object","assign","drop","onDragEnd","asListOptions","options","identityProvider","getId","el","multipleSelectionController","isSelectionSingleChangeEvent","isSelectionRangeChangeEvent","accessibilityProvider","getSetSize","visibleChildrenCount","getPosInSet","visibleChildIndex","isChecked","getRole","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","depth","getActiveDescendantId","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","ComposedTreeDelegate","delegate","getHeight","getTemplateId","hasDynamicHeight","setDynamicHeight","height","RenderIndentGuides","EventCollection","onDidChange","_elements","disposables","forEach","TreeRenderer","renderer","onDidChangeCollapseState","activeNodes","renderedElements","Map","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","renderedIndentGuides","activeIndentNodes","Set","indentGuidesDisposable","templateId","updateOptions","onDidChangeNodeTwistieState","onDidChangeTwistieState","renderIndentGuides","_onDidChangeActiveNodes","renderTemplate","container","twistie","contents","templateData","renderElement","index","set","style","paddingLeft","width","renderTwistie","disposeElement","delete","disposeTemplate","get","classList","remove","treeItemExpanded","classNamesArray","twistieRendered","collapsible","add","toggle","collapsed","setAttribute","String","removeAttribute","target","disposableStore","parent","guide","has","childElementCount","appendChild","insertBefore","firstElementChild","children","line","clear","FindFilter","tree","_filter","_totalCount","_matchCount","_pattern","_lowercasePattern","onWillRefilter","reset","totalCount","matchCount","filter","parentVisibility","visibility","Default","label","labels","Array","isArray","l","labelStr","toString","score","toLowerCase","firstMatchCanBeWeak","boostFullMatch","findMode","TreeFindMode","Filter","ModeToggle","opts","icon","title","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","FindWidget","contextViewProvider","mode","tabIndex","right","_onDidDisable","root","_register","removeChild","modeToggle","onDidChangeMode","onChange","checked","Highlight","_store","findInput","additionalToggles","actionbar","emitter","inputBox","inputElement","onKeyDown","chain","event","keyCode","preventDefault","stopPropagation","domFocus","closeAction","push","onGrabMouseDown","grab","onWindowMouseMove","window","onWindowMouseUp","startRight","startX","pageX","update","deltaX","layout","onGrabKeyDown","Number","POSITIVE_INFINITY","onDidChangeValue","setPlaceHolder","styles","listFilterWidgetBackground","backgroundColor","listFilterWidgetShadow","boxShadow","Math","max","showMessage","message","clearMessage","_super","create","fire","FindController","view","_onDidChangeMode","_onDidChangePattern","_onDidChangeOpenState","onDidChangeOpenState","enabledDisposables","_mode","defaultFindMode","onDidSplice","onDidSpliceModel","pattern","widget","refilter","render","noMatches","type","content","shouldAllowFocus","isDefault","filterData","asTreeMouseEvent","Unknown","browserEvent","Twistie","Element","dfs","fn","child","Trait","getFirstViewElementWithTrait","_onDidChange","nodeSet","_nodeSet","createNodeSet","__forceEvent","_set","silent","that","getNodes","onDidModelSplice","insertedNodes","deletedNodes","visit","values","deletedNodesIdSet","deletedNodesVisitor","insertedNodesMap","insertedNodesVisitor","id","wasDeleted","insertedNode","TreeNodeListMouseController","list","onViewPointer","onTwistie","contains","offsetX","expandOnlyOnTwistieClick","detail","expandOnDoubleClick","location","recursive","altKey","setFocus","onDoubleClick","TreeNodeList","user","virtualDelegate","renderers","focusTrait","selectionTrait","anchorTrait","createMouseController","splice","deleteCount","additionalFocus","additionalSelection","anchor","getFocus","setSelection","getSelection","setAnchor","indexes","fromAPI","i","AbstractTree","_user","_options","eventBufferer","onDidChangeFindOpenState","_onWillRefilter","_onDidUpdateOptions","treeDelegate","onDidChangeCollapseStateRelay","onDidChangeActiveNodes","r","focus","getFocusedElements","selection","getSelectedElements","getAnchorElement","createModel","input","bufferEvents","any","debounce","keyboardSupport","on","onLeftArrow","onRightArrow","onSpace","findWidgetEnabled","findController","focusNavigationFilter","onDidChangeFindMode","styleElement","getHTMLElement","Always","onDidChangeFocus","wrapEvent","onDidChangeSelection","onMouseDblClick","onPointer","onDidFocus","onDidChangeModel","signal","onDidDispose","optionsUpdate","scrollTop","suffix","domId","treeIndentGuidesStroke","transparent","textContent","join","getParentElement","getFirstElementChild","collapse","expand","isCollapsible","setCollapsible","reveal","relativeTop","expandTo","didChange","parentLocation","parentListIndex","some","visible","focusedIndex","firstChildIndex"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, append, clearNode, createStyleSheet, h, hasParentWithClass } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isButton, isInputElement, isMonacoEditor, List, MouseController } from '../list/listWidget.js';\nimport { Toggle } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new TreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass TreeNodeListDragAndDrop {\n    constructor(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = Disposable.None;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = disposableTimeout(() => {\n                const model = this.modelProvider();\n                const ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                this.autoExpandNode = undefined;\n            }, 500);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n            if (!raw) {\n                const accept = typeof result === 'boolean' ? result : result.accept;\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept, effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n            const model = this.modelProvider();\n            const ref = model.getNodeLocation(targetNode);\n            const parentRef = model.getParentNodeLocation(ref);\n            const parentNode = model.getNode(parentRef);\n            const parentIndex = parentRef && model.getListIndex(parentRef);\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n        }\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        const start = model.getListIndex(ref);\n        const length = model.getListRenderCount(ref);\n        return Object.assign(Object.assign({}, result), { feedback: range(start, start + length) });\n    }\n    drop(data, targetNode, targetIndex, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n}\nfunction asListOptions(modelProvider, options) {\n    return options && Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            }\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getSetSize(node) {\n                const model = modelProvider();\n                const ref = model.getNodeLocation(node);\n                const parentRef = model.getParentNodeLocation(ref);\n                const parentNode = model.getNode(parentRef);\n                return parentNode.visibleChildrenCount;\n            },\n            getPosInSet(node) {\n                return node.visibleChildIndex + 1;\n            }, isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\n                return options.accessibilityProvider.isChecked(node.element);\n            } : undefined, getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\n                return options.accessibilityProvider.getRole(node.element);\n            } : () => 'treeitem', getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            }, getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\n                return node.depth;\n            }, getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            }) }), keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            } }) });\n}\nexport class ComposedTreeDelegate {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    getHeight(element) {\n        return this.delegate.getHeight(element.element);\n    }\n    getTemplateId(element) {\n        return this.delegate.getTemplateId(element.element);\n    }\n    hasDynamicHeight(element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n    setDynamicHeight(element, height) {\n        var _a, _b;\n        (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n    }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n    RenderIndentGuides[\"None\"] = \"none\";\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\n    RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n    constructor(onDidChange, _elements = []) {\n        this._elements = _elements;\n        this.disposables = new DisposableStore();\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n    }\n    get elements() {\n        return this._elements;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nclass TreeRenderer {\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, options = {}) {\n        var _a;\n        this.renderer = renderer;\n        this.modelProvider = modelProvider;\n        this.activeNodes = activeNodes;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.hideTwistiesOfChildlessElements = false;\n        this.shouldRenderIndentGuides = false;\n        this.renderedIndentGuides = new SetMap();\n        this.activeIndentNodes = new Set();\n        this.indentGuidesDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n        (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n    }\n    updateOptions(options = {}) {\n        if (typeof options.indent !== 'undefined') {\n            this.indent = clamp(options.indent, 0, 40);\n        }\n        if (typeof options.renderIndentGuides !== 'undefined') {\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n                this.indentGuidesDisposable.dispose();\n                if (shouldRenderIndentGuides) {\n                    const disposables = new DisposableStore();\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n                    this.indentGuidesDisposable = disposables;\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\n                }\n            }\n        }\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n        }\n    }\n    renderTemplate(container) {\n        const el = append(container, $('.monaco-tl-row'));\n        const indent = append(el, $('.monaco-tl-indent'));\n        const twistie = append(el, $('.monaco-tl-twistie'));\n        const contents = append(el, $('.monaco-tl-contents'));\n        const templateData = this.renderer.renderTemplate(contents);\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        if (typeof height === 'number') {\n            this.renderedNodes.set(node, { templateData, height });\n            this.renderedElements.set(node.element, node);\n        }\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.paddingLeft = `${indent}px`;\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\n        this.renderTwistie(node, templateData);\n        if (typeof height === 'number') {\n            this.renderIndentGuides(node, templateData);\n        }\n        this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        templateData.indentGuidesDisposable.dispose();\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n        if (typeof height === 'number') {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    onDidChangeTwistieState(element) {\n        const node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    }\n    onDidChangeNodeTwistieState(node) {\n        const data = this.renderedNodes.get(node);\n        if (!data) {\n            return;\n        }\n        this.renderTwistie(node, data.templateData);\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\n        this.renderIndentGuides(node, data.templateData);\n    }\n    renderTwistie(node, templateData) {\n        templateData.twistie.classList.remove(...Codicon.treeItemExpanded.classNamesArray);\n        let twistieRendered = false;\n        if (this.renderer.renderTwistie) {\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n            if (!twistieRendered) {\n                templateData.twistie.classList.add(...Codicon.treeItemExpanded.classNamesArray);\n            }\n            templateData.twistie.classList.add('collapsible');\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\n        }\n        else {\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\n        }\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n    }\n    renderIndentGuides(target, templateData) {\n        clearNode(templateData.indent);\n        templateData.indentGuidesDisposable.dispose();\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const disposableStore = new DisposableStore();\n        const model = this.modelProvider();\n        let node = target;\n        while (true) {\n            const ref = model.getNodeLocation(node);\n            const parentRef = model.getParentNodeLocation(ref);\n            if (!parentRef) {\n                break;\n            }\n            const parent = model.getNode(parentRef);\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\n            if (this.activeIndentNodes.has(parent)) {\n                guide.classList.add('active');\n            }\n            if (templateData.indent.childElementCount === 0) {\n                templateData.indent.appendChild(guide);\n            }\n            else {\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n            }\n            this.renderedIndentGuides.add(parent, guide);\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n            node = parent;\n        }\n        templateData.indentGuidesDisposable = disposableStore;\n    }\n    _onDidChangeActiveNodes(nodes) {\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const set = new Set();\n        const model = this.modelProvider();\n        nodes.forEach(node => {\n            const ref = model.getNodeLocation(node);\n            try {\n                const parentRef = model.getParentNodeLocation(ref);\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n                    set.add(node);\n                }\n                else if (parentRef) {\n                    set.add(model.getNode(parentRef));\n                }\n            }\n            catch (_a) {\n                // noop\n            }\n        });\n        this.activeIndentNodes.forEach(node => {\n            if (!set.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n            }\n        });\n        set.forEach(node => {\n            if (!this.activeIndentNodes.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n            }\n        });\n        this.activeIndentNodes = set;\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.indentGuidesDisposable.dispose();\n        dispose(this.disposables);\n    }\n}\nTreeRenderer.DefaultIndent = 8;\nclass FindFilter {\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this._pattern = '';\n        this._lowercasePattern = '';\n        this.disposables = new DisposableStore();\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    get totalCount() { return this._totalCount; }\n    get matchCount() { return this._matchCount; }\n    filter(element, parentVisibility) {\n        let visibility = 1 /* TreeVisibility.Visible */;\n        if (this._filter) {\n            const result = this._filter.filter(element, parentVisibility);\n            if (typeof result === 'boolean') {\n                visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n            }\n            else if (isFilterResult(result)) {\n                visibility = getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (!this._pattern) {\n            this._matchCount++;\n            return { data: FuzzyScore.Default, visibility };\n        }\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        const labels = Array.isArray(label) ? label : [label];\n        for (const l of labels) {\n            const labelStr = l && l.toString();\n            if (typeof labelStr === 'undefined') {\n                return { data: FuzzyScore.Default, visibility };\n            }\n            const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n            if (score) {\n                this._matchCount++;\n                return labels.length === 1 ?\n                    { data: score, visibility } :\n                    { data: { label: labelStr, score: score }, visibility };\n            }\n        }\n        if (this.tree.findMode === TreeFindMode.Filter) {\n            return 2 /* TreeVisibility.Recurse */;\n        }\n        else {\n            return { data: FuzzyScore.Default, visibility };\n        }\n    }\n    reset() {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    }\n    dispose() {\n        dispose(this.disposables);\n    }\n}\nexport class ModeToggle extends Toggle {\n    constructor(opts) {\n        var _a;\n        super({\n            icon: Codicon.filter,\n            title: localize('filter', \"Filter\"),\n            isChecked: (_a = opts === null || opts === void 0 ? void 0 : opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            inputActiveOptionBorder: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionBackground\n        });\n    }\n}\nexport var TreeFindMode;\n(function (TreeFindMode) {\n    TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n    TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nclass FindWidget extends Disposable {\n    constructor(container, tree, contextViewProvider, mode, options) {\n        super();\n        this.tree = tree;\n        this.elements = h('.monaco-tree-type-filter', [\n            h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', { tabIndex: 0 }),\n            h('.monaco-tree-type-filter-input@findInput'),\n            h('.monaco-tree-type-filter-actionbar@actionbar'),\n        ]);\n        this.width = 0;\n        this.right = 0;\n        this._onDidDisable = new Emitter();\n        container.appendChild(this.elements.root);\n        this._register(toDisposable(() => container.removeChild(this.elements.root)));\n        this.modeToggle = this._register(new ModeToggle(Object.assign(Object.assign({}, options), { isChecked: mode === TreeFindMode.Filter })));\n        this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n        this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, false, {\n            label: localize('type to search', \"Type to search\"),\n            additionalToggles: [this.modeToggle]\n        }));\n        this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n        this.mode = mode;\n        const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n        const onKeyDown = this._register(Event.chain(emitter.event))\n            .map(e => new StandardKeyboardEvent(e))\n            .event;\n        this._register(onKeyDown((e) => {\n            switch (e.keyCode) {\n                case 18 /* KeyCode.DownArrow */:\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.tree.domFocus();\n                    return;\n            }\n        }));\n        const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n        this.actionbar.push(closeAction, { icon: true, label: false });\n        const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n        this._register(onGrabMouseDown.event(e => {\n            const disposables = new DisposableStore();\n            const onWindowMouseMove = disposables.add(new DomEmitter(window, 'mousemove'));\n            const onWindowMouseUp = disposables.add(new DomEmitter(window, 'mouseup'));\n            const startRight = this.right;\n            const startX = e.pageX;\n            this.elements.grab.classList.add('grabbing');\n            const update = (e) => {\n                const deltaX = e.pageX - startX;\n                this.right = startRight - deltaX;\n                this.layout();\n            };\n            disposables.add(onWindowMouseMove.event(update));\n            disposables.add(onWindowMouseUp.event(e => {\n                update(e);\n                this.elements.grab.classList.remove('grabbing');\n                disposables.dispose();\n            }));\n        }));\n        const onGrabKeyDown = this._register(Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event))\n            .map(e => new StandardKeyboardEvent(e))\n            .event;\n        this._register(onGrabKeyDown((e) => {\n            let right;\n            if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n                right = Number.POSITIVE_INFINITY;\n            }\n            else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n                right = 0;\n            }\n            else if (e.keyCode === 10 /* KeyCode.Space */) {\n                right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n            }\n            if (right !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.right = right;\n                this.layout();\n            }\n        }));\n        this.onDidChangeValue = this.findInput.onDidChange;\n        this.style(options !== null && options !== void 0 ? options : {});\n    }\n    set mode(mode) {\n        this.modeToggle.checked = mode === TreeFindMode.Filter;\n        this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n    }\n    style(styles) {\n        this.findInput.style(styles);\n        if (styles.listFilterWidgetBackground) {\n            this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground.toString();\n        }\n        if (styles.listFilterWidgetShadow) {\n            this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n        }\n    }\n    layout(width = this.width) {\n        this.width = width;\n        this.right = clamp(this.right, 0, Math.max(0, width - 212));\n        this.elements.root.style.right = `${this.right}px`;\n    }\n    showMessage(message) {\n        this.findInput.showMessage(message);\n    }\n    clearMessage() {\n        this.findInput.clearMessage();\n    }\n    dispose() {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            this._onDidDisable.fire();\n            this.elements.root.classList.add('disabled');\n            yield timeout(300);\n            _super.dispose.call(this);\n        });\n    }\n}\nclass FindController {\n    constructor(tree, model, view, filter, contextViewProvider) {\n        var _a;\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.contextViewProvider = contextViewProvider;\n        this._pattern = '';\n        this.width = 0;\n        this._onDidChangeMode = new Emitter();\n        this.onDidChangeMode = this._onDidChangeMode.event;\n        this._onDidChangePattern = new Emitter();\n        this._onDidChangeOpenState = new Emitter();\n        this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n        this.enabledDisposables = new DisposableStore();\n        this.disposables = new DisposableStore();\n        this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    }\n    get pattern() { return this._pattern; }\n    get mode() { return this._mode; }\n    set mode(mode) {\n        if (mode === this._mode) {\n            return;\n        }\n        this._mode = mode;\n        if (this.widget) {\n            this.widget.mode = this._mode;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMode.fire(mode);\n    }\n    onDidSpliceModel() {\n        if (!this.widget || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    }\n    render() {\n        var _a, _b;\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && noMatches) {\n            (_a = this.widget) === null || _a === void 0 ? void 0 : _a.showMessage({ type: 2 /* MessageType.WARNING */, content: localize('not found', \"No elements found.\") });\n        }\n        else {\n            (_b = this.widget) === null || _b === void 0 ? void 0 : _b.clearMessage();\n        }\n    }\n    shouldAllowFocus(node) {\n        if (!this.widget || !this.pattern || this._mode === TreeFindMode.Filter) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !FuzzyScore.isDefault(node.filterData);\n    }\n    style(styles) {\n        var _a;\n        this.styles = styles;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.style(styles);\n    }\n    layout(width) {\n        var _a;\n        this.width = width;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n    dispose() {\n        this._onDidChangePattern.dispose();\n        this.enabledDisposables.dispose();\n        this.disposables.dispose();\n    }\n}\nfunction asTreeMouseEvent(event) {\n    let target = TreeMouseEventTarget.Unknown;\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Twistie;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Element;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n        target = TreeMouseEventTarget.Filter;\n    }\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null,\n        target\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n    constructor(getFirstViewElementWithTrait, identityProvider) {\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    get nodeSet() {\n        if (!this._nodeSet) {\n            this._nodeSet = this.createNodeSet();\n        }\n        return this._nodeSet;\n    }\n    set(nodes, browserEvent) {\n        if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n            return;\n        }\n        this._set(nodes, false, browserEvent);\n    }\n    _set(nodes, silent, browserEvent) {\n        this.nodes = [...nodes];\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        if (!silent) {\n            const that = this;\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n        }\n    }\n    get() {\n        if (!this.elements) {\n            this.elements = this.nodes.map(node => node.element);\n        }\n        return [...this.elements];\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    has(node) {\n        return this.nodeSet.has(node);\n    }\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\n        if (!this.identityProvider) {\n            const set = this.createNodeSet();\n            const visit = (node) => set.delete(node);\n            deletedNodes.forEach(node => dfs(node, visit));\n            this.set([...set.values()]);\n            return;\n        }\n        const deletedNodesIdSet = new Set();\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n        const insertedNodesMap = new Map();\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n        const nodes = [];\n        for (const node of this.nodes) {\n            const id = this.identityProvider.getId(node.element).toString();\n            const wasDeleted = deletedNodesIdSet.has(id);\n            if (!wasDeleted) {\n                nodes.push(node);\n            }\n            else {\n                const insertedNode = insertedNodesMap.get(id);\n                if (insertedNode) {\n                    nodes.push(insertedNode);\n                }\n            }\n        }\n        if (this.nodes.length > 0 && nodes.length === 0) {\n            const node = this.getFirstViewElementWithTrait();\n            if (node) {\n                nodes.push(node);\n            }\n        }\n        this._set(nodes, true);\n    }\n    createNodeSet() {\n        const set = new Set();\n        for (const node of this.nodes) {\n            set.add(node);\n        }\n        return set;\n    }\n}\nclass TreeNodeListMouseController extends MouseController {\n    constructor(list, tree) {\n        super(list);\n        this.tree = tree;\n    }\n    onViewPointer(e) {\n        if (isButton(e.browserEvent.target) ||\n            isInputElement(e.browserEvent.target) ||\n            isMonacoEditor(e.browserEvent.target)) {\n            return;\n        }\n        const node = e.element;\n        if (!node) {\n            return super.onViewPointer(e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return super.onViewPointer(e);\n        }\n        const target = e.browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\n        let expandOnlyOnTwistieClick = false;\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n            return super.onViewPointer(e);\n        }\n        if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n            return super.onViewPointer(e);\n        }\n        if (node.collapsible) {\n            const model = this.tree.model; // internal\n            const location = model.getNodeLocation(node);\n            const recursive = e.browserEvent.altKey;\n            this.tree.setFocus([location]);\n            model.setCollapsed(location, undefined, recursive);\n            if (expandOnlyOnTwistieClick && onTwistie) {\n                return;\n            }\n        }\n        super.onViewPointer(e);\n    }\n    onDoubleClick(e) {\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\n            return;\n        }\n        super.onDoubleClick(e);\n    }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n        super(user, container, virtualDelegate, renderers, options);\n        this.focusTrait = focusTrait;\n        this.selectionTrait = selectionTrait;\n        this.anchorTrait = anchorTrait;\n    }\n    createMouseController(options) {\n        return new TreeNodeListMouseController(this, options.tree);\n    }\n    splice(start, deleteCount, elements = []) {\n        super.splice(start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        const additionalFocus = [];\n        const additionalSelection = [];\n        let anchor;\n        elements.forEach((node, index) => {\n            if (this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n            if (this.anchorTrait.has(node)) {\n                anchor = start + index;\n            }\n        });\n        if (additionalFocus.length > 0) {\n            super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n        }\n        if (additionalSelection.length > 0) {\n            super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n        }\n        if (typeof anchor === 'number') {\n            super.setAnchor(anchor);\n        }\n    }\n    setFocus(indexes, browserEvent, fromAPI = false) {\n        super.setFocus(indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setSelection(indexes, browserEvent, fromAPI = false) {\n        super.setSelection(indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setAnchor(index, fromAPI = false) {\n        super.setAnchor(index);\n        if (!fromAPI) {\n            if (typeof index === 'undefined') {\n                this.anchorTrait.set([]);\n            }\n            else {\n                this.anchorTrait.set([this.element(index)]);\n            }\n        }\n    }\n}\nexport class AbstractTree {\n    constructor(_user, container, delegate, renderers, _options = {}) {\n        var _a;\n        this._user = _user;\n        this._options = _options;\n        this.eventBufferer = new EventBufferer();\n        this.onDidChangeFindOpenState = Event.None;\n        this.disposables = new DisposableStore();\n        this._onWillRefilter = new Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new Emitter();\n        const treeDelegate = new ComposedTreeDelegate(delegate);\n        const onDidChangeCollapseStateRelay = new Relay();\n        const onDidChangeActiveNodes = new Relay();\n        const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\n        for (const r of this.renderers) {\n            this.disposables.add(r);\n        }\n        let filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = Object.assign(Object.assign({}, _options), { filter: filter }); // TODO need typescript help here\n            this.disposables.add(filter);\n        }\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n        this.view = new TreeNodeList(_user, container, treeDelegate, this.renderers, this.focus, this.selection, this.anchor, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), { tree: this }));\n        this.model = this.createModel(_user, this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n            this.eventBufferer.bufferEvents(() => {\n                this.focus.onDidModelSplice(e);\n                this.selection.onDidModelSplice(e);\n            });\n        }, this.disposables);\n        // Make sure the `forEach` always runs\n        onDidModelSplice(() => null, null, this.disposables);\n        // Active nodes can change when the model changes or when focus or selection change.\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n        // a nice to have UI feature.\n        onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange))\n            .debounce(() => null, 0)\n            .map(() => {\n            const set = new Set();\n            for (const node of this.focus.getNodes()) {\n                set.add(node);\n            }\n            for (const node of this.selection.getNodes()) {\n                set.add(node);\n            }\n            return [...set.values()];\n        }).event;\n        if (_options.keyboardSupport !== false) {\n            const onKeyDown = Event.chain(this.view.onKeyDown)\n                .filter(e => !isInputElement(e.target))\n                .map(e => new StandardKeyboardEvent(e));\n            onKeyDown.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */).on(this.onLeftArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */).on(this.onRightArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 10 /* KeyCode.Space */).on(this.onSpace, this, this.disposables);\n        }\n        if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n            this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider);\n            this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n            this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n            this.disposables.add(this.findController);\n            this.onDidChangeFindMode = this.findController.onDidChangeMode;\n        }\n        else {\n            this.onDidChangeFindMode = Event.None;\n        }\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n    get onMouseDblClick() { return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter); }\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.view.onDidFocus; }\n    get onDidChangeModel() { return Event.signal(this.model.onDidSplice); }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get findMode() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight; }\n    set findMode(findMode) { if (this.findController) {\n        this.findController.mode = findMode;\n    } }\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\n    get onDidDispose() { return this.view.onDidDispose; }\n    updateOptions(optionsUpdate = {}) {\n        this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n        for (const renderer of this.renderers) {\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions(this._options);\n        this._onDidUpdateOptions.fire(this._options);\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get options() {\n        return this._options;\n    }\n    // Widget\n    getHTMLElement() {\n        return this.view.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.view.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.view.scrollTop = scrollTop;\n    }\n    domFocus() {\n        this.view.domFocus();\n    }\n    layout(height, width) {\n        var _a;\n        this.view.layout(height, width);\n        if (isNumber(width)) {\n            (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n        }\n    }\n    style(styles) {\n        var _a;\n        const suffix = `.${this.view.domId}`;\n        const content = [];\n        if (styles.treeIndentGuidesStroke) {\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(0.4)}; }`);\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n        }\n        this.styleElement.textContent = content.join('\\n');\n        (_a = this.findController) === null || _a === void 0 ? void 0 : _a.style(styles);\n        this.view.style(styles);\n    }\n    // Tree navigation\n    getParentElement(location) {\n        const parentRef = this.model.getParentNodeLocation(location);\n        const parentNode = this.model.getNode(parentRef);\n        return parentNode.element;\n    }\n    getFirstElementChild(location) {\n        return this.model.getFirstElementChild(location);\n    }\n    // Tree\n    getNode(location) {\n        return this.model.getNode(location);\n    }\n    collapse(location, recursive = false) {\n        return this.model.setCollapsed(location, true, recursive);\n    }\n    expand(location, recursive = false) {\n        return this.model.setCollapsed(location, false, recursive);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsible) {\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    refilter() {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.selection.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setSelection(indexes, browserEvent, true);\n    }\n    getSelection() {\n        return this.selection.get();\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.focus.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setFocus(indexes, browserEvent, true);\n    }\n    getFocus() {\n        return this.focus.get();\n    }\n    reveal(location, relativeTop) {\n        this.model.expandTo(location);\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        this.view.reveal(index, relativeTop);\n    }\n    // List\n    onLeftArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            const parentLocation = this.model.getParentNodeLocation(location);\n            if (!parentLocation) {\n                return;\n            }\n            const parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    }\n    onRightArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(child => child.visible)) {\n                return;\n            }\n            const [focusedIndex] = this.view.getFocus();\n            const firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    }\n    onSpace(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    }\n    dispose() {\n        dispose(this.disposables);\n        this.view.dispose();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}