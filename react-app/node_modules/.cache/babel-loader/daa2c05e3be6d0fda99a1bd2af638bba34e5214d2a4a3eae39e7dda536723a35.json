{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers } from '../../dnd.js';\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { setupCustomHover } from '../iconLabel/iconLabelHover.js';\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nimport * as nls from '../../../../nls.js';\nexport class BaseActionViewItem extends Disposable {\n  constructor(context, action) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super();\n    this.options = options;\n    this._context = context || this;\n    this._action = action;\n    if (action instanceof Action) {\n      this._register(action.onDidChange(event => {\n        if (!this.element) {\n          // we have not been rendered yet, so there\n          // is no point in updating the UI\n          return;\n        }\n        this.handleActionChangeEvent(event);\n      }));\n    }\n  }\n  get action() {\n    return this._action;\n  }\n  handleActionChangeEvent(event) {\n    if (event.enabled !== undefined) {\n      this.updateEnabled();\n    }\n    if (event.checked !== undefined) {\n      this.updateChecked();\n    }\n    if (event.class !== undefined) {\n      this.updateClass();\n    }\n    if (event.label !== undefined) {\n      this.updateLabel();\n      this.updateTooltip();\n    }\n    if (event.tooltip !== undefined) {\n      this.updateTooltip();\n    }\n  }\n  get actionRunner() {\n    if (!this._actionRunner) {\n      this._actionRunner = this._register(new ActionRunner());\n    }\n    return this._actionRunner;\n  }\n  set actionRunner(actionRunner) {\n    this._actionRunner = actionRunner;\n  }\n  getAction() {\n    return this._action;\n  }\n  isEnabled() {\n    return this._action.enabled;\n  }\n  setActionContext(newContext) {\n    this._context = newContext;\n  }\n  render(container) {\n    const element = this.element = container;\n    this._register(Gesture.addTarget(container));\n    const enableDragging = this.options && this.options.draggable;\n    if (enableDragging) {\n      container.draggable = true;\n      if (isFirefox) {\n        // Firefox: requires to set a text data transfer to get going\n        this._register(addDisposableListener(container, EventType.DRAG_START, e => {\n          var _a;\n          return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, this._action.label);\n        }));\n      }\n    }\n    this._register(addDisposableListener(element, TouchEventType.Tap, e => this.onClick(e, true))); // Preserve focus on tap #125470\n    this._register(addDisposableListener(element, EventType.MOUSE_DOWN, e => {\n      if (!enableDragging) {\n        EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\n      }\n\n      if (this._action.enabled && e.button === 0) {\n        element.classList.add('active');\n      }\n    }));\n    if (platform.isMacintosh) {\n      // macOS: allow to trigger the button when holding Ctrl+key and pressing the\n      // main mouse button. This is for scenarios where e.g. some interaction forces\n      // the Ctrl+key to be pressed and hold but the user still wants to interact\n      // with the actions (for example quick access in quick navigation mode).\n      this._register(addDisposableListener(element, EventType.CONTEXT_MENU, e => {\n        if (e.button === 0 && e.ctrlKey === true) {\n          this.onClick(e);\n        }\n      }));\n    }\n    this._register(addDisposableListener(element, EventType.CLICK, e => {\n      EventHelper.stop(e, true);\n      // menus do not use the click event\n      if (!(this.options && this.options.isMenu)) {\n        this.onClick(e);\n      }\n    }));\n    this._register(addDisposableListener(element, EventType.DBLCLICK, e => {\n      EventHelper.stop(e, true);\n    }));\n    [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(event => {\n      this._register(addDisposableListener(element, event, e => {\n        EventHelper.stop(e);\n        element.classList.remove('active');\n      }));\n    });\n  }\n  onClick(event) {\n    let preserveFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var _a;\n    EventHelper.stop(event, true);\n    const context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : {\n      preserveFocus\n    } : this._context;\n    this.actionRunner.run(this._action, context);\n  }\n  // Only set the tabIndex on the element once it is about to get focused\n  // That way this element wont be a tab stop when it is not needed #106441\n  focus() {\n    if (this.element) {\n      this.element.tabIndex = 0;\n      this.element.focus();\n      this.element.classList.add('focused');\n    }\n  }\n  blur() {\n    if (this.element) {\n      this.element.blur();\n      this.element.tabIndex = -1;\n      this.element.classList.remove('focused');\n    }\n  }\n  setFocusable(focusable) {\n    if (this.element) {\n      this.element.tabIndex = focusable ? 0 : -1;\n    }\n  }\n  get trapsArrowNavigation() {\n    return false;\n  }\n  updateEnabled() {\n    // implement in subclass\n  }\n  updateLabel() {\n    // implement in subclass\n  }\n  getTooltip() {\n    return this.getAction().tooltip;\n  }\n  updateTooltip() {\n    var _a;\n    if (!this.element) {\n      return;\n    }\n    const title = (_a = this.getTooltip()) !== null && _a !== void 0 ? _a : '';\n    this.element.setAttribute('aria-label', title);\n    if (!this.options.hoverDelegate) {\n      this.element.title = title;\n    } else {\n      this.element.title = '';\n      if (!this.customHover) {\n        this.customHover = setupCustomHover(this.options.hoverDelegate, this.element, title);\n        this._store.add(this.customHover);\n      } else {\n        this.customHover.update(title);\n      }\n    }\n  }\n  updateClass() {\n    // implement in subclass\n  }\n  updateChecked() {\n    // implement in subclass\n  }\n  dispose() {\n    if (this.element) {\n      this.element.remove();\n      this.element = undefined;\n    }\n    super.dispose();\n  }\n}\nexport class ActionViewItem extends BaseActionViewItem {\n  constructor(context, action) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(context, action, options);\n    this.options = options;\n    this.options.icon = options.icon !== undefined ? options.icon : false;\n    this.options.label = options.label !== undefined ? options.label : true;\n    this.cssClass = '';\n  }\n  render(container) {\n    super.render(container);\n    if (this.element) {\n      this.label = append(this.element, $('a.action-label'));\n    }\n    if (this.label) {\n      if (this._action.id === Separator.ID) {\n        this.label.setAttribute('role', 'presentation'); // A separator is a presentation item\n      } else {\n        if (this.options.isMenu) {\n          this.label.setAttribute('role', 'menuitem');\n        } else {\n          this.label.setAttribute('role', 'button');\n        }\n      }\n    }\n    if (this.options.label && this.options.keybinding && this.element) {\n      append(this.element, $('span.keybinding')).textContent = this.options.keybinding;\n    }\n    this.updateClass();\n    this.updateLabel();\n    this.updateTooltip();\n    this.updateEnabled();\n    this.updateChecked();\n  }\n  // Only set the tabIndex on the element once it is about to get focused\n  // That way this element wont be a tab stop when it is not needed #106441\n  focus() {\n    if (this.label) {\n      this.label.tabIndex = 0;\n      this.label.focus();\n    }\n  }\n  blur() {\n    if (this.label) {\n      this.label.tabIndex = -1;\n    }\n  }\n  setFocusable(focusable) {\n    if (this.label) {\n      this.label.tabIndex = focusable ? 0 : -1;\n    }\n  }\n  updateLabel() {\n    if (this.options.label && this.label) {\n      this.label.textContent = this.getAction().label;\n    }\n  }\n  getTooltip() {\n    let title = null;\n    if (this.getAction().tooltip) {\n      title = this.getAction().tooltip;\n    } else if (!this.options.label && this.getAction().label && this.options.icon) {\n      title = this.getAction().label;\n      if (this.options.keybinding) {\n        title = nls.localize({\n          key: 'titleLabel',\n          comment: ['action title', 'action keybinding']\n        }, \"{0} ({1})\", title, this.options.keybinding);\n      }\n    }\n    return title !== null && title !== void 0 ? title : undefined;\n  }\n  updateClass() {\n    var _a;\n    if (this.cssClass && this.label) {\n      this.label.classList.remove(...this.cssClass.split(' '));\n    }\n    if (this.options.icon) {\n      this.cssClass = this.getAction().class;\n      if (this.label) {\n        this.label.classList.add('codicon');\n        if (this.cssClass) {\n          this.label.classList.add(...this.cssClass.split(' '));\n        }\n      }\n      this.updateEnabled();\n    } else {\n      (_a = this.label) === null || _a === void 0 ? void 0 : _a.classList.remove('codicon');\n    }\n  }\n  updateEnabled() {\n    var _a, _b;\n    if (this.getAction().enabled) {\n      if (this.label) {\n        this.label.removeAttribute('aria-disabled');\n        this.label.classList.remove('disabled');\n      }\n      (_a = this.element) === null || _a === void 0 ? void 0 : _a.classList.remove('disabled');\n    } else {\n      if (this.label) {\n        this.label.setAttribute('aria-disabled', 'true');\n        this.label.classList.add('disabled');\n      }\n      (_b = this.element) === null || _b === void 0 ? void 0 : _b.classList.add('disabled');\n    }\n  }\n  updateChecked() {\n    if (this.label) {\n      if (this.getAction().checked) {\n        this.label.classList.add('checked');\n      } else {\n        this.label.classList.remove('checked');\n      }\n    }\n  }\n}","map":{"version":3,"names":["isFirefox","DataTransfers","$","addDisposableListener","append","EventHelper","EventType","TouchEventType","Gesture","setupCustomHover","Action","ActionRunner","Separator","Disposable","platform","types","nls","BaseActionViewItem","constructor","context","action","options","_context","_action","_register","onDidChange","event","element","handleActionChangeEvent","enabled","undefined","updateEnabled","checked","updateChecked","class","updateClass","label","updateLabel","updateTooltip","tooltip","actionRunner","_actionRunner","getAction","isEnabled","setActionContext","newContext","render","container","addTarget","enableDragging","draggable","DRAG_START","e","_a","dataTransfer","setData","TEXT","Tap","onClick","MOUSE_DOWN","stop","button","classList","add","isMacintosh","CONTEXT_MENU","ctrlKey","CLICK","isMenu","DBLCLICK","MOUSE_UP","MOUSE_OUT","forEach","remove","preserveFocus","isUndefinedOrNull","useEventAsContext","run","focus","tabIndex","blur","setFocusable","focusable","trapsArrowNavigation","getTooltip","title","setAttribute","hoverDelegate","customHover","_store","update","dispose","ActionViewItem","icon","cssClass","id","ID","keybinding","textContent","localize","key","comment","split","_b","removeAttribute"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/browser/ui/actionbar/actionViewItems.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFirefox } from '../../browser.js';\nimport { DataTransfers } from '../../dnd.js';\nimport { $, addDisposableListener, append, EventHelper, EventType } from '../../dom.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { setupCustomHover } from '../iconLabel/iconLabelHover.js';\nimport { Action, ActionRunner, Separator } from '../../../common/actions.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport * as types from '../../../common/types.js';\nimport './actionbar.css';\nimport * as nls from '../../../../nls.js';\nexport class BaseActionViewItem extends Disposable {\n    constructor(context, action, options = {}) {\n        super();\n        this.options = options;\n        this._context = context || this;\n        this._action = action;\n        if (action instanceof Action) {\n            this._register(action.onDidChange(event => {\n                if (!this.element) {\n                    // we have not been rendered yet, so there\n                    // is no point in updating the UI\n                    return;\n                }\n                this.handleActionChangeEvent(event);\n            }));\n        }\n    }\n    get action() {\n        return this._action;\n    }\n    handleActionChangeEvent(event) {\n        if (event.enabled !== undefined) {\n            this.updateEnabled();\n        }\n        if (event.checked !== undefined) {\n            this.updateChecked();\n        }\n        if (event.class !== undefined) {\n            this.updateClass();\n        }\n        if (event.label !== undefined) {\n            this.updateLabel();\n            this.updateTooltip();\n        }\n        if (event.tooltip !== undefined) {\n            this.updateTooltip();\n        }\n    }\n    get actionRunner() {\n        if (!this._actionRunner) {\n            this._actionRunner = this._register(new ActionRunner());\n        }\n        return this._actionRunner;\n    }\n    set actionRunner(actionRunner) {\n        this._actionRunner = actionRunner;\n    }\n    getAction() {\n        return this._action;\n    }\n    isEnabled() {\n        return this._action.enabled;\n    }\n    setActionContext(newContext) {\n        this._context = newContext;\n    }\n    render(container) {\n        const element = this.element = container;\n        this._register(Gesture.addTarget(container));\n        const enableDragging = this.options && this.options.draggable;\n        if (enableDragging) {\n            container.draggable = true;\n            if (isFirefox) {\n                // Firefox: requires to set a text data transfer to get going\n                this._register(addDisposableListener(container, EventType.DRAG_START, e => { var _a; return (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.setData(DataTransfers.TEXT, this._action.label); }));\n            }\n        }\n        this._register(addDisposableListener(element, TouchEventType.Tap, e => this.onClick(e, true))); // Preserve focus on tap #125470\n        this._register(addDisposableListener(element, EventType.MOUSE_DOWN, e => {\n            if (!enableDragging) {\n                EventHelper.stop(e, true); // do not run when dragging is on because that would disable it\n            }\n            if (this._action.enabled && e.button === 0) {\n                element.classList.add('active');\n            }\n        }));\n        if (platform.isMacintosh) {\n            // macOS: allow to trigger the button when holding Ctrl+key and pressing the\n            // main mouse button. This is for scenarios where e.g. some interaction forces\n            // the Ctrl+key to be pressed and hold but the user still wants to interact\n            // with the actions (for example quick access in quick navigation mode).\n            this._register(addDisposableListener(element, EventType.CONTEXT_MENU, e => {\n                if (e.button === 0 && e.ctrlKey === true) {\n                    this.onClick(e);\n                }\n            }));\n        }\n        this._register(addDisposableListener(element, EventType.CLICK, e => {\n            EventHelper.stop(e, true);\n            // menus do not use the click event\n            if (!(this.options && this.options.isMenu)) {\n                this.onClick(e);\n            }\n        }));\n        this._register(addDisposableListener(element, EventType.DBLCLICK, e => {\n            EventHelper.stop(e, true);\n        }));\n        [EventType.MOUSE_UP, EventType.MOUSE_OUT].forEach(event => {\n            this._register(addDisposableListener(element, event, e => {\n                EventHelper.stop(e);\n                element.classList.remove('active');\n            }));\n        });\n    }\n    onClick(event, preserveFocus = false) {\n        var _a;\n        EventHelper.stop(event, true);\n        const context = types.isUndefinedOrNull(this._context) ? ((_a = this.options) === null || _a === void 0 ? void 0 : _a.useEventAsContext) ? event : { preserveFocus } : this._context;\n        this.actionRunner.run(this._action, context);\n    }\n    // Only set the tabIndex on the element once it is about to get focused\n    // That way this element wont be a tab stop when it is not needed #106441\n    focus() {\n        if (this.element) {\n            this.element.tabIndex = 0;\n            this.element.focus();\n            this.element.classList.add('focused');\n        }\n    }\n    blur() {\n        if (this.element) {\n            this.element.blur();\n            this.element.tabIndex = -1;\n            this.element.classList.remove('focused');\n        }\n    }\n    setFocusable(focusable) {\n        if (this.element) {\n            this.element.tabIndex = focusable ? 0 : -1;\n        }\n    }\n    get trapsArrowNavigation() {\n        return false;\n    }\n    updateEnabled() {\n        // implement in subclass\n    }\n    updateLabel() {\n        // implement in subclass\n    }\n    getTooltip() {\n        return this.getAction().tooltip;\n    }\n    updateTooltip() {\n        var _a;\n        if (!this.element) {\n            return;\n        }\n        const title = (_a = this.getTooltip()) !== null && _a !== void 0 ? _a : '';\n        this.element.setAttribute('aria-label', title);\n        if (!this.options.hoverDelegate) {\n            this.element.title = title;\n        }\n        else {\n            this.element.title = '';\n            if (!this.customHover) {\n                this.customHover = setupCustomHover(this.options.hoverDelegate, this.element, title);\n                this._store.add(this.customHover);\n            }\n            else {\n                this.customHover.update(title);\n            }\n        }\n    }\n    updateClass() {\n        // implement in subclass\n    }\n    updateChecked() {\n        // implement in subclass\n    }\n    dispose() {\n        if (this.element) {\n            this.element.remove();\n            this.element = undefined;\n        }\n        super.dispose();\n    }\n}\nexport class ActionViewItem extends BaseActionViewItem {\n    constructor(context, action, options = {}) {\n        super(context, action, options);\n        this.options = options;\n        this.options.icon = options.icon !== undefined ? options.icon : false;\n        this.options.label = options.label !== undefined ? options.label : true;\n        this.cssClass = '';\n    }\n    render(container) {\n        super.render(container);\n        if (this.element) {\n            this.label = append(this.element, $('a.action-label'));\n        }\n        if (this.label) {\n            if (this._action.id === Separator.ID) {\n                this.label.setAttribute('role', 'presentation'); // A separator is a presentation item\n            }\n            else {\n                if (this.options.isMenu) {\n                    this.label.setAttribute('role', 'menuitem');\n                }\n                else {\n                    this.label.setAttribute('role', 'button');\n                }\n            }\n        }\n        if (this.options.label && this.options.keybinding && this.element) {\n            append(this.element, $('span.keybinding')).textContent = this.options.keybinding;\n        }\n        this.updateClass();\n        this.updateLabel();\n        this.updateTooltip();\n        this.updateEnabled();\n        this.updateChecked();\n    }\n    // Only set the tabIndex on the element once it is about to get focused\n    // That way this element wont be a tab stop when it is not needed #106441\n    focus() {\n        if (this.label) {\n            this.label.tabIndex = 0;\n            this.label.focus();\n        }\n    }\n    blur() {\n        if (this.label) {\n            this.label.tabIndex = -1;\n        }\n    }\n    setFocusable(focusable) {\n        if (this.label) {\n            this.label.tabIndex = focusable ? 0 : -1;\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this.getAction().label;\n        }\n    }\n    getTooltip() {\n        let title = null;\n        if (this.getAction().tooltip) {\n            title = this.getAction().tooltip;\n        }\n        else if (!this.options.label && this.getAction().label && this.options.icon) {\n            title = this.getAction().label;\n            if (this.options.keybinding) {\n                title = nls.localize({ key: 'titleLabel', comment: ['action title', 'action keybinding'] }, \"{0} ({1})\", title, this.options.keybinding);\n            }\n        }\n        return title !== null && title !== void 0 ? title : undefined;\n    }\n    updateClass() {\n        var _a;\n        if (this.cssClass && this.label) {\n            this.label.classList.remove(...this.cssClass.split(' '));\n        }\n        if (this.options.icon) {\n            this.cssClass = this.getAction().class;\n            if (this.label) {\n                this.label.classList.add('codicon');\n                if (this.cssClass) {\n                    this.label.classList.add(...this.cssClass.split(' '));\n                }\n            }\n            this.updateEnabled();\n        }\n        else {\n            (_a = this.label) === null || _a === void 0 ? void 0 : _a.classList.remove('codicon');\n        }\n    }\n    updateEnabled() {\n        var _a, _b;\n        if (this.getAction().enabled) {\n            if (this.label) {\n                this.label.removeAttribute('aria-disabled');\n                this.label.classList.remove('disabled');\n            }\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.classList.remove('disabled');\n        }\n        else {\n            if (this.label) {\n                this.label.setAttribute('aria-disabled', 'true');\n                this.label.classList.add('disabled');\n            }\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.classList.add('disabled');\n        }\n    }\n    updateChecked() {\n        if (this.label) {\n            if (this.getAction().checked) {\n                this.label.classList.add('checked');\n            }\n            else {\n                this.label.classList.remove('checked');\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}