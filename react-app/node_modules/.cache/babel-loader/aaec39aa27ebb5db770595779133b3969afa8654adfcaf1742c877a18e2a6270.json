{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorActiveIndentGuides, editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuides } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n  constructor(context) {\n    super();\n    this._context = context;\n    this._primaryPosition = null;\n    const options = this._context.configuration.options;\n    const wrappingInfo = options.get(134 /* EditorOption.wrappingInfo */);\n    const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n    this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n    this._spaceWidth = fontInfo.spaceWidth;\n    this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth;\n    this._bracketPairGuideOptions = options.get(13 /* EditorOption.guides */);\n    this._renderResult = null;\n    this._context.addEventHandler(this);\n  }\n  dispose() {\n    this._context.removeEventHandler(this);\n    this._renderResult = null;\n    super.dispose();\n  }\n  // --- begin event handlers\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const wrappingInfo = options.get(134 /* EditorOption.wrappingInfo */);\n    const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n    this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n    this._spaceWidth = fontInfo.spaceWidth;\n    this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth;\n    this._bracketPairGuideOptions = options.get(13 /* EditorOption.guides */);\n    return true;\n  }\n  onCursorStateChanged(e) {\n    var _a;\n    const selection = e.selections[0];\n    const newPosition = selection.getPosition();\n    if (!((_a = this._primaryPosition) === null || _a === void 0 ? void 0 : _a.equals(newPosition))) {\n      this._primaryPosition = newPosition;\n      return true;\n    }\n    return false;\n  }\n  onDecorationsChanged(e) {\n    // true for inline decorations\n    return true;\n  }\n  onFlushed(e) {\n    return true;\n  }\n  onLinesChanged(e) {\n    return true;\n  }\n  onLinesDeleted(e) {\n    return true;\n  }\n  onLinesInserted(e) {\n    return true;\n  }\n  onScrollChanged(e) {\n    return e.scrollTopChanged; // || e.scrollWidthChanged;\n  }\n\n  onZonesChanged(e) {\n    return true;\n  }\n  onLanguageConfigurationChanged(e) {\n    return true;\n  }\n  // --- end event handlers\n  prepareRender(ctx) {\n    var _a, _b, _c, _d;\n    if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n      this._renderResult = null;\n      return;\n    }\n    const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n    const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n    const scrollWidth = ctx.scrollWidth;\n    const lineHeight = this._lineHeight;\n    const activeCursorPosition = this._primaryPosition;\n    const indents = this.getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition);\n    const output = [];\n    for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      const lineIndex = lineNumber - visibleStartLineNumber;\n      const indent = indents[lineIndex];\n      let result = '';\n      const leftOffset = (_b = (_a = ctx.visibleRangeForPosition(new Position(lineNumber, 1))) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0;\n      for (const guide of indent) {\n        const left = guide.column === -1 ? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth : ctx.visibleRangeForPosition(new Position(lineNumber, guide.column)).left;\n        if (left > scrollWidth || this._maxIndentLeft > 0 && left > this._maxIndentLeft) {\n          break;\n        }\n        const className = guide.horizontalLine ? guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom' : 'vertical';\n        const width = guide.horizontalLine ? ((_d = (_c = ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : left + this._spaceWidth) - left : this._spaceWidth;\n        result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;height:${lineHeight}px;width:${width}px\"></div>`;\n      }\n      output[lineIndex] = result;\n    }\n    this._renderResult = output;\n  }\n  getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n    const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false ? this._context.viewModel.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n      highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n      horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true ? HorizontalGuidesState.Enabled : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active' ? HorizontalGuidesState.EnabledForActive : HorizontalGuidesState.Disabled,\n      includeInactive: this._bracketPairGuideOptions.bracketPairs === true\n    }) : null;\n    const indentGuides = this._bracketPairGuideOptions.indentation ? this._context.viewModel.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber) : null;\n    let activeIndentStartLineNumber = 0;\n    let activeIndentEndLineNumber = 0;\n    let activeIndentLevel = 0;\n    if (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n      const activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n      activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n      activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n      activeIndentLevel = activeIndentInfo.indent;\n    }\n    const {\n      indentSize\n    } = this._context.viewModel.model.getOptions();\n    const result = [];\n    for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n      const lineGuides = new Array();\n      result.push(lineGuides);\n      const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n      const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n      const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : [];\n      for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n        const indentGuide = (indentLvl - 1) * indentSize + 1;\n        const isActive =\n        // Disable active indent guide if there are bracket guides.\n        (this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) && activeIndentStartLineNumber <= lineNumber && lineNumber <= activeIndentEndLineNumber && indentLvl === activeIndentLevel;\n        lineGuides.push(...(bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []));\n        const peeked = bracketGuidesInLineQueue.peek();\n        if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n          lineGuides.push(new IndentGuide(indentGuide, -1, isActive ? 'core-guide-indent-active' : 'core-guide-indent', null, -1, -1));\n        }\n      }\n      lineGuides.push(...(bracketGuidesInLineQueue.takeWhile(g => true) || []));\n    }\n    return result;\n  }\n  render(startLineNumber, lineNumber) {\n    if (!this._renderResult) {\n      return '';\n    }\n    const lineIndex = lineNumber - startLineNumber;\n    if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n      return '';\n    }\n    return this._renderResult[lineIndex];\n  }\n}\nfunction transparentToUndefined(color) {\n  if (color && color.isTransparent()) {\n    return undefined;\n  }\n  return color;\n}\nregisterThemingParticipant((theme, collector) => {\n  const editorIndentGuidesColor = theme.getColor(editorIndentGuides);\n  if (editorIndentGuidesColor) {\n    collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 ${editorIndentGuidesColor} inset; }`);\n  }\n  const editorActiveIndentGuidesColor = theme.getColor(editorActiveIndentGuides) || editorIndentGuidesColor;\n  if (editorActiveIndentGuidesColor) {\n    collector.addRule(`.monaco-editor .lines-content .core-guide-indent-active { box-shadow: 1px 0 0 0 ${editorActiveIndentGuidesColor} inset; }`);\n  }\n  const colors = [{\n    bracketColor: editorBracketHighlightingForeground1,\n    guideColor: editorBracketPairGuideBackground1,\n    guideColorActive: editorBracketPairGuideActiveBackground1\n  }, {\n    bracketColor: editorBracketHighlightingForeground2,\n    guideColor: editorBracketPairGuideBackground2,\n    guideColorActive: editorBracketPairGuideActiveBackground2\n  }, {\n    bracketColor: editorBracketHighlightingForeground3,\n    guideColor: editorBracketPairGuideBackground3,\n    guideColorActive: editorBracketPairGuideActiveBackground3\n  }, {\n    bracketColor: editorBracketHighlightingForeground4,\n    guideColor: editorBracketPairGuideBackground4,\n    guideColorActive: editorBracketPairGuideActiveBackground4\n  }, {\n    bracketColor: editorBracketHighlightingForeground5,\n    guideColor: editorBracketPairGuideBackground5,\n    guideColorActive: editorBracketPairGuideActiveBackground5\n  }, {\n    bracketColor: editorBracketHighlightingForeground6,\n    guideColor: editorBracketPairGuideBackground6,\n    guideColorActive: editorBracketPairGuideActiveBackground6\n  }];\n  const colorProvider = new BracketPairGuidesClassNames();\n  const colorValues = colors.map(c => {\n    var _a, _b;\n    const bracketColor = theme.getColor(c.bracketColor);\n    const guideColor = theme.getColor(c.guideColor);\n    const guideColorActive = theme.getColor(c.guideColorActive);\n    const effectiveGuideColor = transparentToUndefined((_a = transparentToUndefined(guideColor)) !== null && _a !== void 0 ? _a : bracketColor === null || bracketColor === void 0 ? void 0 : bracketColor.transparent(0.3));\n    const effectiveGuideColorActive = transparentToUndefined((_b = transparentToUndefined(guideColorActive)) !== null && _b !== void 0 ? _b : bracketColor);\n    if (!effectiveGuideColor || !effectiveGuideColorActive) {\n      return undefined;\n    }\n    return {\n      guideColor: effectiveGuideColor,\n      guideColorActive: effectiveGuideColorActive\n    };\n  }).filter(isDefined);\n  if (colorValues.length > 0) {\n    for (let level = 0; level < 30; level++) {\n      const colors = colorValues[level % colorValues.length];\n      collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n    }\n    collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n    collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n    collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n    collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n    collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n    collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n  }\n});","map":{"version":3,"names":["DynamicViewOverlay","editorActiveIndentGuides","editorBracketHighlightingForeground1","editorBracketHighlightingForeground2","editorBracketHighlightingForeground3","editorBracketHighlightingForeground4","editorBracketHighlightingForeground5","editorBracketHighlightingForeground6","editorBracketPairGuideActiveBackground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideActiveBackground6","editorBracketPairGuideBackground1","editorBracketPairGuideBackground2","editorBracketPairGuideBackground3","editorBracketPairGuideBackground4","editorBracketPairGuideBackground5","editorBracketPairGuideBackground6","editorIndentGuides","registerThemingParticipant","Position","ArrayQueue","isDefined","BracketPairGuidesClassNames","IndentGuide","HorizontalGuidesState","IndentGuidesOverlay","constructor","context","_context","_primaryPosition","options","configuration","wrappingInfo","get","fontInfo","_lineHeight","_spaceWidth","spaceWidth","_maxIndentLeft","wrappingColumn","typicalHalfwidthCharacterWidth","_bracketPairGuideOptions","_renderResult","addEventHandler","dispose","removeEventHandler","onConfigurationChanged","e","onCursorStateChanged","_a","selection","selections","newPosition","getPosition","equals","onDecorationsChanged","onFlushed","onLinesChanged","onLinesDeleted","onLinesInserted","onScrollChanged","scrollTopChanged","onZonesChanged","onLanguageConfigurationChanged","prepareRender","ctx","_b","_c","_d","indentation","bracketPairs","visibleStartLineNumber","visibleRange","startLineNumber","visibleEndLineNumber","endLineNumber","scrollWidth","lineHeight","activeCursorPosition","indents","getGuidesByLine","output","lineNumber","lineIndex","indent","result","leftOffset","visibleRangeForPosition","left","guide","column","visibleColumn","className","horizontalLine","top","width","endColumn","bracketGuides","viewModel","getBracketGuidesInRangeByLine","highlightActive","highlightActiveBracketPair","horizontalGuides","bracketPairsHorizontal","Enabled","EnabledForActive","Disabled","includeInactive","indentGuides","getLinesIndentGuides","activeIndentStartLineNumber","activeIndentEndLineNumber","activeIndentLevel","highlightActiveIndentation","activeIndentInfo","getActiveIndentGuide","indentSize","model","getOptions","lineGuides","Array","push","bracketGuidesInLine","bracketGuidesInLineQueue","indentGuidesInLine","indentLvl","indentGuide","isActive","length","takeWhile","g","peeked","peek","render","transparentToUndefined","color","isTransparent","undefined","theme","collector","editorIndentGuidesColor","getColor","addRule","editorActiveIndentGuidesColor","colors","bracketColor","guideColor","guideColorActive","colorProvider","colorValues","map","c","effectiveGuideColor","transparent","effectiveGuideColorActive","filter","level","getInlineClassNameOfLevel","replace","activeClassName"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorActiveIndentGuides, editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuides } from '../../../common/core/editorColorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._primaryPosition = null;\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(134 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(13 /* EditorOption.guides */);\n        this._renderResult = null;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        this._renderResult = null;\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const wrappingInfo = options.get(134 /* EditorOption.wrappingInfo */);\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this._spaceWidth = fontInfo.spaceWidth;\n        this._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        this._bracketPairGuideOptions = options.get(13 /* EditorOption.guides */);\n        return true;\n    }\n    onCursorStateChanged(e) {\n        var _a;\n        const selection = e.selections[0];\n        const newPosition = selection.getPosition();\n        if (!((_a = this._primaryPosition) === null || _a === void 0 ? void 0 : _a.equals(newPosition))) {\n            this._primaryPosition = newPosition;\n            return true;\n        }\n        return false;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged; // || e.scrollWidthChanged;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    onLanguageConfigurationChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    prepareRender(ctx) {\n        var _a, _b, _c, _d;\n        if (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n            this._renderResult = null;\n            return;\n        }\n        const visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n        const visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n        const scrollWidth = ctx.scrollWidth;\n        const lineHeight = this._lineHeight;\n        const activeCursorPosition = this._primaryPosition;\n        const indents = this.getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition);\n        const output = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - visibleStartLineNumber;\n            const indent = indents[lineIndex];\n            let result = '';\n            const leftOffset = (_b = (_a = ctx.visibleRangeForPosition(new Position(lineNumber, 1))) === null || _a === void 0 ? void 0 : _a.left) !== null && _b !== void 0 ? _b : 0;\n            for (const guide of indent) {\n                const left = guide.column === -1\n                    ? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n                    : ctx.visibleRangeForPosition(new Position(lineNumber, guide.column)).left;\n                if (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n                    break;\n                }\n                const className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n                const width = guide.horizontalLine\n                    ? ((_d = (_c = ctx.visibleRangeForPosition(new Position(lineNumber, guide.horizontalLine.endColumn))) === null || _c === void 0 ? void 0 : _c.left) !== null && _d !== void 0 ? _d : (left + this._spaceWidth)) - left\n                    : this._spaceWidth;\n                result += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;height:${lineHeight}px;width:${width}px\"></div>`;\n            }\n            output[lineIndex] = result;\n        }\n        this._renderResult = output;\n    }\n    getGuidesByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition) {\n        const bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n            ? this._context.viewModel.getBracketGuidesInRangeByLine(visibleStartLineNumber, visibleEndLineNumber, activeCursorPosition, {\n                highlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n                horizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n                    ? HorizontalGuidesState.Enabled\n                    : this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n                        ? HorizontalGuidesState.EnabledForActive\n                        : HorizontalGuidesState.Disabled,\n                includeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n            })\n            : null;\n        const indentGuides = this._bracketPairGuideOptions.indentation\n            ? this._context.viewModel.getLinesIndentGuides(visibleStartLineNumber, visibleEndLineNumber)\n            : null;\n        let activeIndentStartLineNumber = 0;\n        let activeIndentEndLineNumber = 0;\n        let activeIndentLevel = 0;\n        if (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n            const activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n            activeIndentStartLineNumber = activeIndentInfo.startLineNumber;\n            activeIndentEndLineNumber = activeIndentInfo.endLineNumber;\n            activeIndentLevel = activeIndentInfo.indent;\n        }\n        const { indentSize } = this._context.viewModel.model.getOptions();\n        const result = [];\n        for (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n            const lineGuides = new Array();\n            result.push(lineGuides);\n            const bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n            const bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n            const indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : [];\n            for (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n                const indentGuide = (indentLvl - 1) * indentSize + 1;\n                const isActive = \n                // Disable active indent guide if there are bracket guides.\n                (this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n                    activeIndentStartLineNumber <= lineNumber &&\n                    lineNumber <= activeIndentEndLineNumber &&\n                    indentLvl === activeIndentLevel;\n                lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n                const peeked = bracketGuidesInLineQueue.peek();\n                if (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n                    lineGuides.push(new IndentGuide(indentGuide, -1, isActive ? 'core-guide-indent-active' : 'core-guide-indent', null, -1, -1));\n                }\n            }\n            lineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n        }\n        return result;\n    }\n    render(startLineNumber, lineNumber) {\n        if (!this._renderResult) {\n            return '';\n        }\n        const lineIndex = lineNumber - startLineNumber;\n        if (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n            return '';\n        }\n        return this._renderResult[lineIndex];\n    }\n}\nfunction transparentToUndefined(color) {\n    if (color && color.isTransparent()) {\n        return undefined;\n    }\n    return color;\n}\nregisterThemingParticipant((theme, collector) => {\n    const editorIndentGuidesColor = theme.getColor(editorIndentGuides);\n    if (editorIndentGuidesColor) {\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 ${editorIndentGuidesColor} inset; }`);\n    }\n    const editorActiveIndentGuidesColor = theme.getColor(editorActiveIndentGuides) || editorIndentGuidesColor;\n    if (editorActiveIndentGuidesColor) {\n        collector.addRule(`.monaco-editor .lines-content .core-guide-indent-active { box-shadow: 1px 0 0 0 ${editorActiveIndentGuidesColor} inset; }`);\n    }\n    const colors = [\n        { bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n        { bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n        { bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n        { bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n        { bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n        { bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n    ];\n    const colorProvider = new BracketPairGuidesClassNames();\n    const colorValues = colors\n        .map(c => {\n        var _a, _b;\n        const bracketColor = theme.getColor(c.bracketColor);\n        const guideColor = theme.getColor(c.guideColor);\n        const guideColorActive = theme.getColor(c.guideColorActive);\n        const effectiveGuideColor = transparentToUndefined((_a = transparentToUndefined(guideColor)) !== null && _a !== void 0 ? _a : bracketColor === null || bracketColor === void 0 ? void 0 : bracketColor.transparent(0.3));\n        const effectiveGuideColorActive = transparentToUndefined((_b = transparentToUndefined(guideColorActive)) !== null && _b !== void 0 ? _b : bracketColor);\n        if (!effectiveGuideColor || !effectiveGuideColorActive) {\n            return undefined;\n        }\n        return {\n            guideColor: effectiveGuideColor,\n            guideColorActive: effectiveGuideColorActive,\n        };\n    })\n        .filter(isDefined);\n    if (colorValues.length > 0) {\n        for (let level = 0; level < 30; level++) {\n            const colors = colorValues[level % colorValues.length];\n            collector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n        }\n        collector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n        collector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n        collector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n        collector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}