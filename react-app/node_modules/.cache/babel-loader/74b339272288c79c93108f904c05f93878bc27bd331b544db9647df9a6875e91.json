{"ast":null,"code":"var _jsxFileName = \"/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/src/App.js\",\n  _s = $RefreshSig$();\n// Create a react component that inputs a textarea message then performs a fetch request to localhost:3001, gets back a response as data.message and displays that message in a box below\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState('');\n  const handleChange = e => {\n    setMessage(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    fetch('http://localhost:3001/' + message, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    }).then(res => {\n      console.log(res);\n      res.json();\n    }).then(raw => JSON.parse(raw['Answer'])).then(json => {\n      console.log(json);\n      setResponse(json['Fixed_Code']);\n    });\n  };\n  // setResponse(data.message); \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer\",\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"20T8i7C4Cxplj75viXdaeiEeoII=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","message","setMessage","response","setResponse","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","console","log","json","raw","parse"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/src/App.js"],"sourcesContent":["// Create a react component that inputs a textarea message then performs a fetch request to localhost:3001, gets back a response as data.message and displays that message in a box below\n\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [response, setResponse] = useState('');\n\n  const handleChange = (e) => {\n    setMessage(e.target.value);\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    fetch('http://localhost:3001/' + message, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ message }),\n    })\n      .then(res => {\n        console.log(res)\n        res.json()\n      })\n      .then(raw => JSON.parse(raw['Answer']))  \n      .then(json => {\n        console.log(json)\n        setResponse(json['Fixed_Code']);\n      })\n  };\n  // setResponse(data.message); \n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <textarea \n          value={message}\n          onChange={handleChange}> \n        </textarea>\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div className=\"answer\">\n        {response}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,UAAU,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,EAAE;IAClBC,KAAK,CAAC,wBAAwB,GAAGV,OAAO,EAAE;MACxCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf;MAAQ,CAAC;IAClC,CAAC,CAAC,CACCgB,IAAI,CAACC,GAAG,IAAI;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBA,GAAG,CAACG,IAAI,EAAE;IACZ,CAAC,CAAC,CACDJ,IAAI,CAACK,GAAG,IAAIP,IAAI,CAACQ,KAAK,CAACD,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CACtCL,IAAI,CAACI,IAAI,IAAI;MACZF,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjBjB,WAAW,CAACiB,IAAI,CAAC,YAAY,CAAC,CAAC;IACjC,CAAC,CAAC;EACN,CAAC;EACD;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAM,QAAQ,EAAEZ,YAAa;MAAA,wBAC3B;QACE,KAAK,EAAER,OAAQ;QACf,QAAQ,EAAEI;MAAa;QAAA;QAAA;QAAA;MAAA,QACd,eACX;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC,eACP;MAAK,SAAS,EAAC,QAAQ;MAAA,UACpBF;IAAQ;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA3CQH,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}