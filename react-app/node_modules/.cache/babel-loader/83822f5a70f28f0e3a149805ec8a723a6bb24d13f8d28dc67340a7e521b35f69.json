{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nexport class ElementSizeObserver extends Disposable {\n  constructor(referenceDomElement, dimension) {\n    super();\n    this._onDidChange = this._register(new Emitter());\n    this.onDidChange = this._onDidChange.event;\n    this._referenceDomElement = referenceDomElement;\n    this._width = -1;\n    this._height = -1;\n    this._resizeObserver = null;\n    this.measureReferenceDomElement(false, dimension);\n  }\n  dispose() {\n    this.stopObserving();\n    super.dispose();\n  }\n  getWidth() {\n    return this._width;\n  }\n  getHeight() {\n    return this._height;\n  }\n  startObserving() {\n    if (!this._resizeObserver && this._referenceDomElement) {\n      this._resizeObserver = new ResizeObserver(entries => {\n        if (entries && entries[0] && entries[0].contentRect) {\n          this.observe({\n            width: entries[0].contentRect.width,\n            height: entries[0].contentRect.height\n          });\n        } else {\n          this.observe();\n        }\n      });\n      this._resizeObserver.observe(this._referenceDomElement);\n    }\n  }\n  stopObserving() {\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n      this._resizeObserver = null;\n    }\n  }\n  observe(dimension) {\n    this.measureReferenceDomElement(true, dimension);\n  }\n  measureReferenceDomElement(emitEvent, dimension) {\n    let observedWidth = 0;\n    let observedHeight = 0;\n    if (dimension) {\n      observedWidth = dimension.width;\n      observedHeight = dimension.height;\n    } else if (this._referenceDomElement) {\n      observedWidth = this._referenceDomElement.clientWidth;\n      observedHeight = this._referenceDomElement.clientHeight;\n    }\n    observedWidth = Math.max(5, observedWidth);\n    observedHeight = Math.max(5, observedHeight);\n    if (this._width !== observedWidth || this._height !== observedHeight) {\n      this._width = observedWidth;\n      this._height = observedHeight;\n      if (emitEvent) {\n        this._onDidChange.fire();\n      }\n    }\n  }\n}","map":{"version":3,"names":["Disposable","Emitter","ElementSizeObserver","constructor","referenceDomElement","dimension","_onDidChange","_register","onDidChange","event","_referenceDomElement","_width","_height","_resizeObserver","measureReferenceDomElement","dispose","stopObserving","getWidth","getHeight","startObserving","ResizeObserver","entries","contentRect","observe","width","height","disconnect","emitEvent","observedWidth","observedHeight","clientWidth","clientHeight","Math","max","fire"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/browser/config/elementSizeObserver.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nexport class ElementSizeObserver extends Disposable {\n    constructor(referenceDomElement, dimension) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._referenceDomElement = referenceDomElement;\n        this._width = -1;\n        this._height = -1;\n        this._resizeObserver = null;\n        this.measureReferenceDomElement(false, dimension);\n    }\n    dispose() {\n        this.stopObserving();\n        super.dispose();\n    }\n    getWidth() {\n        return this._width;\n    }\n    getHeight() {\n        return this._height;\n    }\n    startObserving() {\n        if (!this._resizeObserver && this._referenceDomElement) {\n            this._resizeObserver = new ResizeObserver((entries) => {\n                if (entries && entries[0] && entries[0].contentRect) {\n                    this.observe({ width: entries[0].contentRect.width, height: entries[0].contentRect.height });\n                }\n                else {\n                    this.observe();\n                }\n            });\n            this._resizeObserver.observe(this._referenceDomElement);\n        }\n    }\n    stopObserving() {\n        if (this._resizeObserver) {\n            this._resizeObserver.disconnect();\n            this._resizeObserver = null;\n        }\n    }\n    observe(dimension) {\n        this.measureReferenceDomElement(true, dimension);\n    }\n    measureReferenceDomElement(emitEvent, dimension) {\n        let observedWidth = 0;\n        let observedHeight = 0;\n        if (dimension) {\n            observedWidth = dimension.width;\n            observedHeight = dimension.height;\n        }\n        else if (this._referenceDomElement) {\n            observedWidth = this._referenceDomElement.clientWidth;\n            observedHeight = this._referenceDomElement.clientHeight;\n        }\n        observedWidth = Math.max(5, observedWidth);\n        observedHeight = Math.max(5, observedHeight);\n        if (this._width !== observedWidth || this._height !== observedHeight) {\n            this._width = observedWidth;\n            this._height = observedHeight;\n            if (emitEvent) {\n                this._onDidChange.fire();\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}