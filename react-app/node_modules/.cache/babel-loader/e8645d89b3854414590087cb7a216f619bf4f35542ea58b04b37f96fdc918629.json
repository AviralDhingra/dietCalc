{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport * as DomUtils from './dom.js';\nimport * as arrays from '../common/arrays.js';\nimport { memoize } from '../common/decorators.js';\nimport { Disposable } from '../common/lifecycle.js';\nexport var EventType;\n(function (EventType) {\n  EventType.Tap = '-monaco-gesturetap';\n  EventType.Change = '-monaco-gesturechange';\n  EventType.Start = '-monaco-gesturestart';\n  EventType.End = '-monaco-gesturesend';\n  EventType.Contextmenu = '-monaco-gesturecontextmenu';\n})(EventType || (EventType = {}));\nexport class Gesture extends Disposable {\n  constructor() {\n    super();\n    this.dispatched = false;\n    this.activeTouches = {};\n    this.handle = null;\n    this.targets = [];\n    this.ignoreTargets = [];\n    this._lastSetTapCountTime = 0;\n    this._register(DomUtils.addDisposableListener(document, 'touchstart', e => this.onTouchStart(e), {\n      passive: false\n    }));\n    this._register(DomUtils.addDisposableListener(document, 'touchend', e => this.onTouchEnd(e)));\n    this._register(DomUtils.addDisposableListener(document, 'touchmove', e => this.onTouchMove(e), {\n      passive: false\n    }));\n  }\n  static addTarget(element) {\n    if (!Gesture.isTouchDevice()) {\n      return Disposable.None;\n    }\n    if (!Gesture.INSTANCE) {\n      Gesture.INSTANCE = new Gesture();\n    }\n    Gesture.INSTANCE.targets.push(element);\n    return {\n      dispose: () => {\n        Gesture.INSTANCE.targets = Gesture.INSTANCE.targets.filter(t => t !== element);\n      }\n    };\n  }\n  static ignoreTarget(element) {\n    if (!Gesture.isTouchDevice()) {\n      return Disposable.None;\n    }\n    if (!Gesture.INSTANCE) {\n      Gesture.INSTANCE = new Gesture();\n    }\n    Gesture.INSTANCE.ignoreTargets.push(element);\n    return {\n      dispose: () => {\n        Gesture.INSTANCE.ignoreTargets = Gesture.INSTANCE.ignoreTargets.filter(t => t !== element);\n      }\n    };\n  }\n  static isTouchDevice() {\n    // `'ontouchstart' in window` always evaluates to true with typescript's modern typings. This causes `window` to be\n    // `never` later in `window.navigator`. That's why we need the explicit `window as Window` cast\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n  dispose() {\n    if (this.handle) {\n      this.handle.dispose();\n      this.handle = null;\n    }\n    super.dispose();\n  }\n  onTouchStart(e) {\n    const timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n    if (this.handle) {\n      this.handle.dispose();\n      this.handle = null;\n    }\n    for (let i = 0, len = e.targetTouches.length; i < len; i++) {\n      const touch = e.targetTouches.item(i);\n      this.activeTouches[touch.identifier] = {\n        id: touch.identifier,\n        initialTarget: touch.target,\n        initialTimeStamp: timestamp,\n        initialPageX: touch.pageX,\n        initialPageY: touch.pageY,\n        rollingTimestamps: [timestamp],\n        rollingPageX: [touch.pageX],\n        rollingPageY: [touch.pageY]\n      };\n      const evt = this.newGestureEvent(EventType.Start, touch.target);\n      evt.pageX = touch.pageX;\n      evt.pageY = touch.pageY;\n      this.dispatchEvent(evt);\n    }\n    if (this.dispatched) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.dispatched = false;\n    }\n  }\n  onTouchEnd(e) {\n    const timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n    const activeTouchCount = Object.keys(this.activeTouches).length;\n    for (let i = 0, len = e.changedTouches.length; i < len; i++) {\n      const touch = e.changedTouches.item(i);\n      if (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n        console.warn('move of an UNKNOWN touch', touch);\n        continue;\n      }\n      const data = this.activeTouches[touch.identifier],\n        holdTime = Date.now() - data.initialTimeStamp;\n      if (holdTime < Gesture.HOLD_DELAY && Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30 && Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n        const evt = this.newGestureEvent(EventType.Tap, data.initialTarget);\n        evt.pageX = arrays.tail(data.rollingPageX);\n        evt.pageY = arrays.tail(data.rollingPageY);\n        this.dispatchEvent(evt);\n      } else if (holdTime >= Gesture.HOLD_DELAY && Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30 && Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n        const evt = this.newGestureEvent(EventType.Contextmenu, data.initialTarget);\n        evt.pageX = arrays.tail(data.rollingPageX);\n        evt.pageY = arrays.tail(data.rollingPageY);\n        this.dispatchEvent(evt);\n      } else if (activeTouchCount === 1) {\n        const finalX = arrays.tail(data.rollingPageX);\n        const finalY = arrays.tail(data.rollingPageY);\n        const deltaT = arrays.tail(data.rollingTimestamps) - data.rollingTimestamps[0];\n        const deltaX = finalX - data.rollingPageX[0];\n        const deltaY = finalY - data.rollingPageY[0];\n        // We need to get all the dispatch targets on the start of the inertia event\n        const dispatchTo = this.targets.filter(t => data.initialTarget instanceof Node && t.contains(data.initialTarget));\n        this.inertia(dispatchTo, timestamp,\n        // time now\n        Math.abs(deltaX) / deltaT,\n        // speed\n        deltaX > 0 ? 1 : -1,\n        // x direction\n        finalX,\n        // x now\n        Math.abs(deltaY) / deltaT,\n        // y speed\n        deltaY > 0 ? 1 : -1,\n        // y direction\n        finalY // y now\n        );\n      }\n\n      this.dispatchEvent(this.newGestureEvent(EventType.End, data.initialTarget));\n      // forget about this touch\n      delete this.activeTouches[touch.identifier];\n    }\n    if (this.dispatched) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.dispatched = false;\n    }\n  }\n  newGestureEvent(type, initialTarget) {\n    const event = document.createEvent('CustomEvent');\n    event.initEvent(type, false, true);\n    event.initialTarget = initialTarget;\n    event.tapCount = 0;\n    return event;\n  }\n  dispatchEvent(event) {\n    if (event.type === EventType.Tap) {\n      const currentTime = new Date().getTime();\n      let setTapCount = 0;\n      if (currentTime - this._lastSetTapCountTime > Gesture.CLEAR_TAP_COUNT_TIME) {\n        setTapCount = 1;\n      } else {\n        setTapCount = 2;\n      }\n      this._lastSetTapCountTime = currentTime;\n      event.tapCount = setTapCount;\n    } else if (event.type === EventType.Change || event.type === EventType.Contextmenu) {\n      // tap is canceled by scrolling or context menu\n      this._lastSetTapCountTime = 0;\n    }\n    for (let i = 0; i < this.ignoreTargets.length; i++) {\n      if (event.initialTarget instanceof Node && this.ignoreTargets[i].contains(event.initialTarget)) {\n        return;\n      }\n    }\n    this.targets.forEach(target => {\n      if (event.initialTarget instanceof Node && target.contains(event.initialTarget)) {\n        target.dispatchEvent(event);\n        this.dispatched = true;\n      }\n    });\n  }\n  inertia(dispatchTo, t1, vX, dirX, x, vY, dirY, y) {\n    this.handle = DomUtils.scheduleAtNextAnimationFrame(() => {\n      const now = Date.now();\n      // velocity: old speed + accel_over_time\n      const deltaT = now - t1;\n      let delta_pos_x = 0,\n        delta_pos_y = 0;\n      let stopped = true;\n      vX += Gesture.SCROLL_FRICTION * deltaT;\n      vY += Gesture.SCROLL_FRICTION * deltaT;\n      if (vX > 0) {\n        stopped = false;\n        delta_pos_x = dirX * vX * deltaT;\n      }\n      if (vY > 0) {\n        stopped = false;\n        delta_pos_y = dirY * vY * deltaT;\n      }\n      // dispatch translation event\n      const evt = this.newGestureEvent(EventType.Change);\n      evt.translationX = delta_pos_x;\n      evt.translationY = delta_pos_y;\n      dispatchTo.forEach(d => d.dispatchEvent(evt));\n      if (!stopped) {\n        this.inertia(dispatchTo, now, vX, dirX, x + delta_pos_x, vY, dirY, y + delta_pos_y);\n      }\n    });\n  }\n  onTouchMove(e) {\n    const timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n    for (let i = 0, len = e.changedTouches.length; i < len; i++) {\n      const touch = e.changedTouches.item(i);\n      if (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n        console.warn('end of an UNKNOWN touch', touch);\n        continue;\n      }\n      const data = this.activeTouches[touch.identifier];\n      const evt = this.newGestureEvent(EventType.Change, data.initialTarget);\n      evt.translationX = touch.pageX - arrays.tail(data.rollingPageX);\n      evt.translationY = touch.pageY - arrays.tail(data.rollingPageY);\n      evt.pageX = touch.pageX;\n      evt.pageY = touch.pageY;\n      this.dispatchEvent(evt);\n      // only keep a few data points, to average the final speed\n      if (data.rollingPageX.length > 3) {\n        data.rollingPageX.shift();\n        data.rollingPageY.shift();\n        data.rollingTimestamps.shift();\n      }\n      data.rollingPageX.push(touch.pageX);\n      data.rollingPageY.push(touch.pageY);\n      data.rollingTimestamps.push(timestamp);\n    }\n    if (this.dispatched) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.dispatched = false;\n    }\n  }\n}\nGesture.SCROLL_FRICTION = -0.005;\nGesture.HOLD_DELAY = 700;\nGesture.CLEAR_TAP_COUNT_TIME = 400; // ms\n__decorate([memoize], Gesture, \"isTouchDevice\", null);","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","DomUtils","arrays","memoize","Disposable","EventType","Tap","Change","Start","End","Contextmenu","Gesture","constructor","dispatched","activeTouches","handle","targets","ignoreTargets","_lastSetTapCountTime","_register","addDisposableListener","document","e","onTouchStart","passive","onTouchEnd","onTouchMove","addTarget","element","isTouchDevice","None","INSTANCE","push","dispose","filter","t","ignoreTarget","window","navigator","maxTouchPoints","timestamp","Date","now","len","targetTouches","touch","item","identifier","id","initialTarget","initialTimeStamp","initialPageX","pageX","initialPageY","pageY","rollingTimestamps","rollingPageX","rollingPageY","evt","newGestureEvent","dispatchEvent","preventDefault","stopPropagation","activeTouchCount","keys","changedTouches","hasOwnProperty","String","console","warn","data","holdTime","HOLD_DELAY","Math","abs","tail","finalX","finalY","deltaT","deltaX","deltaY","dispatchTo","Node","contains","inertia","type","event","createEvent","initEvent","tapCount","currentTime","getTime","setTapCount","CLEAR_TAP_COUNT_TIME","forEach","t1","vX","dirX","x","vY","dirY","y","scheduleAtNextAnimationFrame","delta_pos_x","delta_pos_y","stopped","SCROLL_FRICTION","translationX","translationY","shift"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/browser/touch.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport * as DomUtils from './dom.js';\nimport * as arrays from '../common/arrays.js';\nimport { memoize } from '../common/decorators.js';\nimport { Disposable } from '../common/lifecycle.js';\nexport var EventType;\n(function (EventType) {\n    EventType.Tap = '-monaco-gesturetap';\n    EventType.Change = '-monaco-gesturechange';\n    EventType.Start = '-monaco-gesturestart';\n    EventType.End = '-monaco-gesturesend';\n    EventType.Contextmenu = '-monaco-gesturecontextmenu';\n})(EventType || (EventType = {}));\nexport class Gesture extends Disposable {\n    constructor() {\n        super();\n        this.dispatched = false;\n        this.activeTouches = {};\n        this.handle = null;\n        this.targets = [];\n        this.ignoreTargets = [];\n        this._lastSetTapCountTime = 0;\n        this._register(DomUtils.addDisposableListener(document, 'touchstart', (e) => this.onTouchStart(e), { passive: false }));\n        this._register(DomUtils.addDisposableListener(document, 'touchend', (e) => this.onTouchEnd(e)));\n        this._register(DomUtils.addDisposableListener(document, 'touchmove', (e) => this.onTouchMove(e), { passive: false }));\n    }\n    static addTarget(element) {\n        if (!Gesture.isTouchDevice()) {\n            return Disposable.None;\n        }\n        if (!Gesture.INSTANCE) {\n            Gesture.INSTANCE = new Gesture();\n        }\n        Gesture.INSTANCE.targets.push(element);\n        return {\n            dispose: () => {\n                Gesture.INSTANCE.targets = Gesture.INSTANCE.targets.filter(t => t !== element);\n            }\n        };\n    }\n    static ignoreTarget(element) {\n        if (!Gesture.isTouchDevice()) {\n            return Disposable.None;\n        }\n        if (!Gesture.INSTANCE) {\n            Gesture.INSTANCE = new Gesture();\n        }\n        Gesture.INSTANCE.ignoreTargets.push(element);\n        return {\n            dispose: () => {\n                Gesture.INSTANCE.ignoreTargets = Gesture.INSTANCE.ignoreTargets.filter(t => t !== element);\n            }\n        };\n    }\n    static isTouchDevice() {\n        // `'ontouchstart' in window` always evaluates to true with typescript's modern typings. This causes `window` to be\n        // `never` later in `window.navigator`. That's why we need the explicit `window as Window` cast\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    }\n    dispose() {\n        if (this.handle) {\n            this.handle.dispose();\n            this.handle = null;\n        }\n        super.dispose();\n    }\n    onTouchStart(e) {\n        const timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        if (this.handle) {\n            this.handle.dispose();\n            this.handle = null;\n        }\n        for (let i = 0, len = e.targetTouches.length; i < len; i++) {\n            const touch = e.targetTouches.item(i);\n            this.activeTouches[touch.identifier] = {\n                id: touch.identifier,\n                initialTarget: touch.target,\n                initialTimeStamp: timestamp,\n                initialPageX: touch.pageX,\n                initialPageY: touch.pageY,\n                rollingTimestamps: [timestamp],\n                rollingPageX: [touch.pageX],\n                rollingPageY: [touch.pageY]\n            };\n            const evt = this.newGestureEvent(EventType.Start, touch.target);\n            evt.pageX = touch.pageX;\n            evt.pageY = touch.pageY;\n            this.dispatchEvent(evt);\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    }\n    onTouchEnd(e) {\n        const timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        const activeTouchCount = Object.keys(this.activeTouches).length;\n        for (let i = 0, len = e.changedTouches.length; i < len; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n                console.warn('move of an UNKNOWN touch', touch);\n                continue;\n            }\n            const data = this.activeTouches[touch.identifier], holdTime = Date.now() - data.initialTimeStamp;\n            if (holdTime < Gesture.HOLD_DELAY\n                && Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30\n                && Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n                const evt = this.newGestureEvent(EventType.Tap, data.initialTarget);\n                evt.pageX = arrays.tail(data.rollingPageX);\n                evt.pageY = arrays.tail(data.rollingPageY);\n                this.dispatchEvent(evt);\n            }\n            else if (holdTime >= Gesture.HOLD_DELAY\n                && Math.abs(data.initialPageX - arrays.tail(data.rollingPageX)) < 30\n                && Math.abs(data.initialPageY - arrays.tail(data.rollingPageY)) < 30) {\n                const evt = this.newGestureEvent(EventType.Contextmenu, data.initialTarget);\n                evt.pageX = arrays.tail(data.rollingPageX);\n                evt.pageY = arrays.tail(data.rollingPageY);\n                this.dispatchEvent(evt);\n            }\n            else if (activeTouchCount === 1) {\n                const finalX = arrays.tail(data.rollingPageX);\n                const finalY = arrays.tail(data.rollingPageY);\n                const deltaT = arrays.tail(data.rollingTimestamps) - data.rollingTimestamps[0];\n                const deltaX = finalX - data.rollingPageX[0];\n                const deltaY = finalY - data.rollingPageY[0];\n                // We need to get all the dispatch targets on the start of the inertia event\n                const dispatchTo = this.targets.filter(t => data.initialTarget instanceof Node && t.contains(data.initialTarget));\n                this.inertia(dispatchTo, timestamp, // time now\n                Math.abs(deltaX) / deltaT, // speed\n                deltaX > 0 ? 1 : -1, // x direction\n                finalX, // x now\n                Math.abs(deltaY) / deltaT, // y speed\n                deltaY > 0 ? 1 : -1, // y direction\n                finalY // y now\n                );\n            }\n            this.dispatchEvent(this.newGestureEvent(EventType.End, data.initialTarget));\n            // forget about this touch\n            delete this.activeTouches[touch.identifier];\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    }\n    newGestureEvent(type, initialTarget) {\n        const event = document.createEvent('CustomEvent');\n        event.initEvent(type, false, true);\n        event.initialTarget = initialTarget;\n        event.tapCount = 0;\n        return event;\n    }\n    dispatchEvent(event) {\n        if (event.type === EventType.Tap) {\n            const currentTime = (new Date()).getTime();\n            let setTapCount = 0;\n            if (currentTime - this._lastSetTapCountTime > Gesture.CLEAR_TAP_COUNT_TIME) {\n                setTapCount = 1;\n            }\n            else {\n                setTapCount = 2;\n            }\n            this._lastSetTapCountTime = currentTime;\n            event.tapCount = setTapCount;\n        }\n        else if (event.type === EventType.Change || event.type === EventType.Contextmenu) {\n            // tap is canceled by scrolling or context menu\n            this._lastSetTapCountTime = 0;\n        }\n        for (let i = 0; i < this.ignoreTargets.length; i++) {\n            if (event.initialTarget instanceof Node && this.ignoreTargets[i].contains(event.initialTarget)) {\n                return;\n            }\n        }\n        this.targets.forEach(target => {\n            if (event.initialTarget instanceof Node && target.contains(event.initialTarget)) {\n                target.dispatchEvent(event);\n                this.dispatched = true;\n            }\n        });\n    }\n    inertia(dispatchTo, t1, vX, dirX, x, vY, dirY, y) {\n        this.handle = DomUtils.scheduleAtNextAnimationFrame(() => {\n            const now = Date.now();\n            // velocity: old speed + accel_over_time\n            const deltaT = now - t1;\n            let delta_pos_x = 0, delta_pos_y = 0;\n            let stopped = true;\n            vX += Gesture.SCROLL_FRICTION * deltaT;\n            vY += Gesture.SCROLL_FRICTION * deltaT;\n            if (vX > 0) {\n                stopped = false;\n                delta_pos_x = dirX * vX * deltaT;\n            }\n            if (vY > 0) {\n                stopped = false;\n                delta_pos_y = dirY * vY * deltaT;\n            }\n            // dispatch translation event\n            const evt = this.newGestureEvent(EventType.Change);\n            evt.translationX = delta_pos_x;\n            evt.translationY = delta_pos_y;\n            dispatchTo.forEach(d => d.dispatchEvent(evt));\n            if (!stopped) {\n                this.inertia(dispatchTo, now, vX, dirX, x + delta_pos_x, vY, dirY, y + delta_pos_y);\n            }\n        });\n    }\n    onTouchMove(e) {\n        const timestamp = Date.now(); // use Date.now() because on FF e.timeStamp is not epoch based.\n        for (let i = 0, len = e.changedTouches.length; i < len; i++) {\n            const touch = e.changedTouches.item(i);\n            if (!this.activeTouches.hasOwnProperty(String(touch.identifier))) {\n                console.warn('end of an UNKNOWN touch', touch);\n                continue;\n            }\n            const data = this.activeTouches[touch.identifier];\n            const evt = this.newGestureEvent(EventType.Change, data.initialTarget);\n            evt.translationX = touch.pageX - arrays.tail(data.rollingPageX);\n            evt.translationY = touch.pageY - arrays.tail(data.rollingPageY);\n            evt.pageX = touch.pageX;\n            evt.pageY = touch.pageY;\n            this.dispatchEvent(evt);\n            // only keep a few data points, to average the final speed\n            if (data.rollingPageX.length > 3) {\n                data.rollingPageX.shift();\n                data.rollingPageY.shift();\n                data.rollingTimestamps.shift();\n            }\n            data.rollingPageX.push(touch.pageX);\n            data.rollingPageY.push(touch.pageY);\n            data.rollingTimestamps.push(timestamp);\n        }\n        if (this.dispatched) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.dispatched = false;\n        }\n    }\n}\nGesture.SCROLL_FRICTION = -0.005;\nGesture.HOLD_DELAY = 700;\nGesture.CLEAR_TAP_COUNT_TIME = 400; // ms\n__decorate([\n    memoize\n], Gesture, \"isTouchDevice\", null);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}