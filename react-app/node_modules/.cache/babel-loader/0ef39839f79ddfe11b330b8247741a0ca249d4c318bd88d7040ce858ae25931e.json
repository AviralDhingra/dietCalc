{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { attachMenuStyler } from '../../theme/common/styler.js';\nexport class ContextMenuHandler {\n  constructor(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\n    this.contextViewService = contextViewService;\n    this.telemetryService = telemetryService;\n    this.notificationService = notificationService;\n    this.keybindingService = keybindingService;\n    this.themeService = themeService;\n    this.focusToReturn = null;\n    this.block = null;\n    this.options = {\n      blockMouse: true\n    };\n  }\n  configure(options) {\n    this.options = options;\n  }\n  showContextMenu(delegate) {\n    const actions = delegate.getActions();\n    if (!actions.length) {\n      return; // Don't render an empty context menu\n    }\n\n    this.focusToReturn = document.activeElement;\n    let menu;\n    const shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n    this.contextViewService.showContextView({\n      getAnchor: () => delegate.getAnchor(),\n      canRelayout: false,\n      anchorAlignment: delegate.anchorAlignment,\n      anchorAxisAlignment: delegate.anchorAxisAlignment,\n      render: container => {\n        const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n        if (className) {\n          container.className += ' ' + className;\n        }\n        // Render invisible div to block mouse interaction in the rest of the UI\n        if (this.options.blockMouse) {\n          this.block = container.appendChild($('.context-view-block'));\n          this.block.style.position = 'fixed';\n          this.block.style.cursor = 'initial';\n          this.block.style.left = '0';\n          this.block.style.top = '0';\n          this.block.style.width = '100%';\n          this.block.style.height = '100%';\n          this.block.style.zIndex = '-1';\n          // TODO@Steven: this is never getting disposed\n          addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n        }\n        const menuDisposables = new DisposableStore();\n        const actionRunner = delegate.actionRunner || new ActionRunner();\n        actionRunner.onBeforeRun(this.onActionRun, this, menuDisposables);\n        actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n        menu = new Menu(container, actions, {\n          actionViewItemProvider: delegate.getActionViewItem,\n          context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n          actionRunner,\n          getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n        });\n        menuDisposables.add(attachMenuStyler(menu, this.themeService));\n        menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n        menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n        menuDisposables.add(addDisposableListener(window, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n        menuDisposables.add(addDisposableListener(window, EventType.MOUSE_DOWN, e => {\n          if (e.defaultPrevented) {\n            return;\n          }\n          const event = new StandardMouseEvent(e);\n          let element = event.target;\n          // Don't do anything as we are likely creating a context menu\n          if (event.rightButton) {\n            return;\n          }\n          while (element) {\n            if (element === container) {\n              return;\n            }\n            element = element.parentElement;\n          }\n          this.contextViewService.hideContextView(true);\n        }));\n        return combinedDisposable(menuDisposables, menu);\n      },\n      focus: () => {\n        menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n      },\n      onHide: didCancel => {\n        var _a;\n        (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n        if (this.block) {\n          this.block.remove();\n          this.block = null;\n        }\n        if (this.focusToReturn) {\n          this.focusToReturn.focus();\n        }\n      }\n    }, shadowRootElement, !!shadowRootElement);\n  }\n  onActionRun(e) {\n    this.telemetryService.publicLog2('workbenchActionExecuted', {\n      id: e.action.id,\n      from: 'contextMenu'\n    });\n    this.contextViewService.hideContextView(false);\n    // Restore focus here\n    if (this.focusToReturn) {\n      this.focusToReturn.focus();\n    }\n  }\n  onDidActionRun(e) {\n    if (e.error && !isCancellationError(e.error)) {\n      this.notificationService.error(e.error);\n    }\n  }\n}","map":{"version":3,"names":["$","addDisposableListener","EventType","isHTMLElement","StandardMouseEvent","Menu","ActionRunner","isCancellationError","combinedDisposable","DisposableStore","attachMenuStyler","ContextMenuHandler","constructor","contextViewService","telemetryService","notificationService","keybindingService","themeService","focusToReturn","block","options","blockMouse","configure","showContextMenu","delegate","actions","getActions","length","document","activeElement","menu","shadowRootElement","domForShadowRoot","undefined","showContextView","getAnchor","canRelayout","anchorAlignment","anchorAxisAlignment","render","container","className","getMenuClassName","appendChild","style","position","cursor","left","top","width","height","zIndex","MOUSE_DOWN","e","stopPropagation","menuDisposables","actionRunner","onBeforeRun","onActionRun","onDidRun","onDidActionRun","actionViewItemProvider","getActionViewItem","context","getActionsContext","getKeyBinding","action","lookupKeybinding","id","add","onDidCancel","hideContextView","onDidBlur","window","BLUR","defaultPrevented","event","element","target","rightButton","parentElement","focus","autoSelectFirstItem","onHide","didCancel","_a","call","remove","publicLog2","from","error"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { attachMenuStyler } from '../../theme/common/styler.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.themeService = themeService;\n        this.focusToReturn = null;\n        this.block = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = document.activeElement;\n        let menu;\n        const shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    // TODO@Steven: this is never getting disposed\n                    addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onBeforeRun(this.onActionRun, this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                });\n                menuDisposables.add(attachMenuStyler(menu, this.themeService));\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menuDisposables.add(addDisposableListener(window, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(window, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    const event = new StandardMouseEvent(e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n            },\n            onHide: (didCancel) => {\n                var _a;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                if (this.focusToReturn) {\n                    this.focusToReturn.focus();\n                }\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e) {\n        this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        this.contextViewService.hideContextView(false);\n        // Restore focus here\n        if (this.focusToReturn) {\n            this.focusToReturn.focus();\n        }\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}