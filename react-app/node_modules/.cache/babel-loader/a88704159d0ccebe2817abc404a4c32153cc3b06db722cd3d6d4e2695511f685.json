{"ast":null,"code":"import { Emitter, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nconst TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n  /**\n   * No specific reason to save state.\n   */\n  WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n  /**\n   * A hint that the workbench is about to shutdown.\n   */\n  WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport class AbstractStorageService extends Disposable {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL\n    };\n    super();\n    this.options = options;\n    this._onDidChangeValue = this._register(new PauseableEmitter());\n    this.onDidChangeValue = this._onDidChangeValue.event;\n    this._onDidChangeTarget = this._register(new PauseableEmitter());\n    this._onWillSaveState = this._register(new Emitter());\n    this.onWillSaveState = this._onWillSaveState.event;\n    this._workspaceKeyTargets = undefined;\n    this._profileKeyTargets = undefined;\n    this._applicationKeyTargets = undefined;\n  }\n  emitDidChangeValue(scope, key) {\n    // Specially handle `TARGET_KEY`\n    if (key === TARGET_KEY) {\n      // Clear our cached version which is now out of date\n      switch (scope) {\n        case -1 /* StorageScope.APPLICATION */:\n          this._applicationKeyTargets = undefined;\n          break;\n        case 0 /* StorageScope.PROFILE */:\n          this._profileKeyTargets = undefined;\n          break;\n        case 1 /* StorageScope.WORKSPACE */:\n          this._workspaceKeyTargets = undefined;\n          break;\n      }\n      // Emit as `didChangeTarget` event\n      this._onDidChangeTarget.fire({\n        scope\n      });\n    }\n    // Emit any other key to outside\n    else {\n      this._onDidChangeValue.fire({\n        scope,\n        key,\n        target: this.getKeyTargets(scope)[key]\n      });\n    }\n  }\n  get(key, scope, fallbackValue) {\n    var _a;\n    return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n  }\n  getBoolean(key, scope, fallbackValue) {\n    var _a;\n    return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n  }\n  getNumber(key, scope, fallbackValue) {\n    var _a;\n    return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n  }\n  store(key, value, scope, target) {\n    // We remove the key for undefined/null values\n    if (isUndefinedOrNull(value)) {\n      this.remove(key, scope);\n      return;\n    }\n    // Update our datastructures but send events only after\n    this.withPausedEmitters(() => {\n      var _a;\n      // Update key-target map\n      this.updateKeyTarget(key, scope, target);\n      // Store actual value\n      (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value);\n    });\n  }\n  remove(key, scope) {\n    // Update our datastructures but send events only after\n    this.withPausedEmitters(() => {\n      var _a;\n      // Update key-target map\n      this.updateKeyTarget(key, scope, undefined);\n      // Remove actual key\n      (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key);\n    });\n  }\n  withPausedEmitters(fn) {\n    // Pause emitters\n    this._onDidChangeValue.pause();\n    this._onDidChangeTarget.pause();\n    try {\n      fn();\n    } finally {\n      // Resume emitters\n      this._onDidChangeValue.resume();\n      this._onDidChangeTarget.resume();\n    }\n  }\n  updateKeyTarget(key, scope, target) {\n    var _a, _b;\n    // Add\n    const keyTargets = this.getKeyTargets(scope);\n    if (typeof target === 'number') {\n      if (keyTargets[key] !== target) {\n        keyTargets[key] = target;\n        (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets));\n      }\n    }\n    // Remove\n    else {\n      if (typeof keyTargets[key] === 'number') {\n        delete keyTargets[key];\n        (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets));\n      }\n    }\n  }\n  get workspaceKeyTargets() {\n    if (!this._workspaceKeyTargets) {\n      this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n    }\n\n    return this._workspaceKeyTargets;\n  }\n  get profileKeyTargets() {\n    if (!this._profileKeyTargets) {\n      this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n    }\n\n    return this._profileKeyTargets;\n  }\n  get applicationKeyTargets() {\n    if (!this._applicationKeyTargets) {\n      this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n    }\n\n    return this._applicationKeyTargets;\n  }\n  getKeyTargets(scope) {\n    switch (scope) {\n      case -1 /* StorageScope.APPLICATION */:\n        return this.applicationKeyTargets;\n      case 0 /* StorageScope.PROFILE */:\n        return this.profileKeyTargets;\n      default:\n        return this.workspaceKeyTargets;\n    }\n  }\n  loadKeyTargets(scope) {\n    const keysRaw = this.get(TARGET_KEY, scope);\n    if (keysRaw) {\n      try {\n        return JSON.parse(keysRaw);\n      } catch (error) {\n        // Fail gracefully\n      }\n    }\n    return Object.create(null);\n  }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport class InMemoryStorageService extends AbstractStorageService {\n  constructor() {\n    super();\n    this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n    this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n    this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n    this._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, key)));\n    this._register(this.profileStorage.onDidChangeStorage(key => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, key)));\n    this._register(this.applicationStorage.onDidChangeStorage(key => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, key)));\n  }\n  getStorage(scope) {\n    switch (scope) {\n      case -1 /* StorageScope.APPLICATION */:\n        return this.applicationStorage;\n      case 0 /* StorageScope.PROFILE */:\n        return this.profileStorage;\n      default:\n        return this.workspaceStorage;\n    }\n  }\n}","map":{"version":3,"names":["Emitter","PauseableEmitter","Disposable","isUndefinedOrNull","InMemoryStorageDatabase","Storage","createDecorator","TARGET_KEY","IStorageService","WillSaveStateReason","AbstractStorageService","constructor","options","flushInterval","DEFAULT_FLUSH_INTERVAL","_onDidChangeValue","_register","onDidChangeValue","event","_onDidChangeTarget","_onWillSaveState","onWillSaveState","_workspaceKeyTargets","undefined","_profileKeyTargets","_applicationKeyTargets","emitDidChangeValue","scope","key","fire","target","getKeyTargets","get","fallbackValue","_a","getStorage","getBoolean","getNumber","store","value","remove","withPausedEmitters","updateKeyTarget","set","delete","fn","pause","resume","_b","keyTargets","JSON","stringify","workspaceKeyTargets","loadKeyTargets","profileKeyTargets","applicationKeyTargets","keysRaw","parse","error","Object","create","InMemoryStorageService","applicationStorage","profileStorage","workspaceStorage","onDidChangeStorage"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js"],"sourcesContent":["import { Emitter, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nconst TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport class AbstractStorageService extends Disposable {\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this.onDidChangeValue = this._onDidChangeValue.event;\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._profileKeyTargets = undefined;\n        this._applicationKeyTargets = undefined;\n    }\n    emitDidChangeValue(scope, key) {\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            switch (scope) {\n                case -1 /* StorageScope.APPLICATION */:\n                    this._applicationKeyTargets = undefined;\n                    break;\n                case 0 /* StorageScope.PROFILE */:\n                    this._profileKeyTargets = undefined;\n                    break;\n                case 1 /* StorageScope.WORKSPACE */:\n                    this._workspaceKeyTargets = undefined;\n                    break;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value);\n        });\n    }\n    remove(key, scope) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target) {\n        var _a, _b;\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n        if (!this._profileKeyTargets) {\n            this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n        }\n        return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n        if (!this._applicationKeyTargets) {\n            this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n        }\n        return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationKeyTargets;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileKeyTargets;\n            default:\n                return this.workspaceKeyTargets;\n        }\n    }\n    loadKeyTargets(scope) {\n        const keysRaw = this.get(TARGET_KEY, scope);\n        if (keysRaw) {\n            try {\n                return JSON.parse(keysRaw);\n            }\n            catch (error) {\n                // Fail gracefully\n            }\n        }\n        return Object.create(null);\n    }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, key)));\n        this._register(this.profileStorage.onDidChangeStorage(key => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, key)));\n        this._register(this.applicationStorage.onDidChangeStorage(key => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, key)));\n    }\n    getStorage(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationStorage;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileStorage;\n            default:\n                return this.workspaceStorage;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}