{"ast":null,"code":"import { addDisposableListener, EventHelper, EventType, reset, trackFocus } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { mixin } from '../../../common/objects.js';\nimport './button.css';\nconst defaultOptions = {\n  buttonBackground: Color.fromHex('#0E639C'),\n  buttonHoverBackground: Color.fromHex('#006BB3'),\n  buttonSeparator: Color.white,\n  buttonForeground: Color.white\n};\nexport class Button extends Disposable {\n  constructor(container, options) {\n    super();\n    this._onDidClick = this._register(new Emitter());\n    this.options = options || Object.create(null);\n    mixin(this.options, defaultOptions, false);\n    this.buttonForeground = this.options.buttonForeground;\n    this.buttonBackground = this.options.buttonBackground;\n    this.buttonHoverBackground = this.options.buttonHoverBackground;\n    this.buttonSecondaryForeground = this.options.buttonSecondaryForeground;\n    this.buttonSecondaryBackground = this.options.buttonSecondaryBackground;\n    this.buttonSecondaryHoverBackground = this.options.buttonSecondaryHoverBackground;\n    this.buttonBorder = this.options.buttonBorder;\n    this._element = document.createElement('a');\n    this._element.classList.add('monaco-button');\n    this._element.tabIndex = 0;\n    this._element.setAttribute('role', 'button');\n    container.appendChild(this._element);\n    this._register(Gesture.addTarget(this._element));\n    [EventType.CLICK, TouchEventType.Tap].forEach(eventType => {\n      this._register(addDisposableListener(this._element, eventType, e => {\n        if (!this.enabled) {\n          EventHelper.stop(e);\n          return;\n        }\n        this._onDidClick.fire(e);\n      }));\n    });\n    this._register(addDisposableListener(this._element, EventType.KEY_DOWN, e => {\n      const event = new StandardKeyboardEvent(e);\n      let eventHandled = false;\n      if (this.enabled && (event.equals(3 /* KeyCode.Enter */) || event.equals(10 /* KeyCode.Space */))) {\n        this._onDidClick.fire(e);\n        eventHandled = true;\n      } else if (event.equals(9 /* KeyCode.Escape */)) {\n        this._element.blur();\n        eventHandled = true;\n      }\n      if (eventHandled) {\n        EventHelper.stop(event, true);\n      }\n    }));\n    this._register(addDisposableListener(this._element, EventType.MOUSE_OVER, e => {\n      if (!this._element.classList.contains('disabled')) {\n        this.setHoverBackground();\n      }\n    }));\n    this._register(addDisposableListener(this._element, EventType.MOUSE_OUT, e => {\n      this.applyStyles(); // restore standard styles\n    }));\n    // Also set hover background when button is focused for feedback\n    this.focusTracker = this._register(trackFocus(this._element));\n    this._register(this.focusTracker.onDidFocus(() => {\n      if (this.enabled) {\n        this.setHoverBackground();\n      }\n    }));\n    this._register(this.focusTracker.onDidBlur(() => {\n      if (this.enabled) {\n        this.applyStyles();\n      }\n    }));\n    this.applyStyles();\n  }\n  get onDidClick() {\n    return this._onDidClick.event;\n  }\n  setHoverBackground() {\n    let hoverBackground;\n    if (this.options.secondary) {\n      hoverBackground = this.buttonSecondaryHoverBackground ? this.buttonSecondaryHoverBackground.toString() : null;\n    } else {\n      hoverBackground = this.buttonHoverBackground ? this.buttonHoverBackground.toString() : null;\n    }\n    if (hoverBackground) {\n      this._element.style.backgroundColor = hoverBackground;\n    }\n  }\n  style(styles) {\n    this.buttonForeground = styles.buttonForeground;\n    this.buttonBackground = styles.buttonBackground;\n    this.buttonHoverBackground = styles.buttonHoverBackground;\n    this.buttonSecondaryForeground = styles.buttonSecondaryForeground;\n    this.buttonSecondaryBackground = styles.buttonSecondaryBackground;\n    this.buttonSecondaryHoverBackground = styles.buttonSecondaryHoverBackground;\n    this.buttonBorder = styles.buttonBorder;\n    this.applyStyles();\n  }\n  applyStyles() {\n    if (this._element) {\n      let background, foreground;\n      if (this.options.secondary) {\n        foreground = this.buttonSecondaryForeground ? this.buttonSecondaryForeground.toString() : '';\n        background = this.buttonSecondaryBackground ? this.buttonSecondaryBackground.toString() : '';\n      } else {\n        foreground = this.buttonForeground ? this.buttonForeground.toString() : '';\n        background = this.buttonBackground ? this.buttonBackground.toString() : '';\n      }\n      const border = this.buttonBorder ? this.buttonBorder.toString() : '';\n      this._element.style.color = foreground;\n      this._element.style.backgroundColor = background;\n      this._element.style.borderWidth = border ? '1px' : '';\n      this._element.style.borderStyle = border ? 'solid' : '';\n      this._element.style.borderColor = border;\n    }\n  }\n  get element() {\n    return this._element;\n  }\n  set label(value) {\n    this._element.classList.add('monaco-text-button');\n    if (this.options.supportIcons) {\n      reset(this._element, ...renderLabelWithIcons(value));\n    } else {\n      this._element.textContent = value;\n    }\n    if (typeof this.options.title === 'string') {\n      this._element.title = this.options.title;\n    } else if (this.options.title) {\n      this._element.title = value;\n    }\n  }\n  set enabled(value) {\n    if (value) {\n      this._element.classList.remove('disabled');\n      this._element.setAttribute('aria-disabled', String(false));\n      this._element.tabIndex = 0;\n    } else {\n      this._element.classList.add('disabled');\n      this._element.setAttribute('aria-disabled', String(true));\n    }\n  }\n  get enabled() {\n    return !this._element.classList.contains('disabled');\n  }\n}","map":{"version":3,"names":["addDisposableListener","EventHelper","EventType","reset","trackFocus","StandardKeyboardEvent","TouchEventType","Gesture","renderLabelWithIcons","Color","Emitter","Disposable","mixin","defaultOptions","buttonBackground","fromHex","buttonHoverBackground","buttonSeparator","white","buttonForeground","Button","constructor","container","options","_onDidClick","_register","Object","create","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","buttonBorder","_element","document","createElement","classList","add","tabIndex","setAttribute","appendChild","addTarget","CLICK","Tap","forEach","eventType","e","enabled","stop","fire","KEY_DOWN","event","eventHandled","equals","blur","MOUSE_OVER","contains","setHoverBackground","MOUSE_OUT","applyStyles","focusTracker","onDidFocus","onDidBlur","onDidClick","hoverBackground","secondary","toString","style","backgroundColor","styles","background","foreground","border","color","borderWidth","borderStyle","borderColor","element","label","value","supportIcons","textContent","title","remove","String"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/browser/ui/button/button.js"],"sourcesContent":["import { addDisposableListener, EventHelper, EventType, reset, trackFocus } from '../../dom.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { EventType as TouchEventType, Gesture } from '../../touch.js';\nimport { renderLabelWithIcons } from '../iconLabel/iconLabels.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { mixin } from '../../../common/objects.js';\nimport './button.css';\nconst defaultOptions = {\n    buttonBackground: Color.fromHex('#0E639C'),\n    buttonHoverBackground: Color.fromHex('#006BB3'),\n    buttonSeparator: Color.white,\n    buttonForeground: Color.white\n};\nexport class Button extends Disposable {\n    constructor(container, options) {\n        super();\n        this._onDidClick = this._register(new Emitter());\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOptions, false);\n        this.buttonForeground = this.options.buttonForeground;\n        this.buttonBackground = this.options.buttonBackground;\n        this.buttonHoverBackground = this.options.buttonHoverBackground;\n        this.buttonSecondaryForeground = this.options.buttonSecondaryForeground;\n        this.buttonSecondaryBackground = this.options.buttonSecondaryBackground;\n        this.buttonSecondaryHoverBackground = this.options.buttonSecondaryHoverBackground;\n        this.buttonBorder = this.options.buttonBorder;\n        this._element = document.createElement('a');\n        this._element.classList.add('monaco-button');\n        this._element.tabIndex = 0;\n        this._element.setAttribute('role', 'button');\n        container.appendChild(this._element);\n        this._register(Gesture.addTarget(this._element));\n        [EventType.CLICK, TouchEventType.Tap].forEach(eventType => {\n            this._register(addDisposableListener(this._element, eventType, e => {\n                if (!this.enabled) {\n                    EventHelper.stop(e);\n                    return;\n                }\n                this._onDidClick.fire(e);\n            }));\n        });\n        this._register(addDisposableListener(this._element, EventType.KEY_DOWN, e => {\n            const event = new StandardKeyboardEvent(e);\n            let eventHandled = false;\n            if (this.enabled && (event.equals(3 /* KeyCode.Enter */) || event.equals(10 /* KeyCode.Space */))) {\n                this._onDidClick.fire(e);\n                eventHandled = true;\n            }\n            else if (event.equals(9 /* KeyCode.Escape */)) {\n                this._element.blur();\n                eventHandled = true;\n            }\n            if (eventHandled) {\n                EventHelper.stop(event, true);\n            }\n        }));\n        this._register(addDisposableListener(this._element, EventType.MOUSE_OVER, e => {\n            if (!this._element.classList.contains('disabled')) {\n                this.setHoverBackground();\n            }\n        }));\n        this._register(addDisposableListener(this._element, EventType.MOUSE_OUT, e => {\n            this.applyStyles(); // restore standard styles\n        }));\n        // Also set hover background when button is focused for feedback\n        this.focusTracker = this._register(trackFocus(this._element));\n        this._register(this.focusTracker.onDidFocus(() => { if (this.enabled) {\n            this.setHoverBackground();\n        } }));\n        this._register(this.focusTracker.onDidBlur(() => { if (this.enabled) {\n            this.applyStyles();\n        } }));\n        this.applyStyles();\n    }\n    get onDidClick() { return this._onDidClick.event; }\n    setHoverBackground() {\n        let hoverBackground;\n        if (this.options.secondary) {\n            hoverBackground = this.buttonSecondaryHoverBackground ? this.buttonSecondaryHoverBackground.toString() : null;\n        }\n        else {\n            hoverBackground = this.buttonHoverBackground ? this.buttonHoverBackground.toString() : null;\n        }\n        if (hoverBackground) {\n            this._element.style.backgroundColor = hoverBackground;\n        }\n    }\n    style(styles) {\n        this.buttonForeground = styles.buttonForeground;\n        this.buttonBackground = styles.buttonBackground;\n        this.buttonHoverBackground = styles.buttonHoverBackground;\n        this.buttonSecondaryForeground = styles.buttonSecondaryForeground;\n        this.buttonSecondaryBackground = styles.buttonSecondaryBackground;\n        this.buttonSecondaryHoverBackground = styles.buttonSecondaryHoverBackground;\n        this.buttonBorder = styles.buttonBorder;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this._element) {\n            let background, foreground;\n            if (this.options.secondary) {\n                foreground = this.buttonSecondaryForeground ? this.buttonSecondaryForeground.toString() : '';\n                background = this.buttonSecondaryBackground ? this.buttonSecondaryBackground.toString() : '';\n            }\n            else {\n                foreground = this.buttonForeground ? this.buttonForeground.toString() : '';\n                background = this.buttonBackground ? this.buttonBackground.toString() : '';\n            }\n            const border = this.buttonBorder ? this.buttonBorder.toString() : '';\n            this._element.style.color = foreground;\n            this._element.style.backgroundColor = background;\n            this._element.style.borderWidth = border ? '1px' : '';\n            this._element.style.borderStyle = border ? 'solid' : '';\n            this._element.style.borderColor = border;\n        }\n    }\n    get element() {\n        return this._element;\n    }\n    set label(value) {\n        this._element.classList.add('monaco-text-button');\n        if (this.options.supportIcons) {\n            reset(this._element, ...renderLabelWithIcons(value));\n        }\n        else {\n            this._element.textContent = value;\n        }\n        if (typeof this.options.title === 'string') {\n            this._element.title = this.options.title;\n        }\n        else if (this.options.title) {\n            this._element.title = value;\n        }\n    }\n    set enabled(value) {\n        if (value) {\n            this._element.classList.remove('disabled');\n            this._element.setAttribute('aria-disabled', String(false));\n            this._element.tabIndex = 0;\n        }\n        else {\n            this._element.classList.add('disabled');\n            this._element.setAttribute('aria-disabled', String(true));\n        }\n    }\n    get enabled() {\n        return !this._element.classList.contains('disabled');\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}