{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Widget } from '../widget.js';\nimport { CSSIcon } from '../../../common/codicons.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport './toggle.css';\nconst defaultOpts = {\n  inputActiveOptionBorder: Color.fromHex('#007ACC00'),\n  inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\n  inputActiveOptionBackground: Color.fromHex('#0E639C50')\n};\nexport class Toggle extends Widget {\n  constructor(opts) {\n    super();\n    this._onChange = this._register(new Emitter());\n    this.onChange = this._onChange.event;\n    this._onKeyDown = this._register(new Emitter());\n    this.onKeyDown = this._onKeyDown.event;\n    this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\n    this._checked = this._opts.isChecked;\n    const classes = ['monaco-custom-toggle'];\n    if (this._opts.icon) {\n      this._icon = this._opts.icon;\n      classes.push(...CSSIcon.asClassNameArray(this._icon));\n    }\n    if (this._opts.actionClassName) {\n      classes.push(...this._opts.actionClassName.split(' '));\n    }\n    if (this._checked) {\n      classes.push('checked');\n    }\n    this.domNode = document.createElement('div');\n    this.domNode.title = this._opts.title;\n    this.domNode.classList.add(...classes);\n    if (!this._opts.notFocusable) {\n      this.domNode.tabIndex = 0;\n    }\n    this.domNode.setAttribute('role', 'checkbox');\n    this.domNode.setAttribute('aria-checked', String(this._checked));\n    this.domNode.setAttribute('aria-label', this._opts.title);\n    this.applyStyles();\n    this.onclick(this.domNode, ev => {\n      if (this.enabled) {\n        this.checked = !this._checked;\n        this._onChange.fire(false);\n        ev.preventDefault();\n      }\n    });\n    this.ignoreGesture(this.domNode);\n    this.onkeydown(this.domNode, keyboardEvent => {\n      if (keyboardEvent.keyCode === 10 /* KeyCode.Space */ || keyboardEvent.keyCode === 3 /* KeyCode.Enter */) {\n        this.checked = !this._checked;\n        this._onChange.fire(true);\n        keyboardEvent.preventDefault();\n        keyboardEvent.stopPropagation();\n        return;\n      }\n      this._onKeyDown.fire(keyboardEvent);\n    });\n  }\n  get enabled() {\n    return this.domNode.getAttribute('aria-disabled') !== 'true';\n  }\n  focus() {\n    this.domNode.focus();\n  }\n  get checked() {\n    return this._checked;\n  }\n  set checked(newIsChecked) {\n    this._checked = newIsChecked;\n    this.domNode.setAttribute('aria-checked', String(this._checked));\n    this.domNode.classList.toggle('checked', this._checked);\n    this.applyStyles();\n  }\n  width() {\n    return 2 /*margin left*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n  }\n\n  style(styles) {\n    if (styles.inputActiveOptionBorder) {\n      this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n    }\n    if (styles.inputActiveOptionForeground) {\n      this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n    }\n    if (styles.inputActiveOptionBackground) {\n      this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n    }\n    this.applyStyles();\n  }\n  applyStyles() {\n    if (this.domNode) {\n      this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : '';\n      this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\n      this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : '';\n    }\n  }\n  enable() {\n    this.domNode.setAttribute('aria-disabled', String(false));\n  }\n  disable() {\n    this.domNode.setAttribute('aria-disabled', String(true));\n  }\n}","map":{"version":3,"names":["Widget","CSSIcon","Color","Emitter","defaultOpts","inputActiveOptionBorder","fromHex","inputActiveOptionForeground","inputActiveOptionBackground","Toggle","constructor","opts","_onChange","_register","onChange","event","_onKeyDown","onKeyDown","_opts","Object","assign","_checked","isChecked","classes","icon","_icon","push","asClassNameArray","actionClassName","split","domNode","document","createElement","title","classList","add","notFocusable","tabIndex","setAttribute","String","applyStyles","onclick","ev","enabled","checked","fire","preventDefault","ignoreGesture","onkeydown","keyboardEvent","keyCode","stopPropagation","getAttribute","focus","newIsChecked","toggle","width","style","styles","borderColor","toString","color","backgroundColor","enable","disable"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/browser/ui/toggle/toggle.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Widget } from '../widget.js';\nimport { CSSIcon } from '../../../common/codicons.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport './toggle.css';\nconst defaultOpts = {\n    inputActiveOptionBorder: Color.fromHex('#007ACC00'),\n    inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\n    inputActiveOptionBackground: Color.fromHex('#0E639C50')\n};\nexport class Toggle extends Widget {\n    constructor(opts) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\n        this._checked = this._opts.isChecked;\n        const classes = ['monaco-custom-toggle'];\n        if (this._opts.icon) {\n            this._icon = this._opts.icon;\n            classes.push(...CSSIcon.asClassNameArray(this._icon));\n        }\n        if (this._opts.actionClassName) {\n            classes.push(...this._opts.actionClassName.split(' '));\n        }\n        if (this._checked) {\n            classes.push('checked');\n        }\n        this.domNode = document.createElement('div');\n        this.domNode.title = this._opts.title;\n        this.domNode.classList.add(...classes);\n        if (!this._opts.notFocusable) {\n            this.domNode.tabIndex = 0;\n        }\n        this.domNode.setAttribute('role', 'checkbox');\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.setAttribute('aria-label', this._opts.title);\n        this.applyStyles();\n        this.onclick(this.domNode, (ev) => {\n            if (this.enabled) {\n                this.checked = !this._checked;\n                this._onChange.fire(false);\n                ev.preventDefault();\n            }\n        });\n        this.ignoreGesture(this.domNode);\n        this.onkeydown(this.domNode, (keyboardEvent) => {\n            if (keyboardEvent.keyCode === 10 /* KeyCode.Space */ || keyboardEvent.keyCode === 3 /* KeyCode.Enter */) {\n                this.checked = !this._checked;\n                this._onChange.fire(true);\n                keyboardEvent.preventDefault();\n                keyboardEvent.stopPropagation();\n                return;\n            }\n            this._onKeyDown.fire(keyboardEvent);\n        });\n    }\n    get enabled() {\n        return this.domNode.getAttribute('aria-disabled') !== 'true';\n    }\n    focus() {\n        this.domNode.focus();\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(newIsChecked) {\n        this._checked = newIsChecked;\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.classList.toggle('checked', this._checked);\n        this.applyStyles();\n    }\n    width() {\n        return 2 /*margin left*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n    }\n    style(styles) {\n        if (styles.inputActiveOptionBorder) {\n            this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n        }\n        if (styles.inputActiveOptionForeground) {\n            this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n        }\n        if (styles.inputActiveOptionBackground) {\n            this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n        }\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.domNode) {\n            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : '';\n            this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\n            this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : '';\n        }\n    }\n    enable() {\n        this.domNode.setAttribute('aria-disabled', String(false));\n    }\n    disable() {\n        this.domNode.setAttribute('aria-disabled', String(true));\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}