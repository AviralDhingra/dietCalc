{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport class InlineDiffMargin extends Disposable {\n  constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n    super();\n    this._viewZoneId = _viewZoneId;\n    this._marginDomNode = _marginDomNode;\n    this.editor = editor;\n    this.diff = diff;\n    this._contextMenuService = _contextMenuService;\n    this._clipboardService = _clipboardService;\n    this._visibility = false;\n    // make sure the diff margin shows above overlay.\n    this._marginDomNode.style.zIndex = '10';\n    this._diffActions = document.createElement('div');\n    this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\n    this._diffActions.style.position = 'absolute';\n    const lineHeight = editor.getOption(61 /* EditorOption.lineHeight */);\n    const lineFeed = editor.getModel().getEOL();\n    this._diffActions.style.right = '0px';\n    this._diffActions.style.visibility = 'hidden';\n    this._diffActions.style.height = `${lineHeight}px`;\n    this._diffActions.style.lineHeight = `${lineHeight}px`;\n    this._marginDomNode.appendChild(this._diffActions);\n    const actions = [];\n    const isDeletion = diff.modifiedEndLineNumber === 0;\n    // default action\n    actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion ? diff.originalEndLineNumber > diff.modifiedStartLineNumber ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\") : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\") : diff.originalEndLineNumber > diff.modifiedStartLineNumber ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\") : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n      const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n      const deletedText = diff.originalModel.getValueInRange(range);\n      yield this._clipboardService.writeText(deletedText);\n    })));\n    let currentLineNumberOffset = 0;\n    let copyLineAction = undefined;\n    if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n      copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber) : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n        const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n        if (lineContent === '') {\n          // empty line\n          const eof = diff.originalModel.getEndOfLineSequence();\n          yield this._clipboardService.writeText(eof === 0 /* EndOfLineSequence.LF */ ? '\\n' : '\\r\\n');\n        } else {\n          yield this._clipboardService.writeText(lineContent);\n        }\n      }));\n      actions.push(copyLineAction);\n    }\n    const readOnly = editor.getOption(83 /* EditorOption.readOnly */);\n    if (!readOnly) {\n      actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n        const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n        const deletedText = diff.originalModel.getValueInRange(range);\n        if (diff.modifiedEndLineNumber === 0) {\n          // deletion only\n          const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n          editor.executeEdits('diffEditor', [{\n            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n            text: lineFeed + deletedText\n          }]);\n        } else {\n          const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n          editor.executeEdits('diffEditor', [{\n            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n            text: deletedText\n          }]);\n        }\n      })));\n    }\n    const showContextMenu = (x, y) => {\n      this._contextMenuService.showContextMenu({\n        getAnchor: () => {\n          return {\n            x,\n            y\n          };\n        },\n        getActions: () => {\n          if (copyLineAction) {\n            copyLineAction.label = isDeletion ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset) : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n          }\n          return actions;\n        },\n        autoSelectFirstItem: true\n      });\n    };\n    this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n      const {\n        top,\n        height\n      } = dom.getDomNodePagePosition(this._diffActions);\n      const pad = Math.floor(lineHeight / 3);\n      e.preventDefault();\n      showContextMenu(e.posx, top + height + pad);\n    }));\n    this._register(editor.onMouseMove(e => {\n      if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n        const viewZoneId = e.target.detail.viewZoneId;\n        if (viewZoneId === this._viewZoneId) {\n          this.visibility = true;\n          currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n        } else {\n          this.visibility = false;\n        }\n      } else {\n        this.visibility = false;\n      }\n    }));\n    this._register(editor.onMouseDown(e => {\n      if (!e.event.rightButton) {\n        return;\n      }\n      if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n        const viewZoneId = e.target.detail.viewZoneId;\n        if (viewZoneId === this._viewZoneId) {\n          e.event.preventDefault();\n          currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n          showContextMenu(e.event.posx, e.event.posy + lineHeight);\n        }\n      }\n    }));\n  }\n  get visibility() {\n    return this._visibility;\n  }\n  set visibility(_visibility) {\n    if (this._visibility !== _visibility) {\n      this._visibility = _visibility;\n      if (_visibility) {\n        this._diffActions.style.visibility = 'visible';\n      } else {\n        this._diffActions.style.visibility = 'hidden';\n      }\n    }\n  }\n  _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n    const {\n      top\n    } = dom.getDomNodePagePosition(marginDomNode);\n    const offset = y - top;\n    const lineNumberOffset = Math.floor(offset / lineHeight);\n    const newTop = lineNumberOffset * lineHeight;\n    this._diffActions.style.top = `${newTop}px`;\n    if (this.diff.viewLineCounts) {\n      let acc = 0;\n      for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n        acc += this.diff.viewLineCounts[i];\n        if (lineNumberOffset < acc) {\n          return i;\n        }\n      }\n    }\n    return lineNumberOffset;\n  }\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","nls","dom","Action","Disposable","Range","Codicon","InlineDiffMargin","constructor","_viewZoneId","_marginDomNode","editor","diff","_contextMenuService","_clipboardService","_visibility","style","zIndex","_diffActions","document","createElement","className","lightBulb","classNames","position","lineHeight","getOption","lineFeed","getModel","getEOL","right","visibility","height","appendChild","actions","isDeletion","modifiedEndLineNumber","push","originalEndLineNumber","modifiedStartLineNumber","localize","undefined","range","originalStartLineNumber","deletedText","originalModel","getValueInRange","writeText","currentLineNumberOffset","copyLineAction","lineContent","getLineContent","eof","getEndOfLineSequence","readOnly","getLineMaxColumn","column","executeEdits","text","showContextMenu","x","y","getAnchor","getActions","label","autoSelectFirstItem","_register","addStandardDisposableListener","top","getDomNodePagePosition","pad","Math","floor","preventDefault","posx","onMouseMove","target","type","viewZoneId","detail","_updateLightBulbPosition","event","browserEvent","onMouseDown","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","i","length"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport class InlineDiffMargin extends Disposable {\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n        super();\n        this._viewZoneId = _viewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this.editor = editor;\n        this.diff = diff;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = editor.getOption(61 /* EditorOption.lineHeight */);\n        const lineFeed = editor.getModel().getEOL();\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        const actions = [];\n        const isDeletion = diff.modifiedEndLineNumber === 0;\n        // default action\n        actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n            ? (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n            : (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n            const deletedText = diff.originalModel.getValueInRange(range);\n            yield this._clipboardService.writeText(deletedText);\n        })));\n        let currentLineNumberOffset = 0;\n        let copyLineAction = undefined;\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber)\n                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                if (lineContent === '') {\n                    // empty line\n                    const eof = diff.originalModel.getEndOfLineSequence();\n                    yield this._clipboardService.writeText(eof === 0 /* EndOfLineSequence.LF */ ? '\\n' : '\\r\\n');\n                }\n                else {\n                    yield this._clipboardService.writeText(lineContent);\n                }\n            }));\n            actions.push(copyLineAction);\n        }\n        const readOnly = editor.getOption(83 /* EditorOption.readOnly */);\n        if (!readOnly) {\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                const deletedText = diff.originalModel.getValueInRange(range);\n                if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                            text: lineFeed + deletedText\n                        }\n                    ]);\n                }\n                else {\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n                            text: deletedText\n                        }\n                    ]);\n                }\n            })));\n        }\n        const showContextMenu = (x, y) => {\n            this._contextMenuService.showContextMenu({\n                getAnchor: () => {\n                    return {\n                        x,\n                        y\n                    };\n                },\n                getActions: () => {\n                    if (copyLineAction) {\n                        copyLineAction.label =\n                            isDeletion\n                                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset)\n                                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(editor.onMouseMove((e) => {\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    this.visibility = true;\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                }\n                else {\n                    this.visibility = false;\n                }\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(editor.onMouseDown((e) => {\n            if (!e.event.rightButton) {\n                return;\n            }\n            if (e.target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || e.target.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            if (_visibility) {\n                this._diffActions.style.visibility = 'visible';\n            }\n            else {\n                this._diffActions.style.visibility = 'hidden';\n            }\n        }\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this.diff.viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n                acc += this.diff.viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}