{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\nimport { equals } from '../../../common/objects.js';\nimport './keybindingLabel.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nexport class KeybindingLabel {\n  constructor(container, os, options) {\n    this.os = os;\n    this.keyElements = new Set();\n    this.options = options || Object.create(null);\n    this.labelBackground = this.options.keybindingLabelBackground;\n    this.labelForeground = this.options.keybindingLabelForeground;\n    this.labelBorder = this.options.keybindingLabelBorder;\n    this.labelBottomBorder = this.options.keybindingLabelBottomBorder;\n    this.labelShadow = this.options.keybindingLabelShadow;\n    this.domNode = dom.append(container, $('.monaco-keybinding'));\n    this.didEverRender = false;\n    container.appendChild(this.domNode);\n  }\n  get element() {\n    return this.domNode;\n  }\n  set(keybinding, matches) {\n    if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\n      return;\n    }\n    this.keybinding = keybinding;\n    this.matches = matches;\n    this.render();\n  }\n  render() {\n    this.clear();\n    if (this.keybinding) {\n      const [firstPart, chordPart] = this.keybinding.getParts();\n      if (firstPart) {\n        this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\n      }\n      if (chordPart) {\n        dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\n        this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\n      }\n      this.domNode.title = this.keybinding.getAriaLabel() || '';\n    } else if (this.options && this.options.renderUnboundKeybindings) {\n      this.renderUnbound(this.domNode);\n    }\n    this.applyStyles();\n    this.didEverRender = true;\n  }\n  clear() {\n    dom.clearNode(this.domNode);\n    this.keyElements.clear();\n  }\n  renderPart(parent, part, match) {\n    const modifierLabels = UILabelProvider.modifierLabels[this.os];\n    if (part.ctrlKey) {\n      this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\n    }\n    if (part.shiftKey) {\n      this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\n    }\n    if (part.altKey) {\n      this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\n    }\n    if (part.metaKey) {\n      this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\n    }\n    const keyLabel = part.keyLabel;\n    if (keyLabel) {\n      this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\n    }\n  }\n  renderKey(parent, label, highlight, separator) {\n    dom.append(parent, this.createKeyElement(label, highlight ? '.highlight' : ''));\n    if (separator) {\n      dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\n    }\n  }\n  renderUnbound(parent) {\n    dom.append(parent, this.createKeyElement(localize('unbound', \"Unbound\")));\n  }\n  createKeyElement(label) {\n    let extraClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const keyElement = $('span.monaco-keybinding-key' + extraClass, undefined, label);\n    this.keyElements.add(keyElement);\n    return keyElement;\n  }\n  style(styles) {\n    this.labelBackground = styles.keybindingLabelBackground;\n    this.labelForeground = styles.keybindingLabelForeground;\n    this.labelBorder = styles.keybindingLabelBorder;\n    this.labelBottomBorder = styles.keybindingLabelBottomBorder;\n    this.labelShadow = styles.keybindingLabelShadow;\n    this.applyStyles();\n  }\n  applyStyles() {\n    var _a;\n    if (this.element) {\n      for (const keyElement of this.keyElements) {\n        if (this.labelBackground) {\n          keyElement.style.backgroundColor = (_a = this.labelBackground) === null || _a === void 0 ? void 0 : _a.toString();\n        }\n        if (this.labelBorder) {\n          keyElement.style.borderColor = this.labelBorder.toString();\n        }\n        if (this.labelBottomBorder) {\n          keyElement.style.borderBottomColor = this.labelBottomBorder.toString();\n        }\n        if (this.labelShadow) {\n          keyElement.style.boxShadow = `inset 0 -1px 0 ${this.labelShadow}`;\n        }\n      }\n      if (this.labelForeground) {\n        this.element.style.color = this.labelForeground.toString();\n      }\n    }\n  }\n  static areSame(a, b) {\n    if (a === b || !a && !b) {\n      return true;\n    }\n    return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\n  }\n}","map":{"version":3,"names":["dom","UILabelProvider","equals","localize","$","KeybindingLabel","constructor","container","os","options","keyElements","Set","Object","create","labelBackground","keybindingLabelBackground","labelForeground","keybindingLabelForeground","labelBorder","keybindingLabelBorder","labelBottomBorder","keybindingLabelBottomBorder","labelShadow","keybindingLabelShadow","domNode","append","didEverRender","appendChild","element","set","keybinding","matches","areSame","render","clear","firstPart","chordPart","getParts","renderPart","undefined","title","getAriaLabel","renderUnboundKeybindings","renderUnbound","applyStyles","clearNode","parent","part","match","modifierLabels","ctrlKey","renderKey","Boolean","separator","shiftKey","altKey","metaKey","keyLabel","keyCode","label","highlight","createKeyElement","extraClass","keyElement","add","style","styles","_a","backgroundColor","toString","borderColor","borderBottomColor","boxShadow","color","a","b"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/browser/ui/keybindingLabel/keybindingLabel.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { UILabelProvider } from '../../../common/keybindingLabels.js';\nimport { equals } from '../../../common/objects.js';\nimport './keybindingLabel.css';\nimport { localize } from '../../../../nls.js';\nconst $ = dom.$;\nexport class KeybindingLabel {\n    constructor(container, os, options) {\n        this.os = os;\n        this.keyElements = new Set();\n        this.options = options || Object.create(null);\n        this.labelBackground = this.options.keybindingLabelBackground;\n        this.labelForeground = this.options.keybindingLabelForeground;\n        this.labelBorder = this.options.keybindingLabelBorder;\n        this.labelBottomBorder = this.options.keybindingLabelBottomBorder;\n        this.labelShadow = this.options.keybindingLabelShadow;\n        this.domNode = dom.append(container, $('.monaco-keybinding'));\n        this.didEverRender = false;\n        container.appendChild(this.domNode);\n    }\n    get element() {\n        return this.domNode;\n    }\n    set(keybinding, matches) {\n        if (this.didEverRender && this.keybinding === keybinding && KeybindingLabel.areSame(this.matches, matches)) {\n            return;\n        }\n        this.keybinding = keybinding;\n        this.matches = matches;\n        this.render();\n    }\n    render() {\n        this.clear();\n        if (this.keybinding) {\n            const [firstPart, chordPart] = this.keybinding.getParts();\n            if (firstPart) {\n                this.renderPart(this.domNode, firstPart, this.matches ? this.matches.firstPart : null);\n            }\n            if (chordPart) {\n                dom.append(this.domNode, $('span.monaco-keybinding-key-chord-separator', undefined, ' '));\n                this.renderPart(this.domNode, chordPart, this.matches ? this.matches.chordPart : null);\n            }\n            this.domNode.title = this.keybinding.getAriaLabel() || '';\n        }\n        else if (this.options && this.options.renderUnboundKeybindings) {\n            this.renderUnbound(this.domNode);\n        }\n        this.applyStyles();\n        this.didEverRender = true;\n    }\n    clear() {\n        dom.clearNode(this.domNode);\n        this.keyElements.clear();\n    }\n    renderPart(parent, part, match) {\n        const modifierLabels = UILabelProvider.modifierLabels[this.os];\n        if (part.ctrlKey) {\n            this.renderKey(parent, modifierLabels.ctrlKey, Boolean(match === null || match === void 0 ? void 0 : match.ctrlKey), modifierLabels.separator);\n        }\n        if (part.shiftKey) {\n            this.renderKey(parent, modifierLabels.shiftKey, Boolean(match === null || match === void 0 ? void 0 : match.shiftKey), modifierLabels.separator);\n        }\n        if (part.altKey) {\n            this.renderKey(parent, modifierLabels.altKey, Boolean(match === null || match === void 0 ? void 0 : match.altKey), modifierLabels.separator);\n        }\n        if (part.metaKey) {\n            this.renderKey(parent, modifierLabels.metaKey, Boolean(match === null || match === void 0 ? void 0 : match.metaKey), modifierLabels.separator);\n        }\n        const keyLabel = part.keyLabel;\n        if (keyLabel) {\n            this.renderKey(parent, keyLabel, Boolean(match === null || match === void 0 ? void 0 : match.keyCode), '');\n        }\n    }\n    renderKey(parent, label, highlight, separator) {\n        dom.append(parent, this.createKeyElement(label, highlight ? '.highlight' : ''));\n        if (separator) {\n            dom.append(parent, $('span.monaco-keybinding-key-separator', undefined, separator));\n        }\n    }\n    renderUnbound(parent) {\n        dom.append(parent, this.createKeyElement(localize('unbound', \"Unbound\")));\n    }\n    createKeyElement(label, extraClass = '') {\n        const keyElement = $('span.monaco-keybinding-key' + extraClass, undefined, label);\n        this.keyElements.add(keyElement);\n        return keyElement;\n    }\n    style(styles) {\n        this.labelBackground = styles.keybindingLabelBackground;\n        this.labelForeground = styles.keybindingLabelForeground;\n        this.labelBorder = styles.keybindingLabelBorder;\n        this.labelBottomBorder = styles.keybindingLabelBottomBorder;\n        this.labelShadow = styles.keybindingLabelShadow;\n        this.applyStyles();\n    }\n    applyStyles() {\n        var _a;\n        if (this.element) {\n            for (const keyElement of this.keyElements) {\n                if (this.labelBackground) {\n                    keyElement.style.backgroundColor = (_a = this.labelBackground) === null || _a === void 0 ? void 0 : _a.toString();\n                }\n                if (this.labelBorder) {\n                    keyElement.style.borderColor = this.labelBorder.toString();\n                }\n                if (this.labelBottomBorder) {\n                    keyElement.style.borderBottomColor = this.labelBottomBorder.toString();\n                }\n                if (this.labelShadow) {\n                    keyElement.style.boxShadow = `inset 0 -1px 0 ${this.labelShadow}`;\n                }\n            }\n            if (this.labelForeground) {\n                this.element.style.color = this.labelForeground.toString();\n            }\n        }\n    }\n    static areSame(a, b) {\n        if (a === b || (!a && !b)) {\n            return true;\n        }\n        return !!a && !!b && equals(a.firstPart, b.firstPart) && equals(a.chordPart, b.chordPart);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}