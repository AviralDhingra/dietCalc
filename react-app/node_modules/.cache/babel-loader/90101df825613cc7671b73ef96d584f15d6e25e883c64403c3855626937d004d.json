{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n  constructor(top, left, width, height, textContent, textContentClassName) {\n    this.top = top;\n    this.left = left;\n    this.width = width;\n    this.height = height;\n    this.textContent = textContent;\n    this.textContentClassName = textContentClassName;\n  }\n}\nexport class ViewCursor {\n  constructor(context) {\n    this._context = context;\n    const options = this._context.configuration.options;\n    const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n    this._cursorStyle = options.get(24 /* EditorOption.cursorStyle */);\n    this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n    this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n    this._lineCursorWidth = Math.min(options.get(27 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n    this._isVisible = true;\n    // Create the dom node\n    this._domNode = createFastDomNode(document.createElement('div'));\n    this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n    this._domNode.setHeight(this._lineHeight);\n    this._domNode.setTop(0);\n    this._domNode.setLeft(0);\n    applyFontInfo(this._domNode, fontInfo);\n    this._domNode.setDisplay('none');\n    this._position = new Position(1, 1);\n    this._lastRenderedContent = '';\n    this._renderData = null;\n  }\n  getDomNode() {\n    return this._domNode;\n  }\n  getPosition() {\n    return this._position;\n  }\n  show() {\n    if (!this._isVisible) {\n      this._domNode.setVisibility('inherit');\n      this._isVisible = true;\n    }\n  }\n  hide() {\n    if (this._isVisible) {\n      this._domNode.setVisibility('hidden');\n      this._isVisible = false;\n    }\n  }\n  onConfigurationChanged(e) {\n    const options = this._context.configuration.options;\n    const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n    this._cursorStyle = options.get(24 /* EditorOption.cursorStyle */);\n    this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n    this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n    this._lineCursorWidth = Math.min(options.get(27 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n    applyFontInfo(this._domNode, fontInfo);\n    return true;\n  }\n  onCursorPositionChanged(position) {\n    this._position = position;\n    return true;\n  }\n  /**\n   * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n   * Also returns the next grapheme.\n   */\n  _getGraphemeAwarePosition() {\n    const {\n      lineNumber,\n      column\n    } = this._position;\n    const lineContent = this._context.viewModel.getLineContent(lineNumber);\n    const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n    return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n  }\n  _prepareRender(ctx) {\n    let textContent = '';\n    const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n    if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n      const visibleRange = ctx.visibleRangeForPosition(position);\n      if (!visibleRange || visibleRange.outsideRenderedLine) {\n        // Outside viewport\n        return null;\n      }\n      let width;\n      if (this._cursorStyle === TextEditorCursorStyle.Line) {\n        width = dom.computeScreenAwareSize(this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n        if (width > 2) {\n          textContent = nextGrapheme;\n        }\n      } else {\n        width = dom.computeScreenAwareSize(1);\n      }\n      let left = visibleRange.left;\n      if (width >= 2 && left >= 1) {\n        // try to center cursor\n        left -= 1;\n      }\n      const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n      return new ViewCursorRenderData(top, left, width, this._lineHeight, textContent, '');\n    }\n    const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n    if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n      // Outside viewport\n      return null;\n    }\n    const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n    if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n      // Outside viewport\n      return null;\n    }\n    const range = firstVisibleRangeForCharacter.ranges[0];\n    const width = nextGrapheme === '\\t' ? this._typicalHalfwidthCharacterWidth : range.width < 1 ? this._typicalHalfwidthCharacterWidth : range.width;\n    let textContentClassName = '';\n    if (this._cursorStyle === TextEditorCursorStyle.Block) {\n      const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n      textContent = nextGrapheme;\n      const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n      textContentClassName = lineData.tokens.getClassName(tokenIndex);\n    }\n    let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n    let height = this._lineHeight;\n    // Underline might interfere with clicking\n    if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n      top += this._lineHeight - 2;\n      height = 2;\n    }\n    return new ViewCursorRenderData(top, range.left, width, height, textContent, textContentClassName);\n  }\n  prepareRender(ctx) {\n    this._renderData = this._prepareRender(ctx);\n  }\n  render(ctx) {\n    if (!this._renderData) {\n      this._domNode.setDisplay('none');\n      return null;\n    }\n    if (this._lastRenderedContent !== this._renderData.textContent) {\n      this._lastRenderedContent = this._renderData.textContent;\n      this._domNode.domNode.textContent = this._lastRenderedContent;\n    }\n    this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n    this._domNode.setDisplay('block');\n    this._domNode.setTop(this._renderData.top);\n    this._domNode.setLeft(this._renderData.left);\n    this._domNode.setWidth(this._renderData.width);\n    this._domNode.setLineHeight(this._renderData.height);\n    this._domNode.setHeight(this._renderData.height);\n    return {\n      domNode: this._domNode.domNode,\n      position: this._position,\n      contentLeft: this._renderData.left,\n      height: this._renderData.height,\n      width: 2\n    };\n  }\n}","map":{"version":3,"names":["dom","createFastDomNode","strings","applyFontInfo","TextEditorCursorStyle","Position","Range","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","ViewCursorRenderData","constructor","top","left","width","height","textContent","textContentClassName","ViewCursor","context","_context","options","configuration","fontInfo","get","_cursorStyle","_lineHeight","_typicalHalfwidthCharacterWidth","typicalHalfwidthCharacterWidth","_lineCursorWidth","Math","min","_isVisible","_domNode","document","createElement","setClassName","setHeight","setTop","setLeft","setDisplay","_position","_lastRenderedContent","_renderData","getDomNode","getPosition","show","setVisibility","hide","onConfigurationChanged","e","onCursorPositionChanged","position","_getGraphemeAwarePosition","lineNumber","column","lineContent","viewModel","getLineContent","startOffset","endOffset","getCharContainingOffset","substring","_prepareRender","ctx","nextGrapheme","Line","LineThin","visibleRange","visibleRangeForPosition","outsideRenderedLine","computeScreenAwareSize","getVerticalOffsetForLineNumber","bigNumbersDelta","visibleRangeForCharacter","linesVisibleRangesForRange","length","firstVisibleRangeForCharacter","ranges","range","Block","lineData","getViewLineData","tokenIndex","tokens","findTokenIndexAtOffset","getClassName","Underline","UnderlineThin","prepareRender","render","domNode","setWidth","setLineHeight","contentLeft"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nclass ViewCursorRenderData {\n    constructor(top, left, width, height, textContent, textContentClassName) {\n        this.top = top;\n        this.left = left;\n        this.width = width;\n        this.height = height;\n        this.textContent = textContent;\n        this.textContentClassName = textContentClassName;\n    }\n}\nexport class ViewCursor {\n    constructor(context) {\n        this._context = context;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(24 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(27 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        this._isVisible = true;\n        // Create the dom node\n        this._domNode = createFastDomNode(document.createElement('div'));\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this._domNode.setHeight(this._lineHeight);\n        this._domNode.setTop(0);\n        this._domNode.setLeft(0);\n        applyFontInfo(this._domNode, fontInfo);\n        this._domNode.setDisplay('none');\n        this._position = new Position(1, 1);\n        this._lastRenderedContent = '';\n        this._renderData = null;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return this._position;\n    }\n    show() {\n        if (!this._isVisible) {\n            this._domNode.setVisibility('inherit');\n            this._isVisible = true;\n        }\n    }\n    hide() {\n        if (this._isVisible) {\n            this._domNode.setVisibility('hidden');\n            this._isVisible = false;\n        }\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(46 /* EditorOption.fontInfo */);\n        this._cursorStyle = options.get(24 /* EditorOption.cursorStyle */);\n        this._lineHeight = options.get(61 /* EditorOption.lineHeight */);\n        this._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        this._lineCursorWidth = Math.min(options.get(27 /* EditorOption.cursorWidth */), this._typicalHalfwidthCharacterWidth);\n        applyFontInfo(this._domNode, fontInfo);\n        return true;\n    }\n    onCursorPositionChanged(position) {\n        this._position = position;\n        return true;\n    }\n    /**\n     * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n     * Also returns the next grapheme.\n     */\n    _getGraphemeAwarePosition() {\n        const { lineNumber, column } = this._position;\n        const lineContent = this._context.viewModel.getLineContent(lineNumber);\n        const [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n        return [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n    }\n    _prepareRender(ctx) {\n        let textContent = '';\n        const [position, nextGrapheme] = this._getGraphemeAwarePosition();\n        if (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n            const visibleRange = ctx.visibleRangeForPosition(position);\n            if (!visibleRange || visibleRange.outsideRenderedLine) {\n                // Outside viewport\n                return null;\n            }\n            let width;\n            if (this._cursorStyle === TextEditorCursorStyle.Line) {\n                width = dom.computeScreenAwareSize(this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n                if (width > 2) {\n                    textContent = nextGrapheme;\n                }\n            }\n            else {\n                width = dom.computeScreenAwareSize(1);\n            }\n            let left = visibleRange.left;\n            if (width >= 2 && left >= 1) {\n                // try to center cursor\n                left -= 1;\n            }\n            const top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n            return new ViewCursorRenderData(top, left, width, this._lineHeight, textContent, '');\n        }\n        const visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n        if (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n        if (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n            // Outside viewport\n            return null;\n        }\n        const range = firstVisibleRangeForCharacter.ranges[0];\n        const width = (nextGrapheme === '\\t'\n            ? this._typicalHalfwidthCharacterWidth\n            : (range.width < 1\n                ? this._typicalHalfwidthCharacterWidth\n                : range.width));\n        let textContentClassName = '';\n        if (this._cursorStyle === TextEditorCursorStyle.Block) {\n            const lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n            textContent = nextGrapheme;\n            const tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n            textContentClassName = lineData.tokens.getClassName(tokenIndex);\n        }\n        let top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n        let height = this._lineHeight;\n        // Underline might interfere with clicking\n        if (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n            top += this._lineHeight - 2;\n            height = 2;\n        }\n        return new ViewCursorRenderData(top, range.left, width, height, textContent, textContentClassName);\n    }\n    prepareRender(ctx) {\n        this._renderData = this._prepareRender(ctx);\n    }\n    render(ctx) {\n        if (!this._renderData) {\n            this._domNode.setDisplay('none');\n            return null;\n        }\n        if (this._lastRenderedContent !== this._renderData.textContent) {\n            this._lastRenderedContent = this._renderData.textContent;\n            this._domNode.domNode.textContent = this._lastRenderedContent;\n        }\n        this._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n        this._domNode.setDisplay('block');\n        this._domNode.setTop(this._renderData.top);\n        this._domNode.setLeft(this._renderData.left);\n        this._domNode.setWidth(this._renderData.width);\n        this._domNode.setLineHeight(this._renderData.height);\n        this._domNode.setHeight(this._renderData.height);\n        return {\n            domNode: this._domNode.domNode,\n            position: this._position,\n            contentLeft: this._renderData.left,\n            height: this._renderData.height,\n            width: 2\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}