{"ast":null,"code":"import { addToValueTree, toValuesTree } from './configuration.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfigurationModel extends ConfigurationModel {\n  constructor() {\n    let configurationDefaultsOverrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n    const keys = Object.keys(properties);\n    const contents = Object.create(null);\n    const overrides = [];\n    for (const key in properties) {\n      const defaultOverrideValue = configurationDefaultsOverrides[key];\n      const value = defaultOverrideValue !== undefined ? defaultOverrideValue : properties[key].default;\n      addToValueTree(contents, key, value, message => console.error(`Conflict in default settings: ${message}`));\n    }\n    for (const key of Object.keys(contents)) {\n      if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        overrides.push({\n          identifiers: overrideIdentifiersFromKey(key),\n          keys: Object.keys(contents[key]),\n          contents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`))\n        });\n      }\n    }\n    super(contents, keys, overrides);\n  }\n}","map":{"version":3,"names":["addToValueTree","toValuesTree","ConfigurationModel","Extensions","overrideIdentifiersFromKey","OVERRIDE_PROPERTY_REGEX","Registry","DefaultConfigurationModel","constructor","configurationDefaultsOverrides","properties","as","Configuration","getConfigurationProperties","keys","Object","contents","create","overrides","key","defaultOverrideValue","value","undefined","default","message","console","error","test","push","identifiers"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurations.js"],"sourcesContent":["import { addToValueTree, toValuesTree } from './configuration.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfigurationModel extends ConfigurationModel {\n    constructor(configurationDefaultsOverrides = {}) {\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        const keys = Object.keys(properties);\n        const contents = Object.create(null);\n        const overrides = [];\n        for (const key in properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const value = defaultOverrideValue !== undefined ? defaultOverrideValue : properties[key].default;\n            addToValueTree(contents, key, value, message => console.error(`Conflict in default settings: ${message}`));\n        }\n        for (const key of Object.keys(contents)) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                overrides.push({\n                    identifiers: overrideIdentifiersFromKey(key),\n                    keys: Object.keys(contents[key]),\n                    contents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n                });\n            }\n        }\n        super(contents, keys, overrides);\n    }\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,YAAY,QAAQ,oBAAoB;AACjE,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,UAAU,EAAEC,0BAA0B,EAAEC,uBAAuB,QAAQ,4BAA4B;AAC5G,SAASC,QAAQ,QAAQ,mCAAmC;AAC5D,OAAO,MAAMC,yBAAyB,SAASL,kBAAkB,CAAC;EAC9DM,WAAW,GAAsC;IAAA,IAArCC,8BAA8B,uEAAG,CAAC,CAAC;IAC3C,MAAMC,UAAU,GAAGJ,QAAQ,CAACK,EAAE,CAACR,UAAU,CAACS,aAAa,CAAC,CAACC,0BAA0B,EAAE;IACrF,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACJ,UAAU,CAAC;IACpC,MAAMM,QAAQ,GAAGD,MAAM,CAACE,MAAM,CAAC,IAAI,CAAC;IACpC,MAAMC,SAAS,GAAG,EAAE;IACpB,KAAK,MAAMC,GAAG,IAAIT,UAAU,EAAE;MAC1B,MAAMU,oBAAoB,GAAGX,8BAA8B,CAACU,GAAG,CAAC;MAChE,MAAME,KAAK,GAAGD,oBAAoB,KAAKE,SAAS,GAAGF,oBAAoB,GAAGV,UAAU,CAACS,GAAG,CAAC,CAACI,OAAO;MACjGvB,cAAc,CAACgB,QAAQ,EAAEG,GAAG,EAAEE,KAAK,EAAEG,OAAO,IAAIC,OAAO,CAACC,KAAK,CAAE,iCAAgCF,OAAQ,EAAC,CAAC,CAAC;IAC9G;IACA,KAAK,MAAML,GAAG,IAAIJ,MAAM,CAACD,IAAI,CAACE,QAAQ,CAAC,EAAE;MACrC,IAAIX,uBAAuB,CAACsB,IAAI,CAACR,GAAG,CAAC,EAAE;QACnCD,SAAS,CAACU,IAAI,CAAC;UACXC,WAAW,EAAEzB,0BAA0B,CAACe,GAAG,CAAC;UAC5CL,IAAI,EAAEC,MAAM,CAACD,IAAI,CAACE,QAAQ,CAACG,GAAG,CAAC,CAAC;UAChCH,QAAQ,EAAEf,YAAY,CAACe,QAAQ,CAACG,GAAG,CAAC,EAAEK,OAAO,IAAIC,OAAO,CAACC,KAAK,CAAE,sCAAqCF,OAAQ,EAAC,CAAC;QACnH,CAAC,CAAC;MACN;IACJ;IACA,KAAK,CAACR,QAAQ,EAAEF,IAAI,EAAEI,SAAS,CAAC;EACpC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}