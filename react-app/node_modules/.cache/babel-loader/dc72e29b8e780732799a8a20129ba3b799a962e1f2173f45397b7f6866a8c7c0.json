{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n  constructor(_visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n    this._visiblePosition = _visiblePosition;\n    this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n    this._cursorPosition = _cursorPosition;\n  }\n  static capture(editor) {\n    let visiblePosition = null;\n    let visiblePositionScrollDelta = 0;\n    if (editor.getScrollTop() !== 0) {\n      const visibleRanges = editor.getVisibleRanges();\n      if (visibleRanges.length > 0) {\n        visiblePosition = visibleRanges[0].getStartPosition();\n        const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n        visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n      }\n    }\n    return new StableEditorScrollState(visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n  }\n  restore(editor) {\n    if (this._visiblePosition) {\n      const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n      editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n    }\n  }\n  restoreRelativeVerticalPositionOfCursor(editor) {\n    const currentCursorPosition = editor.getPosition();\n    if (!this._cursorPosition || !currentCursorPosition) {\n      return;\n    }\n    const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n    editor.setScrollTop(editor.getScrollTop() + offset);\n  }\n}","map":{"version":3,"names":["StableEditorScrollState","constructor","_visiblePosition","_visiblePositionScrollDelta","_cursorPosition","capture","editor","visiblePosition","visiblePositionScrollDelta","getScrollTop","visibleRanges","getVisibleRanges","length","getStartPosition","visiblePositionScrollTop","getTopForPosition","lineNumber","column","getPosition","restore","setScrollTop","restoreRelativeVerticalPositionOfCursor","currentCursorPosition","offset","getTopForLineNumber"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/editor/browser/stableEditorScroll.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class StableEditorScrollState {\n    constructor(_visiblePosition, _visiblePositionScrollDelta, _cursorPosition) {\n        this._visiblePosition = _visiblePosition;\n        this._visiblePositionScrollDelta = _visiblePositionScrollDelta;\n        this._cursorPosition = _cursorPosition;\n    }\n    static capture(editor) {\n        let visiblePosition = null;\n        let visiblePositionScrollDelta = 0;\n        if (editor.getScrollTop() !== 0) {\n            const visibleRanges = editor.getVisibleRanges();\n            if (visibleRanges.length > 0) {\n                visiblePosition = visibleRanges[0].getStartPosition();\n                const visiblePositionScrollTop = editor.getTopForPosition(visiblePosition.lineNumber, visiblePosition.column);\n                visiblePositionScrollDelta = editor.getScrollTop() - visiblePositionScrollTop;\n            }\n        }\n        return new StableEditorScrollState(visiblePosition, visiblePositionScrollDelta, editor.getPosition());\n    }\n    restore(editor) {\n        if (this._visiblePosition) {\n            const visiblePositionScrollTop = editor.getTopForPosition(this._visiblePosition.lineNumber, this._visiblePosition.column);\n            editor.setScrollTop(visiblePositionScrollTop + this._visiblePositionScrollDelta);\n        }\n    }\n    restoreRelativeVerticalPositionOfCursor(editor) {\n        const currentCursorPosition = editor.getPosition();\n        if (!this._cursorPosition || !currentCursorPosition) {\n            return;\n        }\n        const offset = editor.getTopForLineNumber(currentCursorPosition.lineNumber) - editor.getTopForLineNumber(this._cursorPosition.lineNumber);\n        editor.setScrollTop(editor.getScrollTop() + offset);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,MAAMA,uBAAuB,CAAC;EACjCC,WAAW,CAACC,gBAAgB,EAAEC,2BAA2B,EAAEC,eAAe,EAAE;IACxE,IAAI,CAACF,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,2BAA2B,GAAGA,2BAA2B;IAC9D,IAAI,CAACC,eAAe,GAAGA,eAAe;EAC1C;EACA,OAAOC,OAAO,CAACC,MAAM,EAAE;IACnB,IAAIC,eAAe,GAAG,IAAI;IAC1B,IAAIC,0BAA0B,GAAG,CAAC;IAClC,IAAIF,MAAM,CAACG,YAAY,EAAE,KAAK,CAAC,EAAE;MAC7B,MAAMC,aAAa,GAAGJ,MAAM,CAACK,gBAAgB,EAAE;MAC/C,IAAID,aAAa,CAACE,MAAM,GAAG,CAAC,EAAE;QAC1BL,eAAe,GAAGG,aAAa,CAAC,CAAC,CAAC,CAACG,gBAAgB,EAAE;QACrD,MAAMC,wBAAwB,GAAGR,MAAM,CAACS,iBAAiB,CAACR,eAAe,CAACS,UAAU,EAAET,eAAe,CAACU,MAAM,CAAC;QAC7GT,0BAA0B,GAAGF,MAAM,CAACG,YAAY,EAAE,GAAGK,wBAAwB;MACjF;IACJ;IACA,OAAO,IAAId,uBAAuB,CAACO,eAAe,EAAEC,0BAA0B,EAAEF,MAAM,CAACY,WAAW,EAAE,CAAC;EACzG;EACAC,OAAO,CAACb,MAAM,EAAE;IACZ,IAAI,IAAI,CAACJ,gBAAgB,EAAE;MACvB,MAAMY,wBAAwB,GAAGR,MAAM,CAACS,iBAAiB,CAAC,IAAI,CAACb,gBAAgB,CAACc,UAAU,EAAE,IAAI,CAACd,gBAAgB,CAACe,MAAM,CAAC;MACzHX,MAAM,CAACc,YAAY,CAACN,wBAAwB,GAAG,IAAI,CAACX,2BAA2B,CAAC;IACpF;EACJ;EACAkB,uCAAuC,CAACf,MAAM,EAAE;IAC5C,MAAMgB,qBAAqB,GAAGhB,MAAM,CAACY,WAAW,EAAE;IAClD,IAAI,CAAC,IAAI,CAACd,eAAe,IAAI,CAACkB,qBAAqB,EAAE;MACjD;IACJ;IACA,MAAMC,MAAM,GAAGjB,MAAM,CAACkB,mBAAmB,CAACF,qBAAqB,CAACN,UAAU,CAAC,GAAGV,MAAM,CAACkB,mBAAmB,CAAC,IAAI,CAACpB,eAAe,CAACY,UAAU,CAAC;IACzIV,MAAM,CAACc,YAAY,CAACd,MAAM,CAACG,YAAY,EAAE,GAAGc,MAAM,CAAC;EACvD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}