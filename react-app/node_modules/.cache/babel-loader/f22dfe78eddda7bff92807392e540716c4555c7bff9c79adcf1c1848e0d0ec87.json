{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n  /**\n   * A schema that is used for models that exist in memory\n   * only and that have no correspondence on a server or such.\n   */\n  Schemas.inMemory = 'inmemory';\n  /**\n   * A schema that is used for setting files\n   */\n  Schemas.vscode = 'vscode';\n  /**\n   * A schema that is used for internal private files\n   */\n  Schemas.internal = 'private';\n  /**\n   * A walk-through document.\n   */\n  Schemas.walkThrough = 'walkThrough';\n  /**\n   * An embedded code snippet.\n   */\n  Schemas.walkThroughSnippet = 'walkThroughSnippet';\n  Schemas.http = 'http';\n  Schemas.https = 'https';\n  Schemas.file = 'file';\n  Schemas.mailto = 'mailto';\n  Schemas.untitled = 'untitled';\n  Schemas.data = 'data';\n  Schemas.command = 'command';\n  Schemas.vscodeRemote = 'vscode-remote';\n  Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n  Schemas.vscodeUserData = 'vscode-userdata';\n  Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n  Schemas.vscodeNotebook = 'vscode-notebook';\n  Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n  Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n  Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n  Schemas.vscodeInteractive = 'vscode-interactive';\n  Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n  Schemas.vscodeSettings = 'vscode-settings';\n  Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n  Schemas.vscodeTerminal = 'vscode-terminal';\n  /**\n   * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n   */\n  Schemas.webviewPanel = 'webview-panel';\n  /**\n   * Scheme used for loading the wrapper html and script in webviews.\n   */\n  Schemas.vscodeWebview = 'vscode-webview';\n  /**\n   * Scheme used for extension pages\n   */\n  Schemas.extension = 'extension';\n  /**\n   * Scheme used as a replacement of `file` scheme to load\n   * files with our custom protocol handler (desktop only).\n   */\n  Schemas.vscodeFileResource = 'vscode-file';\n  /**\n   * Scheme used for temporary resources\n   */\n  Schemas.tmp = 'tmp';\n  /**\n   * Scheme used vs live share\n   */\n  Schemas.vsls = 'vsls';\n  /**\n   * Scheme used for the Source Control commit input's text document\n   */\n  Schemas.vscodeSourceControl = 'vscode-scm';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n  constructor() {\n    this._hosts = Object.create(null);\n    this._ports = Object.create(null);\n    this._connectionTokens = Object.create(null);\n    this._preferredWebSchema = 'http';\n    this._delegate = null;\n    this._remoteResourcesPath = `/${Schemas.vscodeRemoteResource}`;\n  }\n  setPreferredWebSchema(schema) {\n    this._preferredWebSchema = schema;\n  }\n  rewrite(uri) {\n    if (this._delegate) {\n      return this._delegate(uri);\n    }\n    const authority = uri.authority;\n    let host = this._hosts[authority];\n    if (host && host.indexOf(':') !== -1) {\n      host = `[${host}]`;\n    }\n    const port = this._ports[authority];\n    const connectionToken = this._connectionTokens[authority];\n    let query = `path=${encodeURIComponent(uri.path)}`;\n    if (typeof connectionToken === 'string') {\n      query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n    }\n    return URI.from({\n      scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n      authority: `${host}:${port}`,\n      path: this._remoteResourcesPath,\n      query\n    });\n  }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n  asBrowserUri(uriOrModule, moduleIdToUrl) {\n    const uri = this.toUri(uriOrModule, moduleIdToUrl);\n    // Handle remote URIs via `RemoteAuthorities`\n    if (uri.scheme === Schemas.vscodeRemote) {\n      return RemoteAuthorities.rewrite(uri);\n    }\n    // Convert to `vscode-file` resource..\n    if (\n    // ...only ever for `file` resources\n    uri.scheme === Schemas.file && (\n    // ...and we run in native environments\n    platform.isNative ||\n    // ...or web worker extensions on desktop\n    platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)) {\n      return uri.with({\n        scheme: Schemas.vscodeFileResource,\n        // We need to provide an authority here so that it can serve\n        // as origin for network and loading matters in chromium.\n        // If the URI is not coming with an authority already, we\n        // add our own\n        authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n        query: null,\n        fragment: null\n      });\n    }\n    return uri;\n  }\n  toUri(uriOrModule, moduleIdToUrl) {\n    if (URI.isUri(uriOrModule)) {\n      return uriOrModule;\n    }\n    return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n  }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();","map":{"version":3,"names":["platform","URI","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","data","command","vscodeRemote","vscodeRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebook","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellOutput","vscodeInteractive","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","connectionTokenQueryName","RemoteAuthoritiesImpl","constructor","_hosts","Object","create","_ports","_connectionTokens","_preferredWebSchema","_delegate","_remoteResourcesPath","setPreferredWebSchema","schema","rewrite","uri","authority","host","indexOf","port","connectionToken","query","encodeURIComponent","path","from","scheme","isWeb","RemoteAuthorities","FileAccessImpl","asBrowserUri","uriOrModule","moduleIdToUrl","toUri","isNative","isWebWorker","globals","origin","FALLBACK_AUTHORITY","with","fragment","isUri","parse","toUrl","FileAccess"],"sources":["/home/deathblade287/Desktop/AI-MODELS-TESTING/react-app/node_modules/monaco-editor/esm/vs/base/common/network.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebook = 'vscode-notebook';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeInteractive = 'vscode-interactive';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._remoteResourcesPath = `/${Schemas.vscodeRemoteResource}`;\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            return this._delegate(uri);\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n    asBrowserUri(uriOrModule, moduleIdToUrl) {\n        const uri = this.toUri(uriOrModule, moduleIdToUrl);\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n    }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}